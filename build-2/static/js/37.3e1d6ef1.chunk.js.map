{"version":3,"sources":["components/forms/Field/index.tsx","components/forms/TextField/index.tsx","assets/icons/qrcode.svg","components/ScanQRModal/style.ts","components/ScanQRModal/index.tsx","components/ScanQRModal/ScanQRWrapper/index.tsx","components/forms/SelectField/index.tsx","components/layout/Heading/index.tsx","components/layout/Heading/index.module.scss","components/NetworkLabel/NetworkLabel.tsx","components/Stepper/stepperContext.tsx","components/forms/AddressInput/index.tsx","components/layout/Page/index.tsx","components/layout/Page/index.module.scss","components/Stepper/Stepper.tsx","components/StepperForm/StepperForm.tsx","logic/hooks/useMnemonicName.ts","logic/hooks/useMnemonicName.dict.ts","routes/CreateSafePage/fields/createSafeFields.tsx","routes/CreateSafePage/steps/NameNewSafeStep.tsx","routes/CreateSafePage/steps/OwnersAndConfirmationsNewSafeStep.tsx","logic/hooks/useEstimateSafeCreationGas.tsx","routes/CreateSafePage/steps/ReviewNewSafeStep.tsx","logic/safe/transactions/txMonitor.ts","routes/opening/components/Footer.tsx","routes/opening/steps.ts","routes/opening/assets/safe-created.svg","routes/opening/assets/vault-error.svg","routes/opening/assets/creation-process.gif","routes/opening/utils/getSafeAddressFromLogs.ts","routes/opening/index.tsx","routes/CreateSafePage/components/SafeCreationProcess.tsx","routes/CreateSafePage/steps/SelectWalletAndNetworkStep.tsx","routes/CreateSafePage/CreateSafePage.tsx"],"names":["GnoField","props","overflowStyle","overflow","width","useStyles","makeStyles","createStyles","root","paddingTop","lg","paddingBottom","lineHeight","TextField","input","name","onChange","value","restInput","inputAdornment","meta","multiline","rows","testId","text","rest","classes","helperText","undefined","showError","touched","pristine","valid","hasError","error","modifiedSinceLastSubmit","submitError","errorMessage","isInactiveAndPristineOrUntouched","active","isInvalidAndUntouched","disableUnderline","inputRoot","statusClasses","inputProps","autoComplete","inputRootProps","className","InputProps","style","styles","heading","padding","justifyContent","maxHeight","boxSizing","loaderContainer","height","close","color","secondaryText","detailsContainer","backgroundColor","background","buttonRow","button","marginLeft","sm","ScanQRModal","isOpen","onClose","onScan","useState","fileUploadModalOpen","setFileUploadModalOpen","setError","cameraBlocked","setCameraBlocked","scannerRef","React","openImageDialog","current","useEffect","onFileScannedResolve","successData","console","Modal","description","handleClose","open","title","Row","align","grow","Paragraph","noMargin","size","IconButton","disableRipple","onClick","Hairline","Col","layout","middle","Block","margin","legacyMode","onError","err","data","ref","facingMode","Button","minWidth","variant","qrCodeBtn","cursor","ScanQRWrapper","handleScan","qrModalOpen","setQrModalOpen","closeQrModal","Img","alt","role","src","QRIcon","SelectInput","disableError","formControlProps","label","renderValue","dirtySinceLastSubmit","htmlFor","cx","classNames","bind","Heading","children","tag","truncate","capitalize","module","exports","NetworkLabel","networkInfo","flexGrow","selectedNetwork","getChainInfo","StyledLabel","theme","chainName","styled","span","extraSmallFontSize","xs","border","textColor","fontColor","StepperContext","createContext","useStepper","context","useContext","Object","keys","length","Error","StepperProvider","onFinish","store","disableNextButton","stepsComponents","currentStep","setCurrentStep","steps","Children","toArray","CurrentStepComponent","nextButtonType","nextButtonLabel","isSubmitButton","isFirstStep","isLastStep","customNextButtonLabel","state","onClickPreviousStep","history","goBack","step","onClickNextStep","Provider","AddressInput","placeholder","fieldMutator","validators","defaultValue","disabled","currentInput","setCurrentInput","resolutions","setResolutions","resolvedAddress","isResolving","sanitizedValidators","useCallback","val","parsed","parsePrefixedAddress","composeValidators","address","allValidators","useMemo","required","mustBeEthereumAddress","onValueChange","rawVal","trimSpaces","isValidEnsName","isValidCryptoDomainName","prev","getAddressFromDomain","then","resolverAddr","formattedAddress","checksumAddress","catch","logError","Errors","_101","message","checkedAddress","adornment","endAdornment","position","component","spellCheck","validate","Page","page","StepperComponent","Stepper","activeStep","orientation","map","index","isStepLabelClickable","currentComponent","backButtonLabel","StepLabel","stepLabel","StepContent","Paper","elevation","controlStyle","center","backButton","type","nextButton","maxWidth","boxShadow","borderRadius","marginRight","fontWeight","boldFont","palette","secondary","main","StepElement","StepperForm","onSubmit","initialValues","setValidate","onSubmitForm","setOnSubmitForm","filter","Boolean","list","ComponentStep","values","handleSubmit","submitting","StepFormElement","animals","trim","split","adjectives","getRandomItem","arr","Math","floor","random","useMnemonicName","noun","setName","adj","getRandomName","useMnemonicSafeName","networkName","getChainName","toLowerCase","FIELD_CREATE_CUSTOM_SAFE_NAME","FIELD_CREATE_SUGGESTED_SAFE_NAME","FIELD_SAFE_OWNERS_LIST","FIELD_NEW_SAFE_THRESHOLD","FIELD_MAX_OWNER_NUMBER","FIELD_NEW_SAFE_PROXY_SALT","FIELD_NEW_SAFE_GAS_LIMIT","FIELD_NEW_SAFE_GAS_PRICE","FIELD_NEW_SAFE_CREATION_TX_HASH","SAFE_PENDING_CREATION_STORAGE_KEY","NameNewSafeStep","provider","useSelector","providerNameSelector","formValues","useForm","getState","BlockWithPadding","FieldContainer","Field","Link","href","rel","target","a","OwnersAndConfirmationsNewSafeStep","createSafeForm","addressBook","currentNetworkAddressBookAsMap","createSafeFormValues","formErrors","errors","owners","threshold","maxOwnerNumber","ParagraphWithMargin","StyledLink","as","RowHeader","nameFieldName","addressFieldName","hasOwnerAddressError","showDeleteIcon","OwnerNameField","minMaxLength","change","addressName","InputAdornment","CheckIconAddressAdornment","OwnersIconsContainer","ButtonHelper","ownersUpdated","owner","onClickRemoveOwner","dataTestId","tooltip","OwnerContainer","newEmptyOwner","updatedMaxOwnerNumbers","SelectField","minValue","_","option","MenuItem","StyledParagraph","ownersAndConfirmationsNewSafeStepValidations","addresses","forEach","slice","includes","ADDRESS_REPEATED_ERROR","THRESHOLD_ERROR","CheckCircle","estimateGas","userAccount","numOwners","safeCreationSalt","Promise","all","estimateGasForDeployingSafe","calculateGasPrice","gasEstimation","gasPrice","estimatedGasCosts","parseInt","nativeCurrency","getNativeCurrency","gasCost","fromTokenUnit","decimals","gasCostFormatted","formatAmount","gasLimit","ReviewNewSafeStep","defaultSafeValue","safeName","numberOfOwners","setGasEstimation","userAccountSelector","addressesSerialized","JSON","stringify","addressesList","parse","useEstimateSafeCreationGas","DetailsContainer","SafeNameParagraph","weight","TableContainer","TitleContainer","ownerName","ownerAddress","Fragment","OwnersAddressesContainer","PrefixedEthHashInfo","hash","showAvatar","showCopyBtn","explorerUrl","getExplorerInfo","DescriptionContainer","symbol","findSpeedupTx","sender","nonce","web3","getWeb3ReadOnly","eth","getBlock","latestBlock","replacementTransaction","transactions","find","transaction","sameAddress","from","sameString","txMonitor","options","tries","resolve","reject","maxRetries","CodedException","_805","monitorFn","params","getTransaction","getTransactionReceipt","firstTxReceipt","replacementTx","replacementReceipt","setTimeout","delay","StyledText","Text","ButtonWithMargin","FooterContainer","div","LoaderText","GenericFooter","safeCreationTxHash","getHashedExplorerUrl","match","exec","explorerDomain","ErrorFooter","onCancel","onRetry","id","instruction","footerComponent","continueButtonDisabled","onContinue","abiDecoder","addABI","getProxyFactoryDeployment","version","LATEST_SAFE_VERSION","abi","getNewSafeAddressFromLogs","logs","proxyCreationEvent","decodeLogs","proxyInformation","events","SafeDeployment","FooterComponent","creationTxHash","onSuccess","submittedPromise","loading","setLoading","stepIndex","setStepIndex","setSafeCreationTxHash","createdSafeAddress","setCreatedSafeAddress","intervalStarted","setIntervalStarted","waitingSafeDeployed","setWaitingSafeDeployed","setContinueButtonDisabled","dispatch","useDispatch","confirmationStep","isConfirmationStep","showSnackbarError","isTxPendingError","enqueueSnackbar","NOTIFICATIONS","TX_PENDING_MSG","CREATE_SAFE_FAILED_MSG","_800","onRetryTx","loadContracts","instantiateSafeContracts","handlePromise","receipt","transactionHash","isTxMined","txHash","getWeb3","blockNumber","status","interval","setInterval","clearInterval","awaitUntilSafeIsDeployed","safeAddress","ProxyCreation","returnValues","proxy","getCode","EMPTY_DATA","LoaderContainer","Wrapper","Title","Nav","activeStepIndex","Body","BodyImage","VaultErrorSvg","VaultLoading","SuccessSvg","BodyDescription","CardTitle","BodyInstruction","FullParagraph","inversecolors","toString","$stepIndex","BodyFooter","BackButton","colors","white","connected","InlinePrefixedEthHashInfo","goToWelcomePage","push","WELCOME_ROUTE","sleep","ms","SafeCreationProcess","creationTxPromise","setCreationTxPromise","trackEvent","useAnalytics","userAddressAccount","chainId","currentChainId","showModal","setShowModal","modalData","setModalData","showCouldNotLoadModal","setShowCouldNotLoadModal","newSafeAddress","setNewSafeAddress","createNewSafe","safeCreationFormValues","loadFromStorage","confirmations","ownerAddresses","deploymentTx","getSafeDeploymentTransaction","send","gas","getGasParam","once","saveToStorage","encodeABI","txReceipt","log","onSafeCreated","ownersAddressBookEntry","makeAddressBookEntry","safeAddressBookEntry","addressBookSafeLoad","USER_EVENTS","CREATE_SAFE","backOff","getSafeInfo","startingDelay","maxDelay","numOfAttempts","retry","e","info","buildSafe","safeProps","addOrUpdateSafe","removeFromStorage","onClickModalButton","pathname","generateSafeRoute","SAFE_ROUTES","ASSETS_BALANCES","shortName","getShortName","tx","body","EmphasisLabel","footer","ButtonContainer","Container","SwitchNetworkContainer","StyledDialogTitle","DialogTitle","StyledDialogContent","DialogContent","NetworkLabelItem","SelectWalletAndNetworkStep","isNetworkSelectorPopupOpen","setIsNetworkSelectorPopupOpen","isWalletConnected","isWrongNetwork","shouldSwitchWalletChain","openNetworkSelectorPopup","onNetworkSwitch","setChainId","ConnectButton","WalletSwitch","Dialog","disableTypography","Typography","dividers","List","getChains","network","CreateSafePage","safePendingToBeCreated","setSafePendingToBeCreated","isLoading","setIsLoading","providerName","checkIfSafeIsPendingToBeCreated","userWalletAddress","location","useLocation","safeRandomName","initialFormValues","setInitialFormValues","initialValuesFromUrl","userAddress","suggestedSafeName","query","queryString","search","arrayFormat","owneraddresses","ownernames","isOwnersPresentInTheUrl","ownersFromUrl","Array","isArray","ownersNamesFromUrl","userAddressName","ownerNames","thresholdFromURl","Number","isValidThresholdInTheUrl","isNaN","reduce","ownerAddressFields","ownerNameFields","Date","now","getInitialValues","BackIcon","newSafeFormValues"],"mappings":"8IAIeA,IAFE,SAACC,GAAD,OAAoC,cAAC,IAAD,eAAWA,M,oMCI1DC,EAAgB,CACpBC,SAAU,SACVC,MAAO,QAYHC,EAAYC,aATH,kBACbC,YAAa,CACXC,KAAM,CACJC,WAAYC,KACZC,cAAe,OACfC,WAAY,QAoFHC,IAnDG,SAACZ,GACjB,MASIA,EARFa,MAASC,EADX,EACWA,KAAMC,EADjB,EACiBA,SAAUC,EAD3B,EAC2BA,MAAUC,EADrC,iBAEEC,EAOElB,EAPFkB,eACAC,EAMEnB,EANFmB,KACAC,EAKEpB,EALFoB,UACAC,EAIErB,EAJFqB,KACAC,EAGEtB,EAHFsB,OACAC,EAEEvB,EAFFuB,KACGC,EARL,YASIxB,EATJ,GAUMyB,EAAUrB,IACVsB,EAAaV,EAAQO,OAAOI,EAC5BC,GAAaT,EAAKU,UAAYV,EAAKW,YAAcX,EAAKY,MACtDC,IAAab,EAAKc,QAAWd,EAAKe,2BAA6Bf,EAAKgB,YACpEC,EAAejB,EAAKc,OAASd,EAAKgB,YAClCE,GAAoClB,EAAKmB,SAAWnB,EAAKW,WAAaX,EAAKU,SAC3EU,EAA8C,qBAAfpB,EAAKc,QAAgCd,EAAKU,QAEzEW,EAAmBH,GAAoCE,EAEvDE,EAAYf,EAAaD,EAAQlB,KAAO,GACxCmC,EAAgBvB,EAAKY,MAAQ,UAAYC,GAAYJ,EAAY,YAAc,GAC/Ee,EAAU,2BACX1B,GADW,IAEd2B,aAAc,MACd,cAAetB,IAEXuB,EAAc,2BACf3B,GADe,IAElB4B,UAAU,GAAD,OAAKL,EAAL,YAAkBC,GAC3BF,iBAAkBA,IAGpB,OACE,cAAC,IAAD,aACEP,MAAOD,GAAYJ,EACnBF,WAAYM,GAAYJ,EAAYQ,EAAeV,GAAc,IACjEiB,WAAYA,EACZI,WAAYF,EACZzB,UAAWA,EACXN,KAAMA,EACNC,SAAUA,EACVM,KAAMA,EACN2B,MAAO/C,EACPe,MAAOA,GACHQ,M,gGC/FK,MAA0B,mC,+DCG5ByB,EAAS3C,YAAa,CACjC4C,QAAS,CACPC,QAAS1C,KACT2C,eAAgB,gBAChBC,UAAW,OACXC,UAAW,cAEbC,gBAAiB,CACfpD,MAAO,OACPqD,OAAQ,QAEVC,MAAO,CACLD,OAAQ,OACRrD,MAAO,OACPuD,MAAOC,iBAETC,iBAAkB,CAChBC,gBAAiBC,aACjBT,UAAW,SAEbU,UAAW,CACTP,OAAQ,OACRJ,eAAgB,UAElBY,OAAQ,CACN,eAAgB,CACdC,WAAYC,S,qECZZ9D,EAAYC,YAAW4C,GAQhBkB,EAAc,SAAC,GAA4D,IAA1DC,EAAyD,EAAzDA,OAAQC,EAAiD,EAAjDA,QAASC,EAAwC,EAAxCA,OACvC7C,EAAUrB,IAChB,EAAsDmE,oBAAkB,GAAxE,mBAAOC,EAAP,KAA4BC,EAA5B,KACA,EAA0BF,mBAAwB,MAAlD,mBAAOtC,EAAP,KAAcyC,EAAd,KACA,EAA0CH,oBAAkB,GAA5D,mBAAOI,EAAP,KAAsBC,EAAtB,KACMC,EAAkBC,cAClBC,EAAkBD,eAAkB,WACxCD,EAAWG,QAAQD,oBAClB,CAACF,IAEJI,qBAAU,WACHT,IAAuBG,GAAkB1C,IAC5CwC,GAAuB,GACvBM,OAED,CAACJ,EAAeI,EAAiBP,EAAqBC,EAAwBxC,IAEjF,IAAMiD,EAAuB,SAACjD,EAAqBkD,GACjD,GAAIlD,EASF,OARAmD,QAAQnD,MAAM,gBAAiBA,QAEZ,oBAAfA,EAAMnB,MAA6C,6BAAfmB,EAAMnB,MAC5C8D,GAAiB,GACjBH,GAAuB,IAEvBC,EAAS,6BAKTS,EACFb,EAAOa,GACER,GACTD,EAAS,6BAIb,OACE,eAACW,EAAA,EAAD,CAAOC,YAAY,sBAAsBC,YAAalB,EAASmB,KAAMpB,EAAQqB,MAAM,iBAAnF,UACE,eAACC,EAAA,EAAD,CAAKC,MAAM,SAAS7C,UAAWrB,EAAQyB,QAAS0C,MAAI,EAApD,UACE,cAACC,EAAA,EAAD,CAAWC,UAAQ,EAACC,KAAK,KAAzB,qBAGA,cAACC,EAAA,EAAD,CAAYC,eAAa,EAACC,QAAS7B,EAAnC,SACE,cAAC,IAAD,CAAOvB,UAAWrB,EAAQgC,aAG9B,cAAC0C,EAAA,EAAD,IACA,eAACC,EAAA,EAAD,CAAKtD,UAAWrB,EAAQmC,iBAAkByC,OAAO,SAASC,OAAO,KAAjE,UACGrE,GACC,cAACsE,EAAA,EAAD,CAAOpD,QAAQ,KAAKqD,OAAO,KAA3B,SACGvE,IAGL,cAAC,IAAD,CACEwE,WAAY9B,EACZ+B,QAAS,SAACC,GAAD,OAAgBzB,EAAqByB,EAAK,OACnDrC,OAAQ,SAACsC,GAAD,OAAkB1B,EAAqB,KAAM0B,IACrDC,IAAKhC,EACL7B,MAAO,CAAE7C,MAAO,QAASqD,OAAQ,SACjCsD,WAAW,YAGf,cAACX,EAAA,EAAD,IACA,eAACT,EAAA,EAAD,CAAKC,MAAM,SAAS7C,UAAWrB,EAAQsC,UAAvC,UACE,cAACgD,EAAA,EAAD,CAAQjE,UAAWrB,EAAQuC,OAAQN,MAAM,YAAYsD,SAAU,IAAKd,QAAS7B,EAA7E,mBAGA,cAAC0C,EAAA,EAAD,CACEjE,UAAWrB,EAAQuC,OACnBN,MAAM,UACNsD,SAAU,IACVd,QAAS,WACPtB,GAAiB,GACjBF,EAAS,MACTD,GAAuB,IAEzBwC,QAAQ,YATV,oC,SCtFF7G,EAAYC,YAAW,CAC3B6G,UAAW,CACTC,OAAQ,aASCC,EAAgB,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,WAAY/F,EAAkC,EAAlCA,OACpCG,EAAUrB,IAChB,EAAsCmE,oBAAS,GAA/C,mBAAO+C,EAAP,KAAoBC,EAApB,KAMMC,EAAe,WACnBD,GAAe,IAOjB,OACE,qCACE,cAACE,EAAA,EAAD,CACEC,IAAI,UACJ5E,UAAWrB,EAAQyF,UACnB1D,OAAQ,GACR0C,QAAS,WAjBbqB,GAAe,IAkBXI,KAAK,SACLC,IAAKC,EACLvG,OAAQA,GAAU,YAEnBgG,GAAe,cAAC,EAAD,CAAalD,OAAQkD,EAAajD,QAASmD,EAAclD,OAftD,SAACtD,GACtBqG,EAAWrG,EAAOwG,W,oNC1BhBxE,EAAQ,CACZgE,SAAU,QAmCGc,IAhCK,SAAC,GASd,IARLrG,EAQI,EARJA,QACAsG,EAOI,EAPJA,aACAC,EAMI,EANJA,iBAMI,IALJnH,MAASC,EAKL,EALKA,KAAMC,EAKX,EALWA,SAAUC,EAKrB,EALqBA,MAAUC,EAK/B,iBAJJgH,EAII,EAJJA,MACA9G,EAGI,EAHJA,KACA+G,EAEI,EAFJA,YACG1G,EACC,iBACEI,GAAcT,EAAKgB,cAAgBhB,EAAKgH,sBAAyBhH,EAAKc,QAAUd,EAAKU,UAAYkG,EACjGpF,EAAU,2BACX1B,GADW,IAEdH,SAGF,OACE,eAAC,IAAD,2BAAiBkH,GAAjB,IAAmC/F,MAAOL,EAAWoB,MAAOA,EAA5D,UACE,cAAC,IAAD,CAAYoF,QAAStH,EAArB,SAA4BmH,IAC5B,cAAC,IAAD,aACExG,QAASA,EACTkB,WAAYA,EACZ5B,SAAUA,EACVmH,YAAaA,EACblH,MAAOA,GACHQ,IAELI,GAAa,cAAC,IAAD,UAAiBT,EAAKc,OAASd,EAAKgB,oB,uLC7BlDkG,EAAKC,IAAWC,KAAKtF,KAYZuF,IAVC,SAACxI,GACf,IAAQ2F,EAAmF3F,EAAnF2F,MAAO8C,EAA4EzI,EAA5EyI,SAAf,EAA2FzI,EAAlE8C,iBAAzB,MAAqC,GAArC,EAAyCY,EAAkD1D,EAAlD0D,MAAO8C,EAA2CxG,EAA3CwG,OAAQkC,EAAmC1I,EAAnC0I,IAAKpH,EAA8BtB,EAA9BsB,OAAQqH,EAAsB3I,EAAtB2I,SAAanH,EAAlF,YAA2FxB,EAA3F,GAEMyB,EAAU4G,EAAGvF,EAAW,UAAW6C,EAAO+C,EAAKlC,EAASoC,YAAWpC,EAAQ,eAAY7E,EAAW+B,EAAO,CAC7GiF,aAGF,OAAO7D,gBAAoB4D,EAApB,2BAA8BlH,GAA9B,IAAoCsB,UAAWrB,EAAS,cAAeH,GAAU,KAAMmH,K,qBCfhGI,EAAOC,QAAU,CAAC,QAAU,yBAAyB,GAAK,oBAAoB,GAAK,oBAAoB,GAAK,oBAAoB,GAAK,oBAAoB,OAAS,wBAAwB,MAAQ,uBAAuB,SAAW,0BAA0B,SAAW,0BAA0B,SAAW,0BAA0B,SAAW,0BAA0B,SAAW,0BAA0B,KAAO,sBAAsB,OAAS,wBAAwB,KAAO,sBAAsB,MAAQ,uBAAuB,QAAU,yBAAyB,QAAU,yBAAyB,UAAY,2BAA2B,SAAW,0BAA0B,MAAQ,uBAAuB,MAAQ,yB,sFCsBtrBC,IAVf,YAAgF,IAAxDC,EAAuD,EAAvDA,YAAa9C,EAA0C,EAA1CA,QAAS+C,EAAiC,EAAjCA,SACtCC,EAAkBF,GAAeG,cAEvC,OACE,cAACC,EAAD,yBAAalD,QAASA,EAAS+C,SAAUA,GAAcC,EAAgBG,OAAvE,aACGH,EAAgBI,cAcvB,IAAMF,EAAcG,UAAOC,KAAV,yUAMFC,qBACFC,KAAMxF,MACG,gBAAGL,EAAH,EAAGA,gBAAH,cAAyBA,QAAzB,IAAyBA,IAAmB8F,YACvD,gBAAGC,EAAH,EAAGA,UAAH,cAAmBA,QAAnB,IAAmBA,IAAaC,eAC/B,qBAAG3D,QAAyB,UAAY,aAIrC,qBAAG+C,SAA2B,EAAI,c,+IC3C3Ca,EAAiBC,wBAAc,IAErC,SAASC,IACP,IAAMC,EAAUC,qBAAWJ,GAI3B,KAF0BK,OAAOC,KAAKH,GAASI,OAAS,GAGtD,MAAM,IAAIC,MAAM,qDAGlB,OAAOL,EAYT,SAASM,EAAT,GAOwC,IANtCC,EAMqC,EANrCA,SACAC,EAKqC,EALrCA,MACAC,EAIqC,EAJrCA,kBACAC,EAGqC,EAHrCA,gBACAlC,EAEqC,EAFrCA,SACAnH,EACqC,EADrCA,OAEA,EAAsCiD,mBAAS,GAA/C,mBAAOqG,EAAP,KAAoBC,EAApB,KAEMC,EAAQC,WAASC,QAAQL,GACzBM,EAA4BH,EAAMF,GAElCM,EAAiBD,EAAqBjL,MAAMkL,eAC5CC,EAAkBF,EAAqBjL,MAAMmL,gBAE7CC,EAAoC,WAAnBF,EACjBG,EAA8B,IAAhBT,EACdU,EAAaV,EAAcE,EAAMT,OAAS,EAC1CkB,EAAwBJ,EAuBxBK,EAAK,aACTZ,cACAC,iBACAC,QAEAG,uBAEAI,cACAC,aAEAG,oBA/B0B,WACtBJ,EACFK,IAAQC,SAERd,GAAe,SAACe,GAAD,OAAUA,EAAO,MA4BlCC,gBAxBsB,WAClBT,IAIAE,EACM,OAARd,QAAQ,IAARA,OAIFK,GAAe,SAACe,GAAD,OAAUA,EAAO,OAgBhClB,oBACAQ,iBACAK,wBAEAjK,UAEGmJ,GAGL,OAAO,cAACX,EAAegC,SAAhB,CAAyB9K,MAAOwK,EAAhC,SAAwC/C,M,8LC2ClCsD,IAxGM,SAAC,GAWwB,IAAD,IAV3CjJ,iBAU2C,MAV/B,GAU+B,MAT3ChC,YAS2C,MATpC,mBASoC,MAR3CS,YAQ2C,MARpC,aAQoC,MAP3CyK,mBAO2C,MAP7B,aAO6B,EAN3CC,EAM2C,EAN3CA,aACA3K,EAK2C,EAL3CA,OACAJ,EAI2C,EAJ3CA,eAI2C,IAH3CgL,kBAG2C,MAH9B,GAG8B,EAF3CC,EAE2C,EAF3CA,aACAC,EAC2C,EAD3CA,SAEA,EAAwC7H,mBAAiB,IAAzD,mBAAO8H,EAAP,KAAqBC,EAArB,KACA,EAAsC/H,mBAA6C,IAAnF,mBAAOgI,EAAP,KAAoBC,EAApB,KACMC,EAAkBF,EAAYF,GAC9BK,EAAkC,KAApBD,EAGdE,EAAsBC,uBAC1B,SAACC,GACC,IAAMC,EAASC,YAAqBF,GACpC,OAAOG,IAAiB,WAAjB,cAAqBd,GAArBc,CAAiCF,EAAOG,WAEjD,CAACf,IAIGgB,EAAgBC,mBACpB,kBAAMH,YAAkBI,IAAUC,IAAuBV,KACzD,CAACA,IAGGW,EAAgBV,uBACpB,SAACW,GACC,IAAMN,EAAUO,YAAWD,GAK3B,GAHAjB,EAAgBiB,GAGZE,YAAeR,IAAYS,YAAwBT,GACrDT,GAAe,SAACmB,GAAD,mBAAC,eAAeA,GAAhB,kBAAuBJ,EAAS,QAE/CK,YAAqBX,GAClBY,MAAK,SAACC,GACL,IAAMC,EAAmBC,YAAgBF,GACzCtB,GAAe,SAACmB,GAAD,mBAAC,eAAeA,GAAhB,kBAAuBJ,EAASQ,UAEhDE,OAAM,SAACtH,GACN6F,GAAe,SAACmB,GAAD,mBAAC,eAAeA,GAAhB,kBAAuBJ,OAAS5L,OAC/CuM,YAASC,IAAOC,KAAMzH,EAAI0H,iBAI9B,IAAKhB,YAAsBJ,GAAU,CACnC,IAAMH,EAASC,YAAqBE,GAC9BqB,EAAiBN,YAAgBlB,EAAOG,UAAYH,EAAOG,QAGjEhB,EAAaqC,MAInB,CAAChC,EAAiBE,EAAgBP,IAGpChH,qBAAU,WACJwH,GACFa,EAAcb,KAEf,CAACA,EAAiBa,IAErB,IAAMiB,EAAY7B,EACd,CACE8B,aACE,cAAC,IAAD,CAAgBC,SAAS,MAAzB,SACE,cAAC,IAAD,CAAkB1I,KAAK,YAI7B7E,EAEJ,OACE,qCACE,cAAC,IAAD,CACE4B,UAAWA,EACX4L,UAAW9N,IACXuL,aAAcA,EACdC,SAAUA,EACVlL,eAAgBqN,EAChBzN,KAAMA,EACNkL,YAAaA,EACbzK,KAAMA,EACNoN,YAAY,EACZC,SAAU1B,EACVvK,WAAY,CACV,cAAerB,KAInB,cAAC,IAAD,CAAUR,KAAMA,EAAhB,SAAuBwM,S,kCChI7B,gDAIMjF,EAAKC,IAAWC,KAAKtF,KAMZ4L,IAJF,SAAC,GAAD,IAAGlJ,EAAH,EAAGA,MAAO8C,EAAV,EAAUA,SAAUvI,EAApB,EAAoBA,SAApB,OACX,sBAAM4C,UAAWuF,EAAGpF,IAAO6L,KAAMnJ,EAAO,CAAEzF,aAA1C,SAAwDuI,M,qBCN1DI,EAAOC,QAAU,CAAC,KAAO,mBAAmB,OAAS,qBAAqB,SAAW,yB,qOCsBrF,SAASiG,IACP,MAYI/E,cAXFY,EADF,EACEA,YACAC,EAFF,EAEEA,eACAC,EAHF,EAGEA,MAEAW,EALF,EAKEA,oBACAI,EANF,EAMEA,gBAEAnB,EARF,EAQEA,kBACAQ,EATF,EASEA,eAEA5J,EAXF,EAWEA,OAGF,OACE,cAAC0N,EAAA,EAAD,CAAY,cAAa1N,EAAQ2N,WAAYrE,EAAasE,YAAY,WAAtE,SACGpE,EAAMqE,KAAI,SAAcvD,EAAMwD,GAC7B,IAAM/D,EAAwB,IAAV+D,EACdC,EAAuBzE,EAAcwE,EACrC3N,EAAUrB,EAAU,CAAEiP,yBAQ5B,IAAMC,EAAmBxE,EAAMsE,GAEzBG,EAAkBlE,EAAc,SAAW,OAG3CF,EAFwBmE,EAAiBtP,MAAMmL,iBAEJ,OAEjD,OACE,eAAC,IAAD,WACE,cAACqE,EAAA,EAAD,CAAWtJ,QAff,WACMmJ,GACFxE,EAAeuE,IAamBtM,UAAWrB,EAAQgO,UAArD,SACG7D,EAAK5L,MAAMiI,QAEd,cAACyH,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAO7M,UAAWrB,EAAQlB,KAAMqP,UAAW,EAA3C,UACGN,EACD,cAACnJ,EAAA,EAAD,IACA,cAACT,EAAA,EAAD,CAAKC,MAAM,SAASC,MAAI,EAAC9C,UAAWrB,EAAQoO,aAA5C,SACE,eAACzJ,EAAA,EAAD,CAAK0J,OAAO,KAAKpG,GAAI,GAArB,UACE,cAAC3C,EAAA,EAAD,CAAQb,QAASuF,EAAqB1F,KAAK,QAAQjD,UAAWrB,EAAQsO,WAAYC,KAAK,SAAvF,SACGT,IAEH,cAACxI,EAAA,EAAD,CACEb,QAAS2F,EACTnI,MAAM,UACNsM,KAAM9E,GAAkB,SACxBkB,SAAU1B,GAAqBkB,EAAK5L,MAAM0K,kBAC1C3E,KAAK,QACLjD,UAAWrB,EAAQwO,WACnBhJ,QAAQ,YAPV,SASGkE,gBAtBCS,EAAK5L,MAAMiI,YAmCpB,SAAS+G,EAAQhP,GAC9B,OACE,cAAC,IAAD,yBAAiB2K,gBAAiB3K,EAAMyI,UAAczI,GAAtD,aACE,cAAC+O,EAAD,OAKN,IAAM3O,EAAYC,aAAW,SAACgJ,GAAD,MAAY,CACvC9I,KAAM,CACJiG,OAAQ,mBACR0J,SAAU,QACVC,UAAW,kCAEbN,aAAc,CACZhM,gBAAiB,QACjBV,QAAS1C,KACT2P,aAAclM,MAEhB6L,WAAY,CACVM,YAAanM,KACboM,WAAYC,WACZ7M,MAAO2F,EAAMmH,QAAQC,UAAUC,MAEjCT,WAAY,CACVK,WAAYC,YAEdd,UAAW,CACTtI,OAAQ,qBAAGkI,qBAAwD,UAAY,gBAc5E,SAASsB,EAAT,GACL,OADwE,EAA5ClI,SCzEfmI,IAjDf,YAAqG,IAA9EnI,EAA6E,EAA7EA,SAAUoI,EAAmE,EAAnEA,SAAUvP,EAAyD,EAAzDA,OAAQwP,EAAiD,EAAjDA,cACjD,EAAgCvM,qBAAhC,mBAAOqK,EAAP,KAAiBmC,EAAjB,KACA,EAAwCxM,qBAAxC,mBAAOyM,EAAP,KAAqBC,EAArB,KACMnG,EAAQqC,mBACZ,kBACErI,IAAMiG,SAASC,QAAQvC,GACpByI,OAAOC,SACPhC,KAAI,SAACvD,EAAoBwD,EAAOgC,GAC/B,SAASC,IACP,IAAQxG,EAAmBb,cAAnBa,eAYR,OAXA5F,qBAAU,WACR,IAAMqG,EAAa8D,IAAUgC,EAAK/G,OAAS,EAC3C0G,GAAY,kBAAMnF,EAAK5L,MAAM4O,YAE3BqC,EADE3F,EACc,kBAAM,SAACgG,GAAD,OAAYT,EAASS,KAE3B,kBAAM,WACpBzG,GAAe,SAACe,GAAD,OAAUA,EAAO,UAGnC,CAACf,IACGe,EAAK5L,MAAMyI,SAGpB,OACE,cAACkI,EAAD,yBAAoCzF,eAAgB,UAAcU,EAAK5L,OAAvE,aACE,cAACqR,EAAD,MADgBzF,EAAK5L,MAAMiI,YAKrC,CAACQ,EAAUoI,IAEb,OACE,cAAC,IAAD,CACEA,SAAU,SAACS,GAAD,cAAYN,QAAZ,IAAYA,OAAZ,EAAYA,EAAeM,IACrCR,cAAeA,EACflC,SAAU,SAAC0C,GAAD,cAAY1C,QAAZ,IAAYA,OAAZ,EAAYA,EAAW0C,IAHnC,SAKG,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,WAAjB,OACC,sBAAM,cAAalQ,EAAQuP,SAAUU,EAArC,SACE,cAAC,EAAD,CAAS7G,kBAAmB8G,EAAYtG,eAAgB,SAAxD,SACGJ,UAmBN,SAAS2G,EAAT,GACL,OADgF,EAAhDhJ,W,+FCrE5BiJ,ECFkB,2kEDEcC,OAAOC,MAAM,OAC7CC,ECgQqB,m4CDhQiBF,OAAOC,MAAM,OAEnDE,EAAgB,SAAIC,GACxB,OAAOA,EAAIC,KAAKC,MAAMF,EAAI1H,OAAS2H,KAAKE,YAQ7BC,EAAkB,SAACC,GAC9B,MAAwB7N,mBAAiB,IAAzC,mBAAOzD,EAAP,KAAauR,EAAb,KAMA,OAJApN,qBAAU,WACRoN,EATyB,WAAoD,IAAnDD,EAAkD,uDAA3CN,EAAsBJ,GACnDY,EAAMR,EAAsBD,GAClC,MAAM,GAAN,OAAUS,EAAV,YAAiBF,GAOPG,CAAcH,MACrB,CAACA,IAEGtR,GAGI0R,EAAsB,WACjC,IAAMC,EAAcC,cAAeC,cACnC,OAAOR,EAAgB,GAAD,OAAIM,EAAJ,Y,gUE7BXG,EAAgC,iBAChCC,EAAmC,oBACnCC,EAAyB,SACzBC,EAA2B,mBAC3BC,EAAyB,iBACzBC,EAA4B,mBAC5BC,EAA2B,WAC3BC,EAA2B,WAC3BC,EAAkC,qBAmBlCC,EAAoC,wC,2BC8ClCC,I,uBAAAA,GAvDf,WACE,IAAMC,EAAWC,YAAYC,KAErB5I,EAAmBb,cAAnBa,eAER5F,qBAAU,WACHsO,GACH1I,EAAe,KAEhB,CAAC0I,EAAU1I,IAEd,IAEM6I,EAFoBC,cAEWC,WAAWtC,OAEhD,OACE,eAACuC,GAAD,CAAkB,cAAa,wBAA/B,UACE,cAACtN,EAAA,EAAD,CAAOC,OAAO,KAAd,SACE,eAACX,EAAA,EAAD,CAAWnC,MAAM,UAAUoC,UAAQ,EAACC,KAAK,KAAzC,oQAGqC,cAACgD,EAAA,EAAD,SAGvC,uBAAOX,QAASwK,EAAhB,kCACA,cAACkB,GAAD,CAAgBtN,OAAO,KAAvB,SACE,cAACJ,EAAA,EAAD,CAAKsD,GAAI,GAAT,SACE,cAACqK,EAAA,EAAD,CACErF,UAAW9N,IACXE,KAAM8R,EACN5G,YAAa0H,EAAU,kBACvBnS,KAAK,YACLyO,KAAK,OACL1O,OAAO,+BAIb,cAACiF,EAAA,EAAD,CAAOC,OAAO,KAAd,SACE,eAACX,EAAA,EAAD,CAAWnC,MAAM,UAAUoC,UAAQ,EAACC,KAAK,KAAzC,+CACqC,IACnC,cAACiO,GAAD,CAAMC,KAAK,+BAA+BC,IAAI,sBAAsBC,OAAO,SAA3E,0BAEQ,IAJV,MAKM,IACJ,cAACH,GAAD,CAAMC,KAAK,iCAAiCC,IAAI,sBAAsBC,OAAO,SAA7E,4BANF,qMAmBFN,GAAmBtK,kBAAOhD,IAAPgD,CAAH,4CACT9I,MAGPqT,GAAiBvK,kBAAOhD,IAAPgD,CAAH,wFAMdyK,GAAOzK,UAAO6K,EAAV,0CACC3D,a,iJCkII4D,I,eAAAA,GAlLf,WACE,IAAMd,EAAWC,YAAYC,KACrB5I,EAAmBb,cAAnBa,eAER5F,qBAAU,WACHsO,GACH1I,EAAe,KAEhB,CAAC0I,EAAU1I,IAEd,IAAMyJ,EAAiBX,cACjBY,EAAcf,YAAYgB,MAE1BC,EAAuBH,EAAeV,WAAWtC,OACjDoD,EAAaJ,EAAeV,WAAWe,QAAU,GAEjDC,EAASH,EAAoB,OAC7BI,EAAYJ,EAAoB,iBAChCK,EAAiBL,EAAoB,eAwB3C,OACE,qCACE,eAAC,GAAD,CAAkB,cAAa,uCAA/B,UACE,cAACM,GAAD,CAAqBrR,MAAM,UAAUoC,UAAQ,EAACC,KAAK,KAAnD,iLAIA,eAACF,EAAA,EAAD,CAAWnC,MAAM,UAAUqC,KAAK,KAAhC,kOAIE,eAACiP,GAAD,CACEf,KAAK,uFACLE,OAAO,SACPD,IAAI,aACJzO,MAAM,sCAJR,UAME,cAAC,OAAD,CAAMM,KAAK,KAAKkP,GAAG,OAAOvR,MAAM,UAAhC,iDAGA,cAAC,OAAD,CAAMqC,KAAK,KAAKiK,KAAK,eAAetM,MAAM,eAb9C,4CAe2C,cAACqF,EAAA,EAAD,UAG7C,cAAC5C,GAAA,EAAD,IACA,eAAC+O,GAAD,WACE,cAAC9O,EAAA,EAAD,CAAKsD,GAAI,EAAT,kBACA,cAACtD,EAAA,EAAD,CAAKsD,GAAI,EAAT,wBAEF,cAACvD,GAAA,EAAD,IACA,eAACI,EAAA,EAAD,CAAOC,OAAO,KAAKrD,QAAQ,KAA3B,UACE,cAAC+R,GAAD,UACGN,EAAOzF,KAAI,YAA0C,IAAvCgG,EAAsC,EAAtCA,cAAeC,EAAuB,EAAvBA,iBACtBC,EAAuBX,EAAWU,GAClCE,EAAsC,oBAArBF,EAOvB,OACE,eAAC,WAAD,WACE,cAAChP,EAAA,EAAD,CAAKsD,GAAI,EAAT,SACE,cAAC6L,GAAD,CACE7G,UAAW9N,IACXE,KAAMqU,EACNnJ,YAAY,aACZzK,KAAK,aACLyO,KAAK,OACLpB,SAAU4G,aAAa,EAAG,IAC1BlU,OAAQ6T,MAGZ,cAAC/O,EAAA,EAAD,CAAKsD,GAAI,EAAT,SACE,cAACqC,GAAA,EAAD,CACEE,aAAc,SAACgB,GAAa,IAAD,EACzBqH,EAAemB,OAAOL,EAAkBnI,GACxC,IAAMyI,EAAW,UAAGnB,EAAYtH,UAAf,aAAG,EAAsBnM,KACtC4U,GACFpB,EAAemB,OAAON,EAAeO,IAGzCxU,gBACGmU,GAAwB,CACvB7G,aACE,cAACmH,GAAA,EAAD,CAAgBlH,SAAS,MAAzB,SACE,cAACmH,GAAD,CAA2B,wBAAgBR,EAAhB,yBAKnCtU,KAAMsU,EACNpJ,YAAY,iBACZzK,KAAK,gBACLD,OAAQ8T,MAGZ,cAACS,GAAD,CAAsBnM,GAAI,EAAGoG,OAAO,KAAKxJ,OAAO,KAAhD,SACE,cAACc,GAAA,EAAD,CAAeC,WA3CF,SAAC4F,EAAiBzF,GACnC8M,EAAemB,OAAOL,EAAkBnI,GACxCzF,KAyC2ClG,OAAM,UAAK8T,EAAL,gBAE9CE,GACC,cAACO,GAAD,CAAsBnM,GAAI,EAAGoG,OAAO,KAAKxJ,OAAO,KAAhD,SACE,cAACwP,GAAA,EAAD,CACE5P,QAAS,kBAjG7B,YAAmD,IAArBkP,EAAoB,EAApBA,iBACtBW,EAAgBnB,EAAO1D,QAAO,SAAC8E,GAAD,OAAWA,EAAMZ,mBAAqBA,KAE1Ed,EAAemB,OAAO3C,EAAwBiD,GAEjBlB,EAAYkB,EAAc1L,QAGrDiK,EAAemB,OAAO1C,EAA0B8B,EAAY,GAyF7BoB,CAAmB,CAAEb,sBACpCc,WAAU,UAAKd,EAAL,kBAFZ,SAIE,cAAC,OAAD,CAAMrP,KAAK,KAAKiK,KAAK,SAAStM,MAAM,OAAOyS,QAAQ,uBA7C5Cf,QAqDrB,cAACgB,GAAD,CAAgBzQ,MAAM,SAASC,MAAI,EAAnC,SACE,cAACmB,GAAA,EAAD,CAAQrD,MAAM,YAAY,cAAY,gBAAgBwC,QAvH9D,WACE,IAAMmQ,EAAgB,CACpBlB,cAAc,cAAD,OAAgBL,GAC7BM,iBAAiB,iBAAD,OAAmBN,IAErCR,EAAemB,OAAO3C,EAAtB,uBAAkD8B,GAAlD,CAA0DyB,KAC1D,IAAMC,EAAyBxB,EAAiB,EAChDR,EAAemB,OAAOzC,EAAwBsD,IAgHxC,SACE,cAACzQ,EAAA,EAAD,CAAWC,UAAQ,EAACC,KAAK,KAAzB,qCAKJ,eAAC,GAAD,WACE,cAACQ,EAAA,EAAD,UACE,cAACV,EAAA,EAAD,8DAEF,eAACuQ,GAAD,CAAgBzQ,MAAM,SAASC,MAAI,EAAnC,UACE,cAACQ,EAAA,EAAD,CAAKsD,GAAI,EAAT,SACE,cAACqK,EAAA,EAAD,CACErF,UAAW6H,KACX,cAAY,2BACZzV,KAAMiS,EACNnE,SAAU5B,aAAkBI,KAAUoJ,aAAS,IAJjD,SAMG5B,EAAOzF,KAAI,SAACsH,EAAGC,GAAJ,OACV,cAACC,GAAA,EAAD,CAEE3V,MAAO0V,EAAS,EAChB,kDAA0CA,EAAS,GAHrD,SAKGA,EAAS,GALZ,oCACoCA,WAS1C,cAACtQ,EAAA,EAAD,CAAKsD,GAAI,GAAT,SACE,eAACkN,GAAD,CAAiB9Q,UAAQ,EAAzB,oBAAkC8O,EAAOvK,OAAzC,8BAWDwM,GAA+C,SAACvF,GAI3D,IAAMqD,EAAS,GAETC,EAAStD,EAAM,OACfuD,EAAYvD,EAAM,iBAClBwF,EAAYlC,EAAOzF,KAAI,gBAAGiG,EAAH,EAAGA,iBAAH,OAA0B9D,EAAO8D,MAiB9D,OAdAR,EAAOmC,SAAQ,WAAuB3H,GAAW,IAA/BgG,EAA8B,EAA9BA,iBACVnI,EAAUqE,EAAO8D,GACA0B,EAAUE,MAAM,EAAG5H,GACR6H,SAAShK,KAEzC0H,EAAOS,GAAoB8B,WAIJrC,GAAaA,GAAaD,EAAOvK,SAE1DsK,EAAM,iBAA6BwC,MAG9BxC,GAGHd,GAAmBtK,kBAAOhD,IAAPgD,CAAH,4CACT9I,MAGPsU,GAAsBxL,kBAAO1D,IAAP0D,CAAH,oDAInByL,GAAazL,kBAAOyK,OAAPzK,CAAH,2JACDG,KAIHA,MAKNwL,GAAY3L,kBAAO7D,IAAP6D,CAAH,kFACFrF,KAAMzD,KACJgJ,qBACJ2C,YAGLmJ,GAAiBhM,kBAAOwK,IAAPxK,CAAH,0EACFrF,KACCA,MAEb0R,GAA4BrM,kBAAO6N,KAAP7N,CAAH,kEAKzBsM,GAAuBtM,kBAAOnD,IAAPmD,CAAH,uFAMpB6M,GAAiB7M,kBAAO7D,IAAP6D,CAAH,0DAIdqN,GAAkBrN,kBAAO1D,IAAP0D,CAAH,qD,0DC1Qf8N,GAAW,uCAAG,WAClBC,EACAC,EACAC,EACAV,GAJkB,6BAAA1C,EAAA,sEAMsBqD,QAAQC,IAAI,CAClDC,aAA4Bb,EAAWS,EAAWD,EAAaE,GAC/DI,iBARgB,0CAMXC,EANW,KAMIC,EANJ,KAUZC,EAAoBF,EAAgBG,SAASF,EAAU,IACvDG,EAAiBC,eACjBC,EAAUC,aAAcL,EAAmBE,EAAeI,UAC1DC,EAAmBC,aAAaJ,GAbpB,kBAeX,CACLL,WACAD,gBACAS,mBACAE,SAAUX,IAnBM,4CAAH,4D,UCyHFY,OAlHf,WACE,IAAMlF,EAAWC,YAAYC,KAErB5I,EAAmBb,cAAnBa,eAER5F,qBAAU,WACHsO,GACH1I,EAAe,KAEhB,CAAC0I,EAAU1I,IAEd,IAAMyJ,EAAiBX,cACjBc,EAAuBH,EAAeV,WAAWtC,OAEjDoH,EAAmBjE,EAAoB,kBACvCkE,EAAWlE,EAAoB,gBAAmCiE,EAClE7D,EAAYJ,EAAoB,iBAChCG,EAASH,EAAoB,OAC7BmE,EAAiBhE,EAAOvK,OACxBmN,EAAmB/C,EAAoB,iBAG7C,EDNwC,SAAC,GAIwB,IAHjEqC,EAGgE,EAHhEA,UACAS,EAEgE,EAFhEA,UACAC,EACgE,EADhEA,iBAEA,EAA0CjT,mBAAuC,CAC/EsT,cAAe,EACfS,iBAAkB,UAClBE,SAAU,EACVV,SAAU,MAJZ,mBAAOD,EAAP,KAAsBgB,EAAtB,KAMMvB,EAAc9D,YAAYsF,KAE1BC,EAAsBC,KAAKC,UAAUnC,GAW3C,OATA7R,qBAAU,WAAO,IAAD,EACRiU,EAAgBF,KAAKG,MAAMJ,GAC5BG,EAAc7O,QAAWkN,GAAcD,IAI5C,UAAAD,GAAYC,EAAaC,EAAWC,EAAkB0B,UAAtD,SAAsErL,KAAKgL,MAC1E,CAACtB,EAAWC,EAAkBuB,EAAqBzB,IAE/CO,EClB0CuB,CAA2B,CAC1EtC,UAHqBlC,EAAOzF,KAAI,gBAAGiG,EAAH,EAAGA,iBAAH,OAA0BX,EAAqBW,MAI/EmC,UAAWqB,EACXpB,qBAHMc,EAAR,EAAQA,iBAAkBE,EAA1B,EAA0BA,SAAUV,EAApC,EAAoCA,SAK9BG,EAAiBC,eAOvB,OALAjT,qBAAU,WACRqP,EAAemB,OAAOvC,EAA0BsF,GAChDlE,EAAemB,OAAOtC,EAA0B2E,KAC/C,CAACU,EAAUV,EAAUxD,IAGtB,eAAC5O,EAAA,EAAD,CAAK,cAAa,0BAAlB,UACE,cAACU,EAAA,EAAD,CAAKsD,GAAI,EAAGrD,OAAO,SAAnB,SACE,eAACgT,GAAD,WACE,cAAC9S,EAAA,EAAD,CAAOC,OAAO,KAAd,SACE,cAACX,EAAA,EAAD,CAAWnC,MAAM,UAAUoC,UAAQ,EAACC,KAAK,KAAzC,uBAIF,eAACQ,EAAA,EAAD,CAAOC,OAAO,KAAd,UACE,cAACX,EAAA,EAAD,CAAWnC,MAAM,WAAWoC,UAAQ,EAACC,KAAK,KAA1C,8BAGA,cAACuT,GAAD,CACE5V,MAAM,UACNoC,UAAQ,EACRC,KAAK,KACLwT,OAAO,SACP,cAAY,+BALd,SAOGZ,OAGL,eAACpS,EAAA,EAAD,CAAOC,OAAO,KAAd,UACE,cAACX,EAAA,EAAD,CAAWnC,MAAM,WAAWoC,UAAQ,EAACC,KAAK,KAA1C,2DAGA,cAACF,EAAA,EAAD,CACEnC,MAAM,UACNoC,UAAQ,EACRC,KAAK,KACLwT,OAAO,SACP,cAAa,qCALf,mBAOM1E,EAPN,mBAO0B+D,EAP1B,qBAYN,cAACxS,EAAA,EAAD,CAAKC,OAAO,SAASqD,GAAI,EAAzB,SACE,eAAC8P,GAAA,EAAD,WACE,cAACC,GAAD,UACE,cAAC5T,EAAA,EAAD,CAAWnC,MAAM,UAAUoC,UAAQ,EAACC,KAAK,KAAzC,mBACM6S,EADN,oBAIF,cAACzS,GAAA,EAAD,IACCyO,EAAOzF,KAAI,YAA0C,IAAvCgG,EAAsC,EAAtCA,cAAeC,EAAuB,EAAvBA,iBACtBsE,EAAYjF,EAAqBU,GACjCwE,EAAelF,EAAqBW,GAC1C,OACE,eAAC,IAAMwE,SAAP,WACE,cAACC,GAAD,UACE,cAACzT,EAAA,EAAD,CAAKT,MAAM,SAAS+D,GAAI,GAAI,kDAA0CiQ,GAAtE,SACE,cAACG,GAAA,EAAD,CACEC,KAAMJ,EACN7Y,KAAM4Y,EACNM,YAAU,EACVC,aAAW,EACXC,YAAaC,aAAgBR,SAInC,cAACxT,GAAA,EAAD,MAZF,gBAA8BiP,YAkBtC,cAACgF,GAAD,CAAsBzU,MAAM,SAA5B,SACE,eAACE,EAAA,EAAD,CAAWnC,MAAM,UAAUoC,UAAQ,EAACC,KAAK,KAAzC,kDAC4C,cAACgD,EAAA,EAAD,IAD5C,sHAEoEuP,EAFpE,IAEuFL,EAAeoC,OAFtG,iEAYFhB,GAAmB9P,kBAAOhD,IAAPgD,CAAH,+FACT9I,KACekJ,UAItB2P,GAAoB/P,kBAAO1D,IAAP0D,CAAH,+EAIjBkQ,GAAiBlQ,kBAAOhD,IAAPgD,CAAH,8CACP9I,MAGPoZ,GAA2BtQ,kBAAO7D,IAAP6D,CAAH,uHAGjBrF,KACKzD,MAEZ2Z,GAAuB7Q,kBAAO7D,IAAP6D,CAAH,+FACJzF,aACTrD,M,kECjJE6Z,G,iFAAf,yCAAAlG,EAAA,6DAA+BmG,EAA/B,EAA+BA,OAAQR,EAAvC,EAAuCA,KAAMS,EAA7C,EAA6CA,MAAO5T,EAApD,EAAoDA,KAC5C6T,EAAOC,eADf,SAE4BD,EAAKE,IAAIC,SAAS,UAAU,GAFxD,cAEQC,EAFR,OAIQC,EAAyBD,EAAYE,aAAaC,MAAK,SAACC,GAE5D,OACEC,aAAYD,EAAYE,KAAMZ,IAC9BU,EAAYT,QAAUA,IACrBY,aAAWH,EAAYlB,KAAMA,IAE9BqB,aAAWH,EAAYpa,MAAO+F,MAXpC,kBAeSkU,GAfT,4C,sBA+BO,I,eAAMO,GAAY,SAAZA,EAAa,EAExBC,GAEiC,IAH/Bf,EAG8B,EAH9BA,OAAQR,EAGsB,EAHtBA,KAAMnT,EAGgB,EAHhBA,KAAM4T,EAGU,EAHVA,MAAO1C,EAGG,EAHHA,SAE7ByD,EACgC,uDADxB,EAEFd,EAAOC,eACb,OAAO,IAAIjD,SAA4B,SAAC+D,EAASC,GAAY,IAAD,EAC1D,GAAqCH,GAAW,IAAxCI,WACR,GAAIH,QADJ,MAzCgB,IAyChB,GAEEE,EAAO,IAAIE,KAAexN,KAAOyN,KAAM,4BADzC,CAKA,IAAMC,EAAS,uCAAG,oCAAAzH,EAAA,yDAEH,MAAToG,GAA6B,MAAZ1C,EAFL,wBAGVgE,EAAyB,CAAEvB,SAAQR,OAAMnT,QAH/B,kBAMc6T,EAAKE,IAAIoB,eAAehC,GANtC,QAMNkB,EANM,UAQVa,EAAM,2BAAQA,GAAR,IAAgBtB,MAAOS,EAAYT,MAAO1C,SAAUmD,EAAYnD,YAR5D,iFAcPuD,EAAUS,EAAQR,EAASC,EAAQ,GACvC1N,KAAK2N,GACLvN,MAAMwN,IAhBK,mCAqBehB,EAAKE,IAAIqB,sBAAsBjC,GArB9C,aAqBRkC,EArBQ,kDAuBLT,EAAQS,IAvBH,8FA+Bc3B,GAAc,CAAEC,SAAQR,OAAMS,QAAO5T,SA/BnD,aA+BRsV,EA/BQ,0CAkCqBzB,EAAKE,IAAIqB,sBAAsBE,EAAcnC,MAlClE,aAkCNoC,EAlCM,kDAsCHX,EAAQW,IAtCL,iCA0CLd,EACL,CACEd,SACAC,QACAT,KAAMmC,EAAcnC,KACpBnT,KAAMsV,EAAcrb,MACpBiX,SAAUoE,EAAcpE,UAE1BwD,EACAC,EAAQ,GAEP1N,KAAK2N,GACLvN,MAAMwN,IAtDG,mEA6DhBJ,EAAU,CAAEd,SAAQR,OAAMnT,OAAM4T,QAAO1C,YAAYwD,EAASC,EAAQ,GACjE1N,KAAK2N,GACLvN,MAAMwN,GA/DO,yEAAH,qDAkEfW,WAAWP,EAAD,iBAAYP,QAAZ,IAAYA,OAAZ,EAAYA,EAASe,aAArB,QAhHQ,UCZhBC,GAAa/S,kBAAOgT,OAAPhT,CAAH,gKAWViT,GAAmBjT,kBAAOxC,KAAPwC,CAAH,qDAGhBkT,GAAkBlT,UAAOmT,IAAV,yGASfC,GAAapT,UAAOC,KAAV,oDAIHoT,GAAgB,SAAC,GAA0E,IAAxEC,EAAuE,EAAvEA,mBACxB3C,EAAc4C,aAAqBD,GACnCE,EAAQ,mCAAmCC,KAAK9C,GAChD+C,EAA2B,OAAVF,EAAiBA,EAAM,GAAK,mBAEnD,OACE,iCACE,cAAC,OAAD,CAAMhX,KAAK,KAAX,2DACA,eAACuW,GAAD,CAAYvW,KAAK,KAAjB,mCACyB,IACvB,eAAC,OAAD,CACEkO,KAAMiG,EACN/F,OAAO,SACPD,IAAI,sBACJ,cAAY,4BACZzO,MAAM,oCALR,UAOE,cAAC,OAAD,CAAMM,KAAK,KAAKkP,GAAG,OAAOvR,MAAM,UAAhC,SACGuZ,IAEH,cAAC,OAAD,CAAMlX,KAAK,KAAKiK,KAAK,eAAetM,MAAM,sBAkCvCwZ,GAAc,SAAC,GAAD,IACzBC,EADyB,EACzBA,SACAC,EAFyB,EAEzBA,QAFyB,OAOzB,eAACX,GAAD,WACE,cAACtW,GAAA,EAAD,IACA,cAACqW,GAAD,CAAkBtW,QAASiX,EAAUlW,QAAQ,YAA7C,oBAGA,cAACF,GAAA,EAAD,CAAQrD,MAAM,UAAUwC,QAASkX,EAASnW,QAAQ,YAAlD,uBClGS6D,GAAQ,CACnB,CACEuS,GAAI,IACJpV,MAAO,uCACP3C,iBAAa3D,EACb2b,YAAa,kDACbC,gBAAiB,MAEnB,CACEF,GAAI,IACJpV,MAAO,wBACP3C,iBAAa3D,EACb2b,YAAa,+BACbC,gBAAiBX,IAEnB,CACES,GAAI,IACJpV,MAAO,yBACP3C,iBAAa3D,EACb2b,YAAa,+BACbC,gBAAiBX,IAEnB,CACES,GAAI,IACJpV,MAAO,2BACP3C,iBAAa3D,EACb2b,YAAa,+BACbC,gBAAiBX,IAEnB,CACES,GAAI,IACJpV,MAAO,uBACP3C,iBAAa3D,EACb2b,YAAa,+BACbC,gBAAiBX,IAEnB,CACES,GAAI,IACJpV,MAAO,UACP3C,YAAa,qCACbgY,iBAAa3b,EACb4b,gBDkB0B,SAAC,GAAD,IAC5BC,EAD4B,EAC5BA,uBACAC,EAF4B,EAE5BA,WAF4B,OAO5B,eAAChB,GAAD,WACE,cAACtW,GAAA,EAAD,IACA,cAACY,GAAA,EAAD,CACErD,MAAM,UACN0I,SAAUoR,EACVtX,QAASuX,EACTxW,QAAQ,YACR,cAAY,eALd,SAOGuW,EACC,qCACE,cAAC,SAAD,CAAQzX,KAAK,KAAKrC,MAAM,mBAD1B,IAC8C,cAACiZ,GAAD,mCAG9C,2D,UEpFO,OAA0B,yCCA1B,OAA0B,wCCA1B,OAA0B,6C,qECQzCe,KAAWC,OAAX,WACEC,qCAA0B,CACxBC,QAASC,cAFb,cACE,GAEIC,KAGC,I,6CAAMC,GAA4B,SAACC,GAAyB,IAAD,EAE1DC,EAAqBR,KAAWS,WAAWF,GAAMjD,MAAK,kBAAuB,kBAAvB,EAAGla,QAGzDsd,EAAgB,OAAGF,QAAH,IAAGA,GAAH,UAAGA,EAAoBG,cAAvB,aAAG,EAA4BrD,MAAK,kBAAuB,UAAvB,EAAGla,QAE7D,OAAOkN,cAAgC,OAAhBoQ,QAAgB,IAAhBA,OAAA,EAAAA,EAAkBpd,QAAS,KCMvCsd,GAAiB,SAAC,GAMG,IAkN5BC,EAvNJC,EAK+B,EAL/BA,eACArB,EAI+B,EAJ/BA,SACAC,EAG+B,EAH/BA,QACAqB,EAE+B,EAF/BA,UACAC,EAC+B,EAD/BA,iBAEA,EAA8Bna,oBAAS,GAAvC,mBAAOoa,EAAP,KAAgBC,EAAhB,KACA,EAAkCra,mBAAS,GAA3C,mBAAOsa,EAAP,KAAkBC,EAAlB,KACA,EAAoDva,mBAAS,IAA7D,mBAAOsY,EAAP,KAA2BkC,EAA3B,KACA,EAAoDxa,mBAAS,IAA7D,mBAAOya,EAAP,KAA2BC,EAA3B,KAEA,EAA0B1a,oBAAS,GAAnC,mBAAOtC,EAAP,KAAcyC,EAAd,KACA,EAA8CH,oBAAS,GAAvD,mBAAO2a,EAAP,KAAwBC,EAAxB,KACA,EAAsD5a,oBAAS,GAA/D,mBAAO6a,EAAP,KAA4BC,EAA5B,KACA,EAA4D9a,oBAAS,GAArE,mBAAOiZ,EAAP,KAA+B8B,EAA/B,KACM/L,EAAWC,YAAYC,KACvB8L,EAAWC,cAEXC,EL5C0B,SAACZ,GAAD,OAA+C,IAAdA,EK4CxCa,CAAmBb,GAOtCc,EAAoB/S,uBACxB,SAACjG,GACKiZ,aAAiBjZ,GACnB4Y,EAASM,aAAgB,eAAKC,KAAcC,kBAE5CR,EAASM,aAAgB,eAAKC,KAAcE,4BAGhD,CAACT,IAGG7Y,EAAUkG,uBACd,SAAC3K,GACCkd,GAAmB,GACnBE,GAAuB,GACvBC,GAA0B,GAC1B5a,GAAS,GACTwJ,aAASC,KAAO8R,KAAMhe,EAAMoM,SAC5BsR,EAAkB1d,KAEpB,CAACkd,EAAoBE,EAAwBC,EAA2B5a,EAAUib,IAI9EO,EAAY,WAChBpB,EAAa,GACbpa,GAAS,GACT0Y,KA2JF,OA5IAnY,qBAAU,WACR,IAAMkb,EAAa,uCAAG,sBAAA/L,EAAA,sEACdgM,eADc,OAEpBxB,GAAW,GAFS,2CAAH,qDAKfrL,GACF4M,MAED,CAAC5M,IAGJtO,qBAAU,WACR,QAAyBtD,IAArB+c,EAAJ,CAIA,IAAM2B,EAAa,uCAAG,4BAAAjM,EAAA,6DACpB0K,EAAa,GADO,kBAGIJ,EAHJ,OAGZ4B,EAHY,OAIlBvB,EAAsBuB,EAAQC,iBAC9BzB,EAAa,GACbK,GAAmB,GAND,kDAQlBzY,EAAQ,EAAD,IARW,0DAAH,qDAYnB2Z,OACC,CAAC3B,EAAkBhY,IAGtBzB,qBAAU,gBACetD,IAAnB6c,IAGJO,EAAsBP,GACtBM,EAAa,GACbK,GAAmB,MAClB,CAACX,IAEJvZ,qBAAU,WACR,GAAKia,EAAL,CAIA,IAAMsB,EAAS,uCAAG,WAAOC,GAAP,eAAArM,EAAA,6DACVqG,EAAOiG,eADG,SAGOjG,EAAKE,IAAIoB,eAAe0E,GAH/B,UAIa,OAJb,OAIHE,YAJG,0CAKP,GALO,uBAQMlG,EAAKE,IAAIqB,sBAAsByE,GARrC,iBASHG,OATG,uBAURtW,MAAM,sBAVE,kCAaT,GAbS,4CAAH,sDAgBTuW,EAAWC,YAAW,sBAAC,sBAAA1M,EAAA,yDACvByK,EAAY,GACdC,EAAaD,EAAY,QAIFld,IAArB+c,GACFA,EAAiB7Q,MAAK,WACpBiR,EAAa,GACbO,GAAuB,GACvBF,GAAmB,WAKAxd,IAAnB6c,EAfuB,0CAiBLgC,EAAUhC,GAjBL,gBAmBrBM,EAAa,GACbO,GAAuB,GACvBF,GAAmB,IArBE,kDAwBvBzY,EAAQ,EAAD,IAxBgB,0DA2B1B,KAEH,OAAO,WACLqa,cAAcF,OAEf,CAACrC,EAAgBE,EAAkBQ,EAAiBL,EAAW5c,EAAOyE,IAEzEzB,qBAAU,WACR,IAAI4b,EAEEG,EAAwB,uCAAG,WAAOnE,GAAP,mBAAAzI,EAAA,sEAEvBqG,EAAOiG,eAFgB,SAGPjG,EAAKE,IAAIqB,sBAAsBa,GAHxB,OAGvByD,EAHuB,OAQ3BW,EADEX,EAAQjC,OACIiC,EAAQjC,OAAO6C,cAAcC,aAAaC,MAG1CpD,GAA0BsC,EAAQrC,MAGlDgB,EAAsBgC,GAEtBJ,EAAWC,YAAW,sBAAC,sBAAA1M,EAAA,sEACFqG,EAAKE,IAAI0G,QAAQJ,GADf,gBAERK,MACXxC,EAAa,GAHM,2CAKpB,KArB0B,kDAuB7BpY,EAAQ,EAAD,IAvBsB,0DAAH,sDA2B9B,GAAK0Y,EAQL,MAJkC,kBAAvBvC,GACTmE,EAAyBnE,GAGpB,WACLkE,cAAcF,MAEf,CAAChE,EAAoBuC,EAAqB1Y,IAEzCiY,QAAyBhd,IAAdkd,EAEX,cAAC0C,GAAD,CAAiB,cAAa,qBAA9B,SACE,cAAC,SAAD,CAAQxb,KAAK,UAMf9D,EACFsc,EAAkBrB,GACTpS,GAAM+T,GAAWtB,kBAC1BgB,EAAkBzT,GAAM+T,GAAWtB,iBAInC,eAACiE,GAAD,WACE,cAACC,GAAD,CAAO/Y,IAAI,KAAKpH,OAAO,8BAAvB,mCAGA,cAACogB,GAAD,UACE,cAAC,UAAD,CAASC,gBAAiB9C,EAAW5c,MAAOA,EAAOiN,YAAY,WAAWpE,MAAOA,OAEnF,eAAC8W,GAAD,WACE,cAACC,GAAD,UACE,cAACpa,GAAA,EAAD,CAAKC,IAAI,QAAQlE,OAAQ,GAAIoE,IAhL/B3F,EACK6f,GAGLjD,GAAa,EACRkD,GAGFC,OA2KH,cAACC,GAAD,UACE,cAACC,GAAD,UAAYpX,GAAM+T,GAAWvZ,aAAewF,GAAM+T,GAAW5W,UAG9D6C,GAAM+T,GAAWvB,aAChB,cAAC6E,GAAD,UACE,cAACC,GAAD,CACE1e,MAAM,UACN2e,cAAe5C,EAAiB6C,WAChCxc,UAAQ,EACRC,KAAK,KACLwc,WAAY1D,EALd,SAOG5c,EAAQ,qDAAuD6I,GAAM+T,GAAWvB,gBAKvF,cAACkF,GAAD,UACGjE,EACC,cAACA,EAAD,CACEf,uBAAwBA,EACxBL,SAAUA,EACVjX,QAASga,EACTzC,WA/OW,WACrB6B,GAA0B,GAC1Bb,EAAUO,IA8OA5B,QAAS8C,EACTrD,mBAAoBA,IAEpB,UAIO,IAAdgC,GACC,cAAC4D,GAAD,CAAY/e,MAAM,UAAUsD,SAAU,IAAKd,QAASiX,EAAU,cAAY,yBAA1E,uBAqBFoE,GAAkBhY,UAAOmT,IAAV,qHAOf8E,GAAUjY,UAAOmT,IAAV,gJAOP+E,GAAQlY,kBAAOf,IAAPe,CAAH,oGAMLmY,GAAMnY,UAAOmT,IAAV,iEAKHkF,GAAOrY,UAAOmT,IAAV,sSAIY,qBAAGrT,MAAkBqZ,OAAOC,SAU5CT,GAAY3Y,UAAOmT,IAAV,wEAKT0F,GAAgB7Y,kBAAO1D,IAAP0D,CAAH,+MACG,mBAAoC,IAApC,EAAGgZ,WAAqCK,YAAY9e,gBAC/D,gBAAGuF,EAAH,EAAGA,MAAH,OAA2C,IAA3C,EAAUkZ,WAAqClZ,EAAMqZ,OAAOC,MAAQ9Y,eAOzEgY,GAAYtY,UAAOmT,IAAV,8CAGTuF,GAAkB1Y,UAAOmT,IAAV,8CAGfyF,GAAkB5Y,UAAOmT,IAAV,iEAIf8F,GAAajZ,UAAOmT,IAAV,4IASV+F,GAAalZ,kBAAOxC,KAAPwC,CAAH,yE,+EC7VHsZ,GAA4BtZ,kBAAOuQ,KAAPvQ,CAAH,uDAUhCuZ,GAAkB,WACtBpX,IAAQqX,KAAKC,MAGTC,GAAQ,SAACC,GAAD,OAA+B,IAAIzL,SAAQ,SAAC+D,GAAD,OAAaY,WAAWZ,EAAS0H,OAyP3EC,I,eAAAA,GAvPf,WACE,MAAoD5e,qBAApD,mBAAOsY,EAAP,KAA2BkC,EAA3B,KACA,EAAkDxa,qBAAlD,mBAAO6e,EAAP,KAA0BC,EAA1B,KAEQC,EAAeC,eAAfD,WACF/D,EAAWC,cACXgE,EAAqBhQ,YAAYsF,KACjC2K,EAAUjQ,YAAYkQ,MAE5B,EAAkCnf,oBAAS,GAA3C,mBAAOof,EAAP,KAAkBC,EAAlB,KACA,EAAkCrf,mBAAwB,CAAE0c,YAAa,KAAzE,mBAAO4C,EAAP,KAAkBC,EAAlB,KACA,EAA0Dvf,oBAAS,GAAnE,mBAAOwf,EAAP,KAA8BC,EAA9B,KACA,EAA4Czf,mBAAiB,IAA7D,mBAAO0f,EAAP,KAAuBC,EAAvB,KAEMC,EAAgBvX,uBAAY,WAChC,IAAMwX,EAAyBC,aAAsChR,GAEhE+Q,GAKLrF,EAAsBqF,EAAsB,oBAE5Cf,EACE,IAAI5L,SAAQ,SAAC+D,EAASC,GACpB,IAAM6I,EAAgBF,EAAsB,iBAEtCG,EADcH,EAAsB,OACPjV,KAAI,gBAAGiG,EAAH,EAAGA,iBAAH,OAA0BgP,EAAuBhP,MAClFoC,EAAmB4M,EAAsB,iBACzC5L,EAAW4L,EAAsB,SACjCtM,EAAWsM,EAAsB,SACjCI,EAAeC,aAA6BF,EAAgBD,EAAe9M,GAEjFgN,EACGE,KADH,aAEIvJ,KAAMqI,EACNmB,IAAKnM,GACJoM,eAAgB9M,IAElB+M,KAAK,mBAAmB,SAACpE,GACxBqE,aAAczR,EAAD,YAAC,eACXD,EAAkCqN,GAChC2D,IAIL/I,GAAU,CAAEd,OAAQiJ,EAAoBzJ,KAAM0G,EAAQ7Z,KAAM4d,EAAaO,cACtElX,MAAK,SAACmX,GACL5f,QAAQ6f,IAAI,qBAAsBD,GAClCxJ,EAAQwJ,MAET/W,OAAM,SAAChM,GACNwZ,EAAOxZ,SAGZ4L,MAAK,SAACmX,GACL5f,QAAQ6f,IAAI,kBAAmBD,GAC/BxJ,EAAQwJ,MAET/W,OAAM,SAAChM,GACNwZ,EAAOxZ,WA3Cb6gB,OA+CD,CAACU,IAEJve,qBAAU,WACR,IAAMmf,EAAyBC,aAAsChR,GACrE,GAAK+Q,EAAL,CAKA,IAAMvH,EAAqBuH,EAAsB,mBAC7CvH,EACFkC,EAAsBlC,GAEtBsH,SARArB,OAUD,CAACqB,IAEJ,IAAMe,EAAa,uCAAG,WAAOjB,GAAP,6BAAA7P,EAAA,yDACdK,EAAuB4P,aAAsChR,GAD/C,uBAIlByP,KAJkB,iCAQdjG,EAAqBpI,EAAoB,mBACzCiE,EAAmBjE,EAAoB,kBACvCkE,EAAWlE,EAAoB,gBAAmCiE,EAClE9D,EAASH,EAAoB,OAG7B0Q,EAAyBvQ,EAAOzF,KAAI,gBAAGgG,EAAH,EAAGA,cAAeC,EAAlB,EAAkBA,iBAAlB,OACxCgQ,aAAqB,CACnBnY,QAASwH,EAAqBW,GAC9BtU,KAAM2T,EAAqBU,GAC3BsO,eAGE4B,EAAuBD,aAAqB,CAAEnY,QAASgX,EAAgBnjB,KAAM6X,EAAU8K,YArBzE,UAsBdlE,EAAS+F,aAAoB,GAAD,oBAAKH,GAAL,CAA6BE,MAtB3C,eAwBpB/B,EAAWiC,KAAYC,aAxBH,UA2BdvC,GAAM,KA3BQ,mCA+BZwC,oBAAQ,kBAAMC,aAAYzB,KAAiB,CAC/C0B,cAAe,IACfC,SAAU,IACVC,cAAe,GACfC,MAAO,SAACC,GAEN,OADA3gB,QAAQ4gB,KAAK,yDAA0DD,IAChE,KArCO,kEAyClB7B,EAAkBD,GAClBD,GAAyB,GA1CP,4CA8CIiC,aAAUhC,GA9Cd,eA8CdiC,EA9Cc,iBA+Cd3G,EAAS4G,aAAgBD,IA/CX,QAiDpBtC,GAAa,GACbE,EAAa,CACX7C,YAAaiF,EAAUjZ,QACvB0L,WACAkE,uBArDkB,2DAAH,sDAuEbM,EAAW,WACfiJ,aAAkB/S,GAClByP,MAGF,SAASuD,IACPD,aAAkB/S,GAElB,IAAQsF,EAA8CkL,EAA9ClL,SAAUkE,EAAoCgH,EAApChH,mBAAoBoE,EAAgB4C,EAAhB5C,YACtCvV,IAAQqX,KAAK,CACXuD,SAAUC,YAAkBC,IAAYC,gBAAiB,CACvDC,UAAWC,eACX1F,gBAEFzV,MAAO,CACL1K,KAAM6X,EACNiO,GAAI/J,KAKV,OACE,qCACE,cAAC,GAAD,CACE2B,eAAgB3B,EAChBM,SAAUA,EACVC,QAxCU,WACd,IAAMgH,EAAyBC,aAAsChR,GAEhE+Q,GAKLrF,OAAsBpd,UACfyiB,EAAuBvH,mBAC9BiI,aAAczR,EAAmC+Q,GACjDD,KAPErB,MAqCErE,UAAWyG,EACXxG,iBAAkB0E,IAEnBO,GACC,cAAC,eAAD,CACEtf,QAASgiB,EACT5gB,MAAM,gBACNohB,KACE,sBAAK,cAAY,qBAAjB,UACE,eAAChhB,EAAA,EAAD,6CACiC,cAACkD,EAAA,EAAD,OAEjC,eAAClD,EAAA,EAAD,wDAC4C,cAACkD,EAAA,EAAD,OAE5C,eAAClD,EAAA,EAAD,mEACwD,IACtD,cAACihB,GAAD,wDAINC,OACE,cAACC,GAAD,UACE,cAACjgB,GAAA,EAAD,CACEzF,OAAO,sBACP4E,QAASmgB,EACT3iB,MAAM,UACNsM,KAAM,SACNjK,KAAK,QACLkB,QAAQ,YANV,0BAcP8c,GAAyBE,GACxB,cAAC,eAAD,CACE5f,QAAS8Y,EACT1X,MAAM,8BACNohB,KACE,8BACE,eAAChhB,EAAA,EAAD,wGAC4F,uBAD5F,8BAE8B,IAC5B,cAACgd,GAAD,CACE9I,KAAMkK,EACNhK,aAAW,EACXC,YAAaC,aAAgB8J,UAKrC8C,OACE,cAACC,GAAD,UACE,cAACjgB,GAAA,EAAD,CAAQb,QAASiX,EAAUzZ,MAAM,UAAUsM,KAAK,SAASjK,KAAK,QAAQkB,QAAQ,YAA9E,wBAaR+f,GAAkBzd,UAAOmT,IAAV,qDAIfoK,GAAgBvd,UAAOC,KAAV,kDACF+G,Y,kHCnNjB,I,MAAM0W,GAAY1d,kBAAOhD,IAAPgD,CAAH,8CACF9I,MAEPymB,GAAyB3d,UAAOmT,IAAV,2FAChBjc,MAKN0mB,GAAoB5d,kBAAO6d,KAAP7d,CAAH,0GAMjB8d,GAAsB9d,kBAAO+d,KAAP/d,CAAH,mDAInBge,GAAmBhe,UAAOmT,IAAV,sJAEVjc,MASG+mB,GAxGf,WACE,MAAoEjjB,oBAAS,GAA7E,mBAAOkjB,EAAP,KAAmCC,EAAnC,KACMC,IAAsBnU,YAAYC,KAClCmU,EAAiBpU,YAAYqU,KAEnC,SAASC,IACPJ,GAA8B,GAGhC,IAAMK,EAAkBnb,uBAAY,SAAC6W,GACnCuE,aAAWvE,GACXiE,GAA8B,KAC7B,IAEH,OACE,eAACT,GAAD,CAAW,cAAa,sBAAxB,UACGU,EACC,eAAC9hB,EAAA,EAAD,CAAWnC,MAAM,UAAUoC,UAAQ,EAACC,KAAK,KAAzC,0FACgF,IAC9E,cAACgD,EAAA,EAAD,CAAc7C,QAAS4hB,OAGzB,cAACjiB,EAAA,EAAD,CAAWnC,MAAM,UAAUoC,UAAQ,EAACC,KAAK,KAAzC,8FAKF,cAACmhB,GAAD,UACGS,EACC,cAAC,aAAD,CACE3X,KAAK,SACL9J,QAAS4hB,EACTpkB,MAAM,UACN,cAAa,sBAJf,4BASA,cAACukB,GAAA,EAAD,CAAe,cAAY,0BAI9BN,GAAqBC,GACpB,eAAC/hB,EAAA,EAAD,CAAWnC,MAAM,UAAUqC,KAAK,KAAhC,qEAC0D,cAACmiB,GAAA,EAAD,OAI5D,eAACC,GAAA,EAAD,CACE9jB,QAAS,kBAAMqjB,GAA8B,IAC7C,kBAAgB,iBAChB,cAAa,uBACbliB,KAAMiiB,EAJR,UAME,eAACN,GAAD,CAAmBiB,mBAAiB,EAApC,UACE,cAACC,GAAA,EAAD,CAAYphB,QAAS,KAArB,4BACA,cAACjB,EAAA,EAAD,CAAY,aAAW,QAAQE,QAAS,kBAAMwhB,GAA8B,IAA5E,SACE,cAAC,KAAD,SAGJ,cAACL,GAAD,CAAqBiB,UAAQ,EAA7B,SACE,cAACC,GAAA,EAAD,CAAM7Z,UAAU,MAAhB,SACG8Z,eAAYrZ,KAAI,SAACsZ,GAAD,OACf,cAAClB,GAAD,CAAwC5f,KAAK,SAASzB,QAAS,kBAAM6hB,EAAgBU,EAAQhF,UAA7F,SACE,cAAC1a,EAAA,EAAD,CAAcC,YAAayf,EAASxf,UAAQ,KADvBwf,EAAQhF,uBC2C9BiF,UA3Ff,WACE,MAA4DnkB,qBAA5D,mBAAOokB,EAAP,KAA+BC,EAA/B,KACA,EAAkCrkB,oBAAkB,GAApD,mBAAOskB,EAAP,KAAkBC,EAAlB,KACMC,EAAevV,YAAYC,KAC3BmU,EAAiBpU,YAAYqU,KAC7BtU,IAAawV,IAAiBnB,EAEpC3iB,qBAAU,WACR,IAAM+jB,EAA+B,uCAAG,4BAAA5U,EAAA,6DACtC0U,GAAa,GADyB,SAKDrR,QAAQ+D,QAC3C6I,aAAsChR,IANF,UAKhCsV,EALgC,QASlCpV,EATkC,gCAU9B6M,eAV8B,OAWpCwI,EAA0BD,GAXU,OAatCG,GAAa,GAbyB,2CAAH,qDAerCE,MACC,CAACzV,IAEJ,IAAM0V,EAAoBzV,YAAYsF,KAChCvE,EAAcf,YAAYgB,MAC1B0U,EAAWC,cACXC,EAAiB5W,eAOvB,EAAkDjO,qBAAlD,mBAAO8kB,EAAP,KAA0BC,EAA1B,KASA,OAPArkB,qBAAU,WACR,GAAIsO,GAAY0V,EAAmB,CACjC,IAAMM,EAwDZ,SAA0BC,EAAajV,EAAa2U,EAAUO,GAA0C,IAAD,MAC/FC,EAAQC,IAAYxQ,MAAM+P,EAASU,OAAQ,CAAEC,YAAa,UACxD/oB,EAAgD4oB,EAAhD5oB,KAAMgpB,EAA0CJ,EAA1CI,eAAgBC,EAA0BL,EAA1BK,WAAYlV,EAAc6U,EAAd7U,UAGpCmV,IAA4BF,EAC5BG,EAAgBC,MAAMC,QAAQL,GAAkBA,EAAiB,CAACA,GAClElV,EAASoV,EAA0BC,EAAgB,CAACT,GAGpDY,EAAqBF,MAAMC,QAAQJ,GAAcA,EAAa,CAACA,GAC/DM,EAAkB,EAAC,UAAA9V,EAAYiV,UAAZ,eAA0B1oB,OAAQ,aACrDwpB,EAAaN,EAA0BI,EAAqBC,EAE5DE,EAAmBC,OAAO3V,GAC1B4V,EACJ5V,IAAc2V,OAAOE,MAAM7V,IAAc0V,GAAoB3V,EAAOvK,QAAUkgB,EAAmB,EAEnG,OAAO,wDACJ1X,EAAmC4W,GADtC,cAEG7W,EAAgC9R,GAFnC,cAGGiS,EAA2B0X,EAA2B5V,EAxB3B,GAqB9B,cAIG/B,EAAyB8B,EAAOzF,KAAI,SAAC6G,EAAO5G,GAAR,MAAmB,CACtD+F,cAAc,cAAD,OAAgB/F,GAC7BgG,iBAAiB,iBAAD,OAAmBhG,QANvC,GASKwF,EAAO+V,QACR,SAACC,EAAoBjR,EAAcvK,GAAnC,mBAAC,eACIwb,GADL,0CAEoBxb,GAAUuK,MAE9B,KAGC2Q,EAAWK,QACZ,SAACE,EAAiBnR,EAAWtK,GAA7B,mBAAC,eACIyb,GADL,uCAEiBzb,GAAUsK,MAE3B,KAtBJ,uBAwBG1G,EAAyB4B,EAAOvK,QAxBnC,cAyBG4I,EAA4B6X,KAAKC,OAzBpC,IA1EiCC,CAAiB/B,EAAmB1U,EAAa2U,EAAUE,GACxFE,EAAqBC,MAEtB,CAAChW,EAAU0V,EAAmB1U,EAAa2U,EAAUE,IAEpDP,EAEA,cAAC,GAAD,CAAiB,cAAa,qBAA9B,SACE,cAAC,SAAD,CAAQ9iB,KAAK,SAKV4iB,EACP,cAAC,GAAD,IAEA,cAAC9Z,EAAA,EAAD,UACE,eAACtI,EAAA,EAAD,WACE,eAACb,EAAA,EAAD,CAAKC,MAAM,SAAX,UACE,cAACslB,GAAD,CAAUhlB,eAAa,EAACC,QAASwF,IAAQC,OAAzC,SACE,cAAC,IAAD,MAEF,cAACnD,EAAA,EAAD,CAASE,IAAI,KAAb,gCAEF,eAACkI,EAAA,EAAD,CAAaE,cAAeuY,EAAmBxY,SAjCrB,SAACqa,GAC/BpG,aAAczR,EAAD,eAAyC6X,IACtDtC,EAA0BsC,IA+B4D5pB,OAAQ,mBAA1F,UACE,cAAC,IAAD,CACE2G,MDnFmC,kCCoFnCkD,gBAAgB,WAChBT,mBAAoB6I,EAHtB,SAKE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAiBtL,MdhGS,OcgGoBkD,gBAAgB,WAA9D,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CACElD,MbhF0C,2BaiF1CkD,gBAAgB,WAChByD,SAAUiI,GAHZ,SAKE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAiB5O,MX9FW,SW8FoBkD,gBAAgB,SAAhE,SACE,cAAC,GAAD,eA4DZ,IAAMoW,GAAkBhY,UAAOmT,IAAV,qHAOfuO,GAAW1hB,kBAAOvD,IAAPuD,CAAH,mFACHkH,YACEvM","file":"static/js/37.3e1d6ef1.chunk.js","sourcesContent":["import { Field } from 'react-final-form'\r\n\r\nconst GnoField = (props: any): React.ReactElement => <Field {...props} />\r\n\r\nexport default GnoField\r\n","import MuiTextField from '@material-ui/core/TextField'\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { lg } from 'src/theme/variables'\r\n\r\n// Neded for solving a fix in Windows browsers\r\nconst overflowStyle = {\r\n  overflow: 'hidden',\r\n  width: '100%',\r\n}\r\n\r\nconst styles = () =>\r\n  createStyles({\r\n    root: {\r\n      paddingTop: lg,\r\n      paddingBottom: '12px',\r\n      lineHeight: 0,\r\n    },\r\n  })\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\ntype Props = {\r\n  input: {\r\n    name: string\r\n    onChange?: () => void\r\n    value: string\r\n    placeholder: string\r\n    type: string\r\n  }\r\n  meta: {\r\n    touched?: boolean\r\n    pristine?: boolean\r\n    valid?: boolean\r\n    error?: string\r\n    modifiedSinceLastSubmit?: boolean\r\n    submitError?: boolean\r\n    active?: boolean\r\n  }\r\n  inputAdornment?: { endAdornment: React.ReactElement } | undefined\r\n  multiline: boolean\r\n  rows?: string\r\n  testId: string\r\n  text: string\r\n  disabled?: boolean\r\n  rowsMax?: number\r\n  className?: string\r\n}\r\n\r\nconst TextField = (props: Props): React.ReactElement => {\r\n  const {\r\n    input: { name, onChange, value, ...restInput },\r\n    inputAdornment,\r\n    meta,\r\n    multiline,\r\n    rows,\r\n    testId,\r\n    text,\r\n    ...rest\r\n  } = props\r\n  const classes = useStyles()\r\n  const helperText = value ? text : undefined\r\n  const showError = (meta.touched || !meta.pristine) && !meta.valid\r\n  const hasError = !!meta.error || (!meta.modifiedSinceLastSubmit && !!meta.submitError)\r\n  const errorMessage = meta.error || meta.submitError\r\n  const isInactiveAndPristineOrUntouched = !meta.active && (meta.pristine || !meta.touched)\r\n  const isInvalidAndUntouched = typeof meta.error === 'undefined' ? true : !meta.touched\r\n\r\n  const disableUnderline = isInactiveAndPristineOrUntouched && isInvalidAndUntouched\r\n\r\n  const inputRoot = helperText ? classes.root : ''\r\n  const statusClasses = meta.valid ? 'isValid' : hasError && showError ? 'isInvalid' : ''\r\n  const inputProps = {\r\n    ...restInput,\r\n    autoComplete: 'off',\r\n    'data-testid': testId,\r\n  }\r\n  const inputRootProps = {\r\n    ...inputAdornment,\r\n    className: `${inputRoot} ${statusClasses}`,\r\n    disableUnderline: disableUnderline,\r\n  }\r\n\r\n  return (\r\n    <MuiTextField\r\n      error={hasError && showError}\r\n      helperText={hasError && showError ? errorMessage : helperText || ' '}\r\n      inputProps={inputProps} // blank in order to force to have helper text\r\n      InputProps={inputRootProps}\r\n      multiline={multiline}\r\n      name={name}\r\n      onChange={onChange}\r\n      rows={rows}\r\n      style={overflowStyle}\r\n      value={value}\r\n      {...rest}\r\n    />\r\n  )\r\n}\r\n\r\nexport default TextField\r\n","export default __webpack_public_path__ + \"static/media/qrcode.f0b048aa.svg\";","import { background, lg, secondaryText, sm } from 'src/theme/variables'\r\nimport { createStyles } from '@material-ui/core'\r\n\r\nexport const styles = createStyles({\r\n  heading: {\r\n    padding: lg,\r\n    justifyContent: 'space-between',\r\n    maxHeight: '75px',\r\n    boxSizing: 'border-box',\r\n  },\r\n  loaderContainer: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  close: {\r\n    height: '25px',\r\n    width: '25px',\r\n    color: secondaryText,\r\n  },\r\n  detailsContainer: {\r\n    backgroundColor: background,\r\n    maxHeight: '450px',\r\n  },\r\n  buttonRow: {\r\n    height: '84px',\r\n    justifyContent: 'center',\r\n  },\r\n  button: {\r\n    '&:last-child': {\r\n      marginLeft: sm,\r\n    },\r\n  },\r\n})\r\n","import IconButton from '@material-ui/core/IconButton'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Close from '@material-ui/icons/Close'\r\nimport * as React from 'react'\r\nimport QrReader from 'react-qr-reader'\r\n\r\nimport { styles } from './style'\r\n\r\nimport Modal from 'src/components/Modal'\r\nimport Block from 'src/components/layout/Block'\r\nimport Button from 'src/components/layout/Button'\r\nimport Col from 'src/components/layout/Col'\r\nimport Hairline from 'src/components/layout/Hairline'\r\nimport Paragraph from 'src/components/layout/Paragraph'\r\nimport Row from 'src/components/layout/Row'\r\nimport { useEffect, useState } from 'react'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\ntype Props = {\r\n  isOpen: boolean\r\n  onClose: () => void\r\n  onScan: (value: string) => void\r\n}\r\n\r\nexport const ScanQRModal = ({ isOpen, onClose, onScan }: Props): React.ReactElement => {\r\n  const classes = useStyles()\r\n  const [fileUploadModalOpen, setFileUploadModalOpen] = useState<boolean>(false)\r\n  const [error, setError] = useState<string | null>(null)\r\n  const [cameraBlocked, setCameraBlocked] = useState<boolean>(false)\r\n  const scannerRef: any = React.createRef()\r\n  const openImageDialog = React.useCallback(() => {\r\n    scannerRef.current.openImageDialog()\r\n  }, [scannerRef])\r\n\r\n  useEffect(() => {\r\n    if (!fileUploadModalOpen && cameraBlocked && !error) {\r\n      setFileUploadModalOpen(true)\r\n      openImageDialog()\r\n    }\r\n  }, [cameraBlocked, openImageDialog, fileUploadModalOpen, setFileUploadModalOpen, error])\r\n\r\n  const onFileScannedResolve = (error: Error | null, successData: string | null) => {\r\n    if (error) {\r\n      console.error('QR code error', error)\r\n\r\n      if (error.name === 'NotAllowedError' || error.name === 'PermissionDismissedError') {\r\n        setCameraBlocked(true)\r\n        setFileUploadModalOpen(false)\r\n      } else {\r\n        setError('The QR could not be read')\r\n      }\r\n      return\r\n    }\r\n\r\n    if (successData) {\r\n      onScan(successData)\r\n    } else if (cameraBlocked) {\r\n      setError('The QR could not be read')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal description=\"Receive Tokens Form\" handleClose={onClose} open={isOpen} title=\"Receive Tokens\">\r\n      <Row align=\"center\" className={classes.heading} grow>\r\n        <Paragraph noMargin size=\"xl\">\r\n          Scan QR\r\n        </Paragraph>\r\n        <IconButton disableRipple onClick={onClose}>\r\n          <Close className={classes.close} />\r\n        </IconButton>\r\n      </Row>\r\n      <Hairline />\r\n      <Col className={classes.detailsContainer} layout=\"column\" middle=\"xs\">\r\n        {error && (\r\n          <Block padding=\"md\" margin=\"md\">\r\n            {error}\r\n          </Block>\r\n        )}\r\n        <QrReader\r\n          legacyMode={cameraBlocked}\r\n          onError={(err: Error) => onFileScannedResolve(err, null)}\r\n          onScan={(data: string) => onFileScannedResolve(null, data)}\r\n          ref={scannerRef}\r\n          style={{ width: '400px', height: '400px' }}\r\n          facingMode=\"user\"\r\n        />\r\n      </Col>\r\n      <Hairline />\r\n      <Row align=\"center\" className={classes.buttonRow}>\r\n        <Button className={classes.button} color=\"secondary\" minWidth={154} onClick={onClose}>\r\n          Close\r\n        </Button>\r\n        <Button\r\n          className={classes.button}\r\n          color=\"primary\"\r\n          minWidth={154}\r\n          onClick={() => {\r\n            setCameraBlocked(true)\r\n            setError(null)\r\n            setFileUploadModalOpen(false)\r\n          }}\r\n          variant=\"contained\"\r\n        >\r\n          Upload an image\r\n        </Button>\r\n      </Row>\r\n    </Modal>\r\n  )\r\n}\r\n","import { makeStyles } from '@material-ui/core/styles'\r\nimport { ReactElement, useState } from 'react'\r\n\r\nimport QRIcon from 'src/assets/icons/qrcode.svg'\r\nimport { ScanQRModal } from 'src/components/ScanQRModal'\r\nimport Img from 'src/components/layout/Img'\r\n\r\nconst useStyles = makeStyles({\r\n  qrCodeBtn: {\r\n    cursor: 'pointer',\r\n  },\r\n})\r\n\r\ntype Props = {\r\n  handleScan: (dataResult: string, closeQrModal: () => void) => void\r\n  testId?: string\r\n}\r\n\r\nexport const ScanQRWrapper = ({ handleScan, testId }: Props): ReactElement => {\r\n  const classes = useStyles()\r\n  const [qrModalOpen, setQrModalOpen] = useState(false)\r\n\r\n  const openQrModal = () => {\r\n    setQrModalOpen(true)\r\n  }\r\n\r\n  const closeQrModal = () => {\r\n    setQrModalOpen(false)\r\n  }\r\n\r\n  const onScanFinished = (value: string) => {\r\n    handleScan(value, closeQrModal)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Img\r\n        alt=\"Scan QR\"\r\n        className={classes.qrCodeBtn}\r\n        height={20}\r\n        onClick={() => openQrModal()}\r\n        role=\"button\"\r\n        src={QRIcon}\r\n        testId={testId || 'qr-icon'}\r\n      />\r\n      {qrModalOpen && <ScanQRModal isOpen={qrModalOpen} onClose={closeQrModal} onScan={onScanFinished} />}\r\n    </>\r\n  )\r\n}\r\n","import FormControl from '@material-ui/core/FormControl'\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport Select from '@material-ui/core/Select'\r\n\r\nconst style = {\r\n  minWidth: '100%',\r\n}\r\n\r\nconst SelectInput = ({\r\n  classes,\r\n  disableError,\r\n  formControlProps,\r\n  input: { name, onChange, value, ...restInput },\r\n  label,\r\n  meta,\r\n  renderValue,\r\n  ...rest\r\n}) => {\r\n  const showError = ((meta.submitError && !meta.dirtySinceLastSubmit) || meta.error) && meta.touched && !disableError\r\n  const inputProps = {\r\n    ...restInput,\r\n    name,\r\n  }\r\n\r\n  return (\r\n    <FormControl {...formControlProps} error={showError} style={style}>\r\n      <InputLabel htmlFor={name}>{label}</InputLabel>\r\n      <Select\r\n        classes={classes}\r\n        inputProps={inputProps}\r\n        onChange={onChange}\r\n        renderValue={renderValue}\r\n        value={value}\r\n        {...rest}\r\n      />\r\n      {showError && <FormHelperText>{meta.error || meta.submitError}</FormHelperText>}\r\n    </FormControl>\r\n  )\r\n}\r\n\r\nexport default SelectInput\r\n","import classNames from 'classnames/bind'\r\nimport * as React from 'react'\r\n\r\nimport styles from './index.module.scss'\r\n\r\nimport { capitalize } from 'src/utils/css'\r\n\r\nconst cx = classNames.bind(styles)\r\n\r\nconst Heading = (props) => {\r\n  const { align, children, className = '', color, margin, tag, testId, truncate, ...rest } = props\r\n\r\n  const classes = cx(className, 'heading', align, tag, margin ? capitalize(margin, 'margin') : undefined, color, {\r\n    truncate,\r\n  })\r\n\r\n  return React.createElement(tag, { ...rest, className: classes, 'data-testid': testId || '' }, children)\r\n}\r\n\r\nexport default Heading\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"Heading_heading__ZbcQo\",\"h1\":\"Heading_h1__-wMHl\",\"h2\":\"Heading_h2__3MQ2g\",\"h3\":\"Heading_h3__2Eii5\",\"h4\":\"Heading_h4__36iJN\",\"center\":\"Heading_center__Rnu47\",\"right\":\"Heading_right__nV1Cb\",\"truncate\":\"Heading_truncate__18Axc\",\"marginSm\":\"Heading_marginSm__3RRHh\",\"marginMd\":\"Heading_marginMd__2NmMz\",\"marginLg\":\"Heading_marginLg__2n10_\",\"marginXl\":\"Heading_marginXl__39Nag\",\"soft\":\"Heading_soft__3dfbK\",\"medium\":\"Heading_medium__XLAVh\",\"dark\":\"Heading_dark__36nFk\",\"fancy\":\"Heading_fancy__2yEZW\",\"warning\":\"Heading_warning__3tDQF\",\"primary\":\"Heading_primary__mUy5R\",\"secondary\":\"Heading_secondary__2YzXF\",\"disabled\":\"Heading_disabled__3ODVW\",\"error\":\"Heading_error__39ITf\",\"white\":\"Heading_white__2fXVW\"};","import { ReactElement } from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChainInfo } from '@gnosis.pm/safe-react-gateway-sdk'\r\n\r\nimport { getChainInfo } from 'src/config'\r\nimport { border, extraSmallFontSize, sm, xs, fontColor } from 'src/theme/variables'\r\n\r\ntype Props = {\r\n  networkInfo?: ChainInfo\r\n  onClick?: () => void\r\n  flexGrow?: boolean\r\n}\r\n\r\nfunction NetworkLabel({ networkInfo, onClick, flexGrow }: Props): ReactElement {\r\n  const selectedNetwork = networkInfo || getChainInfo()\r\n\r\n  return (\r\n    <StyledLabel onClick={onClick} flexGrow={flexGrow} {...selectedNetwork.theme}>\r\n      {selectedNetwork.chainName}\r\n    </StyledLabel>\r\n  )\r\n}\r\n\r\nexport default NetworkLabel\r\n\r\ntype StyledLabelTypes = {\r\n  backgroundColor: string\r\n  textColor: string\r\n  onClick?: () => void\r\n  flexGrow?: boolean\r\n}\r\n\r\nconst StyledLabel = styled.span<StyledLabelTypes>`\r\n  position: relative;\r\n  bottom: 2px;\r\n  line-height: normal;\r\n  display: inline-block;\r\n  min-width: 70px;\r\n  font-size: ${extraSmallFontSize};\r\n  padding: ${xs} ${sm};\r\n  background-color: ${({ backgroundColor }) => backgroundColor ?? border};\r\n  color: ${({ textColor }) => textColor ?? fontColor};\r\n  cursor: ${({ onClick }) => (onClick ? 'pointer' : 'inherit')};\r\n  text-align: center;\r\n  border-radius: 3px;\r\n  text-transform: capitalize;\r\n  flex-grow: ${({ flexGrow }) => (flexGrow ? 1 : 'initial')};\r\n`\r\n","import { useContext, ReactElement, useState, Children, createContext } from 'react'\r\nimport { history } from 'src/routes/routes'\r\n\r\nconst StepperContext = createContext({})\r\n\r\nfunction useStepper(): any {\r\n  const context = useContext(StepperContext)\r\n\r\n  const hasContextDefined = Object.keys(context).length > 0\r\n\r\n  if (!hasContextDefined) {\r\n    throw new Error('useStepper must be used within a StepperProvider!')\r\n  }\r\n\r\n  return context\r\n}\r\n\r\ntype StepperProviderTypes = {\r\n  onFinish?: () => void\r\n  store?: any\r\n  disableNextButton?: boolean\r\n  stepsComponents: ReactElement[]\r\n  children: ReactElement\r\n  testId?: string\r\n}\r\n\r\nfunction StepperProvider({\r\n  onFinish,\r\n  store,\r\n  disableNextButton,\r\n  stepsComponents,\r\n  children,\r\n  testId,\r\n}: StepperProviderTypes): ReactElement {\r\n  const [currentStep, setCurrentStep] = useState(0)\r\n\r\n  const steps = Children.toArray(stepsComponents)\r\n  const CurrentStepComponent: any = steps[currentStep]\r\n\r\n  const nextButtonType = CurrentStepComponent.props.nextButtonType\r\n  const nextButtonLabel = CurrentStepComponent.props.nextButtonLabel\r\n\r\n  const isSubmitButton = nextButtonType === 'submit'\r\n  const isFirstStep = currentStep === 0\r\n  const isLastStep = currentStep > steps.length - 2\r\n  const customNextButtonLabel = nextButtonLabel\r\n\r\n  const onClickPreviousStep = () => {\r\n    if (isFirstStep) {\r\n      history.goBack()\r\n    } else {\r\n      setCurrentStep((step) => step - 1)\r\n    }\r\n  }\r\n\r\n  const onClickNextStep = () => {\r\n    if (isSubmitButton) {\r\n      return\r\n    }\r\n\r\n    if (isLastStep) {\r\n      onFinish?.()\r\n      return\r\n    }\r\n\r\n    setCurrentStep((step) => step + 1)\r\n  }\r\n\r\n  const state = {\r\n    currentStep,\r\n    setCurrentStep,\r\n    steps,\r\n\r\n    CurrentStepComponent,\r\n\r\n    isFirstStep,\r\n    isLastStep,\r\n\r\n    onClickPreviousStep,\r\n    onClickNextStep,\r\n\r\n    disableNextButton,\r\n    nextButtonType,\r\n    customNextButtonLabel,\r\n\r\n    testId,\r\n\r\n    ...store,\r\n  }\r\n\r\n  return <StepperContext.Provider value={state}>{children}</StepperContext.Provider>\r\n}\r\n\r\nexport { useStepper, StepperProvider }\r\n","import { useCallback, useEffect, useMemo, useState } from 'react'\r\nimport { Field } from 'react-final-form'\r\nimport { OnChange } from 'react-final-form-listeners'\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\n\r\nimport TextField from 'src/components/forms/TextField'\r\nimport { Validator, composeValidators, mustBeEthereumAddress, required } from 'src/components/forms/validator'\r\nimport { trimSpaces } from 'src/utils/strings'\r\nimport { getAddressFromDomain } from 'src/logic/wallets/getWeb3'\r\nimport { isValidEnsName, isValidCryptoDomainName } from 'src/logic/wallets/ethAddresses'\r\nimport { checksumAddress } from 'src/utils/checksumAddress'\r\nimport { Errors, logError } from 'src/logic/exceptions/CodedException'\r\nimport { parsePrefixedAddress } from 'src/utils/prefixedAddress'\r\n\r\nexport interface AddressInputProps {\r\n  fieldMutator: (address: string) => void\r\n  name?: string\r\n  text?: string\r\n  placeholder?: string\r\n  inputAdornment?: { endAdornment: React.ReactElement } | undefined | false\r\n  testId: string\r\n  validators?: Validator[]\r\n  defaultValue?: string\r\n  disabled?: boolean\r\n  spellCheck?: boolean\r\n  className?: string\r\n}\r\n\r\nconst AddressInput = ({\r\n  className = '',\r\n  name = 'recipientAddress',\r\n  text = 'Recipient*',\r\n  placeholder = 'Recipient*',\r\n  fieldMutator,\r\n  testId,\r\n  inputAdornment,\r\n  validators = [],\r\n  defaultValue,\r\n  disabled,\r\n}: AddressInputProps): React.ReactElement => {\r\n  const [currentInput, setCurrentInput] = useState<string>('')\r\n  const [resolutions, setResolutions] = useState<Record<string, string | undefined>>({})\r\n  const resolvedAddress = resolutions[currentInput]\r\n  const isResolving = resolvedAddress === ''\r\n\r\n  // External validators must receive an unprefixed address\r\n  const sanitizedValidators = useCallback(\r\n    (val: string) => {\r\n      const parsed = parsePrefixedAddress(val)\r\n      return composeValidators(...validators)(parsed.address)\r\n    },\r\n    [validators],\r\n  )\r\n\r\n  // Internal validators + externally passed validators\r\n  const allValidators = useMemo(\r\n    () => composeValidators(required, mustBeEthereumAddress, sanitizedValidators),\r\n    [sanitizedValidators],\r\n  )\r\n\r\n  const onValueChange = useCallback(\r\n    (rawVal: string) => {\r\n      const address = trimSpaces(rawVal)\r\n\r\n      setCurrentInput(rawVal)\r\n\r\n      // A crypto domain name\r\n      if (isValidEnsName(address) || isValidCryptoDomainName(address)) {\r\n        setResolutions((prev) => ({ ...prev, [rawVal]: '' }))\r\n\r\n        getAddressFromDomain(address)\r\n          .then((resolverAddr) => {\r\n            const formattedAddress = checksumAddress(resolverAddr)\r\n            setResolutions((prev) => ({ ...prev, [rawVal]: formattedAddress }))\r\n          })\r\n          .catch((err) => {\r\n            setResolutions((prev) => ({ ...prev, [rawVal]: undefined }))\r\n            logError(Errors._101, err.message)\r\n          })\r\n      } else {\r\n        // A regular address hash\r\n        if (!mustBeEthereumAddress(address)) {\r\n          const parsed = parsePrefixedAddress(address)\r\n          const checkedAddress = checksumAddress(parsed.address) || parsed.address\r\n\r\n          // Field mutator (parent component) always gets an unprefixed address\r\n          fieldMutator(checkedAddress)\r\n        }\r\n      }\r\n    },\r\n    [setCurrentInput, setResolutions, fieldMutator],\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (resolvedAddress) {\r\n      onValueChange(resolvedAddress)\r\n    }\r\n  }, [resolvedAddress, onValueChange])\r\n\r\n  const adornment = isResolving\r\n    ? {\r\n        endAdornment: (\r\n          <InputAdornment position=\"end\">\r\n            <CircularProgress size=\"16px\" />\r\n          </InputAdornment>\r\n        ),\r\n      }\r\n    : inputAdornment\r\n\r\n  return (\r\n    <>\r\n      <Field\r\n        className={className}\r\n        component={TextField as any}\r\n        defaultValue={defaultValue}\r\n        disabled={disabled}\r\n        inputAdornment={adornment}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        text={text}\r\n        spellCheck={false}\r\n        validate={allValidators}\r\n        inputProps={{\r\n          'data-testid': testId,\r\n        }}\r\n      />\r\n\r\n      <OnChange name={name}>{onValueChange}</OnChange>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AddressInput\r\n","import classNames from 'classnames/bind'\r\n\r\nimport styles from './index.module.scss'\r\n\r\nconst cx = classNames.bind(styles)\r\n\r\nconst Page = ({ align, children, overflow }: any) => (\r\n  <main className={cx(styles.page, align, { overflow })}>{children}</main>\r\n)\r\n\r\nexport default Page\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Page_page__2x8Y1\",\"center\":\"Page_center__3Bcyi\",\"overflow\":\"Page_overflow__2Mdkw\"};","import { ReactElement } from 'react'\r\nimport StepperMUI from '@material-ui/core/Stepper'\r\nimport StepMUI from '@material-ui/core/Step'\r\nimport StepContent from '@material-ui/core/StepContent'\r\nimport StepLabel from '@material-ui/core/StepLabel'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport { makeStyles } from '@material-ui/core/'\r\n\r\nimport Hairline from 'src/components/layout/Hairline'\r\nimport Button from 'src/components/layout/Button'\r\nimport Col from 'src/components/layout/Col'\r\nimport Row from 'src/components/layout/Row'\r\nimport { boldFont, lg, sm } from 'src/theme/variables'\r\nimport { StepperProvider, useStepper } from './stepperContext'\r\n\r\ntype StepperProps = {\r\n  children: ReactElement[]\r\n  onFinish?: () => void\r\n  disableNextButton?: boolean\r\n  nextButtonType?: string\r\n  testId?: string\r\n}\r\n\r\nfunction StepperComponent(): ReactElement {\r\n  const {\r\n    currentStep,\r\n    setCurrentStep,\r\n    steps,\r\n\r\n    onClickPreviousStep,\r\n    onClickNextStep,\r\n\r\n    disableNextButton,\r\n    nextButtonType,\r\n\r\n    testId,\r\n  } = useStepper()\r\n\r\n  return (\r\n    <StepperMUI data-testid={testId} activeStep={currentStep} orientation=\"vertical\">\r\n      {steps.map(function Step(step, index) {\r\n        const isFirstStep = index === 0\r\n        const isStepLabelClickable = currentStep > index\r\n        const classes = useStyles({ isStepLabelClickable })\r\n\r\n        function onClickLabel() {\r\n          if (isStepLabelClickable) {\r\n            setCurrentStep(index)\r\n          }\r\n        }\r\n\r\n        const currentComponent = steps[index]\r\n\r\n        const backButtonLabel = isFirstStep ? 'Cancel' : 'Back'\r\n        const customNextButtonLabel = currentComponent.props.nextButtonLabel\r\n\r\n        const nextButtonLabel = customNextButtonLabel || 'Next'\r\n\r\n        return (\r\n          <StepMUI key={step.props.label}>\r\n            <StepLabel onClick={onClickLabel} className={classes.stepLabel}>\r\n              {step.props.label}\r\n            </StepLabel>\r\n            <StepContent>\r\n              <Paper className={classes.root} elevation={1}>\r\n                {currentComponent}\r\n                <Hairline />\r\n                <Row align=\"center\" grow className={classes.controlStyle}>\r\n                  <Col center=\"xs\" xs={12}>\r\n                    <Button onClick={onClickPreviousStep} size=\"small\" className={classes.backButton} type=\"button\">\r\n                      {backButtonLabel}\r\n                    </Button>\r\n                    <Button\r\n                      onClick={onClickNextStep}\r\n                      color=\"primary\"\r\n                      type={nextButtonType || 'button'}\r\n                      disabled={disableNextButton || step.props.disableNextButton}\r\n                      size=\"small\"\r\n                      className={classes.nextButton}\r\n                      variant=\"contained\"\r\n                    >\r\n                      {nextButtonLabel}\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Paper>\r\n            </StepContent>\r\n          </StepMUI>\r\n        )\r\n      })}\r\n    </StepperMUI>\r\n  )\r\n}\r\n\r\nexport default function Stepper(props: StepperProps): ReactElement {\r\n  return (\r\n    <StepperProvider stepsComponents={props.children} {...props}>\r\n      <StepperComponent />\r\n    </StepperProvider>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: '10px 0 10px 10px',\r\n    maxWidth: '770px',\r\n    boxShadow: '0 0 10px 0 rgba(33,48,77,0.10)',\r\n  },\r\n  controlStyle: {\r\n    backgroundColor: 'white',\r\n    padding: lg,\r\n    borderRadius: sm,\r\n  },\r\n  backButton: {\r\n    marginRight: sm,\r\n    fontWeight: boldFont,\r\n    color: theme.palette.secondary.main,\r\n  },\r\n  nextButton: {\r\n    fontWeight: boldFont,\r\n  },\r\n  stepLabel: {\r\n    cursor: ({ isStepLabelClickable }: any) => (isStepLabelClickable ? 'pointer' : 'inherit'),\r\n  },\r\n}))\r\n\r\nexport type StepElementProps = {\r\n  label: string\r\n  children: JSX.Element\r\n  nextButtonLabel?: string\r\n  nextButtonType?: string\r\n  disableNextButton?: boolean\r\n}\r\n\r\nexport type StepElementType = (props: StepElementProps) => ReactElement\r\n\r\nexport function StepElement({ children }: StepElementProps): ReactElement {\r\n  return children\r\n}\r\n","import React, { JSXElementConstructor, ReactElement, useMemo, useState } from 'react'\r\nimport { useEffect } from 'react'\r\nimport { Form } from 'react-final-form'\r\nimport { Validator } from '../forms/validator'\r\nimport Stepper, { StepElement, StepElementType } from '../Stepper/Stepper'\r\nimport { useStepper } from '../Stepper/stepperContext'\r\n\r\ntype StepperFormProps = {\r\n  testId: string\r\n  onSubmit: (values) => void\r\n  initialValues?: any\r\n  children: (JSX.Element | false | null)[]\r\n}\r\n\r\nfunction StepperForm({ children, onSubmit, testId, initialValues }: StepperFormProps): ReactElement {\r\n  const [validate, setValidate] = useState<(values) => Validator>()\r\n  const [onSubmitForm, setOnSubmitForm] = useState<(values) => void>()\r\n  const steps = useMemo(\r\n    () =>\r\n      React.Children.toArray(children)\r\n        .filter(Boolean)\r\n        .map((step: ReactElement, index, list) => {\r\n          function ComponentStep() {\r\n            const { setCurrentStep } = useStepper()\r\n            useEffect(() => {\r\n              const isLastStep = index === list.length - 1\r\n              setValidate(() => step.props.validate)\r\n              if (isLastStep) {\r\n                setOnSubmitForm(() => (values) => onSubmit(values))\r\n              } else {\r\n                setOnSubmitForm(() => () => {\r\n                  setCurrentStep((step) => step + 1)\r\n                })\r\n              }\r\n            }, [setCurrentStep])\r\n            return step.props.children\r\n          }\r\n\r\n          return (\r\n            <StepElement key={step.props.label} nextButtonType={'submit'} {...step.props}>\r\n              <ComponentStep />\r\n            </StepElement>\r\n          )\r\n        }),\r\n    [children, onSubmit],\r\n  )\r\n  return (\r\n    <Form\r\n      onSubmit={(values) => onSubmitForm?.(values)}\r\n      initialValues={initialValues}\r\n      validate={(values) => validate?.(values)}\r\n    >\r\n      {({ handleSubmit, submitting }) => (\r\n        <form data-testid={testId} onSubmit={handleSubmit}>\r\n          <Stepper disableNextButton={submitting} nextButtonType={'submit'}>\r\n            {steps}\r\n          </Stepper>\r\n        </form>\r\n      )}\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default StepperForm\r\n\r\nexport type StepFormElementProps = {\r\n  label: string\r\n  validate?: (values) => Record<string, unknown> | Promise<Record<string, string>>\r\n  nextButtonLabel?: string\r\n  children: ReactElement<any, string | JSXElementConstructor<any>>\r\n  disableNextButton?: boolean\r\n}\r\nexport type StepFormElementType = (props: StepFormElementProps) => StepElementType[]\r\n\r\nexport function StepFormElement({ children }: StepFormElementProps): ReactElement {\r\n  return children\r\n}\r\n","import { useEffect, useState } from 'react'\r\n\r\nimport { getChainName } from 'src/config'\r\nimport { animalsDict, adjectivesDict } from './useMnemonicName.dict'\r\n\r\nconst animals: string[] = animalsDict.trim().split(/\\s+/)\r\nconst adjectives: string[] = adjectivesDict.trim().split(/\\s+/)\r\n\r\nconst getRandomItem = <T>(arr: T[]): T => {\r\n  return arr[Math.floor(arr.length * Math.random())]\r\n}\r\n\r\nexport const getRandomName = (noun = getRandomItem<string>(animals)): string => {\r\n  const adj = getRandomItem<string>(adjectives)\r\n  return `${adj}-${noun}`\r\n}\r\n\r\nexport const useMnemonicName = (noun?: string): string => {\r\n  const [name, setName] = useState<string>('')\r\n\r\n  useEffect(() => {\r\n    setName(getRandomName(noun))\r\n  }, [noun])\r\n\r\n  return name\r\n}\r\n\r\nexport const useMnemonicSafeName = (): string => {\r\n  const networkName = getChainName().toLowerCase()\r\n  return useMnemonicName(`${networkName}-safe`)\r\n}\r\n","/**\r\n * The word lists are from https://github.com/mmkal/ts/tree/main/packages/memorable-moniker/src/dict\r\n */\r\nexport const animalsDict = `\r\naardvark\r\nalbatross\r\nalligator\r\nalpaca\r\nant\r\nanteater\r\nantelope\r\nape\r\narmadillo\r\nbaboon\r\nbadger\r\nbarracuda\r\nbat\r\nbear\r\nbeaver\r\nbee\r\nbinturong\r\nbird\r\nbison\r\nbluebird\r\nboar\r\nbobcat\r\nbuffalo\r\nbutterfly\r\ncamel\r\ncapybara\r\ncaracal\r\ncaribou\r\ncassowary\r\ncat\r\ncaterpillar\r\ncattle\r\nchameleon\r\nchamois\r\ncheetah\r\nchicken\r\nchimpanzee\r\nchinchilla\r\nchough\r\ncoati\r\ncobra\r\ncockroach\r\ncod\r\ncormorant\r\ncougar\r\ncoyote\r\ncrab\r\ncrane\r\ncricket\r\ncrocodile\r\ncrow\r\ncuckoo\r\ncurlew\r\ndeer\r\ndegu\r\ndhole\r\ndingo\r\ndinosaur\r\ndog\r\ndogfish\r\ndolphin\r\ndonkey\r\ndotterel\r\ndove\r\ndragonfly\r\nduck\r\ndugong\r\ndunlin\r\neagle\r\nechidna\r\neel\r\neland\r\nelephant\r\nelk\r\nemu\r\nfalcon\r\nferret\r\nfinch\r\nfish\r\nflamingo\r\nfly\r\nfox\r\nfrog\r\ngaur\r\ngazelle\r\ngecko\r\ngerbil\r\ngiraffe\r\ngnat\r\ngnu\r\ngoat\r\ngoldfinch\r\ngoosander\r\ngoose\r\ngorilla\r\ngoshawk\r\ngrasshopper\r\ngrouse\r\nguanaco\r\nguinea-pig\r\ngull\r\nhamster\r\nhare\r\nhawk\r\nhedgehog\r\nheron\r\nherring\r\nhippopotamus\r\nhoatzin\r\nhoopoe\r\nhornet\r\nhorse\r\nhuman\r\nhummingbird\r\nhyena\r\nibex\r\nibis\r\niguana\r\nimpala\r\njackal\r\njaguar\r\njay\r\njellyfish\r\njerboa\r\nkangaroo\r\nkingfisher\r\nkinkajou\r\nkoala\r\nkomodo-dragon\r\nkookaburra\r\nkouprey\r\nkudu\r\nlapwing\r\nlark\r\nlemur\r\nleopard\r\nlion\r\nlizard\r\nllama\r\nlobster\r\nlocust\r\nloris\r\nlouse\r\nlynx\r\nlyrebird\r\nmacaque\r\nmacaw\r\nmagpie\r\nmallard\r\nmammoth\r\nmanatee\r\nmandrill\r\nmarmoset\r\nmarmot\r\nmeerkat\r\nmink\r\nmole\r\nmongoose\r\nmonkey\r\nmoose\r\nmosquito\r\nmouse\r\nmyna\r\nnarwhal\r\nnewt\r\nnightingale\r\noctopus\r\nokapi\r\nopossum\r\norangutan\r\noryx\r\nostrich\r\notter\r\nowl\r\noyster\r\npanther\r\nparrot\r\npanda\r\npartridge\r\npeafowl\r\npelican\r\npenguin\r\npheasant\r\npig\r\npigeon\r\npika\r\npolar-bear\r\npony\r\nporcupine\r\nporpoise\r\npug\r\nquail\r\nquelea\r\nquetzal\r\nrabbit\r\nraccoon\r\nram\r\nrat\r\nraven\r\nred-deer\r\nred-panda\r\nreindeer\r\nrhea\r\nrhinoceros\r\nrook\r\nsalamander\r\nsalmon\r\nsand-dollar\r\nsandpiper\r\nsardine\r\nsea-lion\r\nseahorse\r\nseal\r\nshark\r\nsheep\r\nshrew\r\nsiamang\r\nskunk\r\nsloth\r\nsnail\r\nsnake\r\nspider\r\nsquid\r\nsquirrel\r\nstarling\r\nstegosaurus\r\nswan\r\ntamarin\r\ntapir\r\ntarsier\r\ntermite\r\ntiger\r\ntoad\r\ntoucan\r\nturaco\r\nturkey\r\nturtle\r\numbrellabird\r\nvinegaroon\r\nviper\r\nvulture\r\nwallaby\r\nwalrus\r\nwasp\r\nwaxwing\r\nweasel\r\nwhale\r\nwobbegong\r\nwolf\r\nwolverine\r\nwombat\r\nwoodpecker\r\nworm\r\nwren\r\nyak\r\nzebra\r\n`\r\n\r\nexport const adjectivesDict = `\r\nadmirable\r\nenergetic\r\nlucky\r\naffable\r\nenjoyable\r\nmagnificent\r\naffectionate\r\nenthusiastic\r\nmarvelous\r\nagreeable\r\neuphoric\r\nmeritorious\r\namazing\r\nexcellent\r\nmerry\r\namiable\r\nexceptional\r\nmild-mannered\r\namused\r\nexcited\r\nnice\r\namusing\r\nextraordinary\r\nnoble\r\nanimated\r\nexultant\r\noutstanding\r\nappreciative\r\nfabulous\r\noverjoyed\r\nastonishing\r\nfaithful\r\npassionate\r\nauthentic\r\nfantastic\r\npeaceful\r\nbelievable\r\nfervent\r\nplacid\r\nbenevolent\r\nfortunate\r\npleasant\r\nblissful\r\nfriendly\r\npleasing\r\nbouncy\r\nfun\r\npleasurable\r\nbrilliant\r\ngenuine\r\npositive\r\nbubbly\r\nglad\r\npraiseworthy\r\nbuoyant\r\nglorious\r\nprominent\r\ncalm\r\ngood\r\nproud\r\ncharming\r\ngood-humored\r\nrelaxed\r\ncheerful\r\ngood-natured\r\nreliable\r\ncheery\r\ngracious\r\nrespectable\r\nclever\r\ngrateful\r\nsharp\r\ncomfortable\r\ngreat\r\nsincere\r\ncomical\r\nhappy\r\nspirited\r\ncommendable\r\nheartfelt\r\nsplendid\r\nconfident\r\nhonest\r\nsuperb\r\ncongenial\r\nhonorable\r\nsuperior\r\ncontent\r\nhopeful\r\nterrific\r\ncordial\r\nhumorous\r\nthankful\r\ncourteous\r\nincredible\r\ntremendous\r\ndedicated\r\ninspirational\r\ntriumphant\r\ndelighted\r\njolly\r\ntrustworthy\r\ndelightful\r\njovial\r\ntrusty\r\ndependable\r\njoyful\r\ntruthful\r\ndevoted\r\njoyous\r\nuplifting\r\ndocile\r\njubilant\r\nvictorious\r\ndynamic\r\nkeen\r\nvigorous\r\neager\r\nkind\r\nvirtuous\r\nearnest\r\nlaudable\r\nvivacious\r\neasygoing\r\nlaughing\r\nwhimsical\r\nebullient\r\nlikable\r\nwitty\r\necstatic\r\nlively\r\nwonderful\r\nelated\r\nlovely\r\nworthy\r\nemphatic\r\nloving\r\nzealous\r\nenchanting\r\nloyal\r\nzestful\r\n`\r\n","export const FIELD_CREATE_CUSTOM_SAFE_NAME = 'customSafeName'\r\nexport const FIELD_CREATE_SUGGESTED_SAFE_NAME = 'suggestedSafeName'\r\nexport const FIELD_SAFE_OWNERS_LIST = 'owners'\r\nexport const FIELD_NEW_SAFE_THRESHOLD = 'newSafeThreshold'\r\nexport const FIELD_MAX_OWNER_NUMBER = 'maxOwnerNumber'\r\nexport const FIELD_NEW_SAFE_PROXY_SALT = 'safeCreationSalt'\r\nexport const FIELD_NEW_SAFE_GAS_LIMIT = 'gasLimit'\r\nexport const FIELD_NEW_SAFE_GAS_PRICE = 'gasPrice'\r\nexport const FIELD_NEW_SAFE_CREATION_TX_HASH = 'safeCreationTxHash'\r\n\r\nexport type OwnerFieldItem = {\r\n  nameFieldName: string\r\n  addressFieldName: string\r\n}\r\n\r\nexport type CreateSafeFormValues = {\r\n  [FIELD_CREATE_SUGGESTED_SAFE_NAME]: string\r\n  [FIELD_CREATE_CUSTOM_SAFE_NAME]?: string\r\n  [FIELD_NEW_SAFE_THRESHOLD]: number\r\n  [FIELD_SAFE_OWNERS_LIST]: Array<OwnerFieldItem>\r\n  [FIELD_MAX_OWNER_NUMBER]: number\r\n  [FIELD_NEW_SAFE_PROXY_SALT]: number\r\n  [FIELD_NEW_SAFE_GAS_LIMIT]: number\r\n  [FIELD_NEW_SAFE_GAS_PRICE]: string\r\n  [FIELD_NEW_SAFE_CREATION_TX_HASH]?: string\r\n}\r\n\r\nexport const SAFE_PENDING_CREATION_STORAGE_KEY = 'NEW_SAFE_PENDING_CREATION_STORAGE_KEY'\r\n","import { ReactElement, useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useForm } from 'react-final-form'\r\nimport styled from 'styled-components'\r\n\r\nimport Block from 'src/components/layout/Block'\r\nimport { lg, secondary } from 'src/theme/variables'\r\nimport Col from 'src/components/layout/Col'\r\nimport Paragraph from 'src/components/layout/Paragraph'\r\nimport Field from 'src/components/forms/Field'\r\nimport TextField from 'src/components/forms/TextField'\r\nimport { providerNameSelector } from 'src/logic/wallets/store/selectors'\r\nimport { FIELD_CREATE_CUSTOM_SAFE_NAME, FIELD_CREATE_SUGGESTED_SAFE_NAME } from '../fields/createSafeFields'\r\nimport { useStepper } from 'src/components/Stepper/stepperContext'\r\nimport NetworkLabel from 'src/components/NetworkLabel/NetworkLabel'\r\n\r\nexport const nameNewSafeStepLabel = 'Name'\r\n\r\nfunction NameNewSafeStep(): ReactElement {\r\n  const provider = useSelector(providerNameSelector)\r\n\r\n  const { setCurrentStep } = useStepper()\r\n\r\n  useEffect(() => {\r\n    if (!provider) {\r\n      setCurrentStep(0)\r\n    }\r\n  }, [provider, setCurrentStep])\r\n\r\n  const createNewSafeForm = useForm()\r\n\r\n  const formValues = createNewSafeForm.getState().values\r\n\r\n  return (\r\n    <BlockWithPadding data-testid={'create-safe-name-step'}>\r\n      <Block margin=\"md\">\r\n        <Paragraph color=\"primary\" noMargin size=\"lg\">\r\n          You are about to create a new Gnosis Safe wallet with one or more owners. First, let&apos;s give your new\r\n          wallet a name. This name is only stored locally and will never be shared with Gnosis or any third parties. The\r\n          new Safe will ONLY be available on <NetworkLabel />\r\n        </Paragraph>\r\n      </Block>\r\n      <label htmlFor={FIELD_CREATE_CUSTOM_SAFE_NAME}>Name of the new Safe</label>\r\n      <FieldContainer margin=\"lg\">\r\n        <Col xs={11}>\r\n          <Field\r\n            component={TextField}\r\n            name={FIELD_CREATE_CUSTOM_SAFE_NAME}\r\n            placeholder={formValues[FIELD_CREATE_SUGGESTED_SAFE_NAME]}\r\n            text=\"Safe name\"\r\n            type=\"text\"\r\n            testId=\"create-safe-name-field\"\r\n          />\r\n        </Col>\r\n      </FieldContainer>\r\n      <Block margin=\"lg\">\r\n        <Paragraph color=\"primary\" noMargin size=\"lg\">\r\n          By continuing you consent with the{' '}\r\n          <Link href=\"https://gnosis-safe.io/terms\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n            terms of use\r\n          </Link>{' '}\r\n          and{' '}\r\n          <Link href=\"https://gnosis-safe.io/privacy\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n            privacy policy\r\n          </Link>\r\n          . Most importantly, you confirm that your funds are held securely in the Gnosis Safe, a smart contract on the\r\n          Ethereum blockchain. These funds cannot be accessed by Gnosis at any point.\r\n        </Paragraph>\r\n      </Block>\r\n    </BlockWithPadding>\r\n  )\r\n}\r\n\r\nexport default NameNewSafeStep\r\n\r\nconst BlockWithPadding = styled(Block)`\r\n  padding: ${lg};\r\n`\r\n\r\nconst FieldContainer = styled(Block)`\r\n  display: flex;\r\n  max-width: 480px;\r\n  margin-top: 12px;\r\n`\r\n\r\nconst Link = styled.a`\r\n  color: ${secondary};\r\n`\r\n","import { useEffect, ReactElement, Fragment } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport styled from 'styled-components'\r\nimport CheckCircle from '@material-ui/icons/CheckCircle'\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport { Icon, Link, Text } from '@gnosis.pm/safe-react-components'\r\nimport { useForm } from 'react-final-form'\r\n\r\nimport Block from 'src/components/layout/Block'\r\nimport Paragraph from 'src/components/layout/Paragraph'\r\nimport AddressInput from 'src/components/forms/AddressInput'\r\nimport Button from 'src/components/layout/Button'\r\nimport Field from 'src/components/forms/Field'\r\nimport ButtonHelper from 'src/components/ButtonHelper'\r\nimport SelectField from 'src/components/forms/SelectField'\r\nimport { useStepper } from 'src/components/Stepper/stepperContext'\r\nimport { providerNameSelector } from 'src/logic/wallets/store/selectors'\r\nimport { disabled, extraSmallFontSize, lg, sm, xs } from 'src/theme/variables'\r\nimport Hairline from 'src/components/layout/Hairline'\r\nimport Row from 'src/components/layout/Row'\r\nimport Col from 'src/components/layout/Col'\r\nimport TextField from 'src/components/forms/TextField'\r\nimport {\r\n  ADDRESS_REPEATED_ERROR,\r\n  composeValidators,\r\n  minMaxLength,\r\n  minValue,\r\n  required,\r\n  THRESHOLD_ERROR,\r\n} from 'src/components/forms/validator'\r\nimport { FIELD_MAX_OWNER_NUMBER, FIELD_NEW_SAFE_THRESHOLD, FIELD_SAFE_OWNERS_LIST } from '../fields/createSafeFields'\r\nimport { ScanQRWrapper } from 'src/components/ScanQRModal/ScanQRWrapper'\r\nimport { currentNetworkAddressBookAsMap } from 'src/logic/addressBook/store/selectors'\r\nimport NetworkLabel from 'src/components/NetworkLabel/NetworkLabel'\r\n\r\nexport const ownersAndConfirmationsNewSafeStepLabel = 'Owners and Confirmations'\r\n\r\nfunction OwnersAndConfirmationsNewSafeStep(): ReactElement {\r\n  const provider = useSelector(providerNameSelector)\r\n  const { setCurrentStep } = useStepper()\r\n\r\n  useEffect(() => {\r\n    if (!provider) {\r\n      setCurrentStep(0)\r\n    }\r\n  }, [provider, setCurrentStep])\r\n\r\n  const createSafeForm = useForm()\r\n  const addressBook = useSelector(currentNetworkAddressBookAsMap)\r\n\r\n  const createSafeFormValues = createSafeForm.getState().values\r\n  const formErrors = createSafeForm.getState().errors || {}\r\n\r\n  const owners = createSafeFormValues[FIELD_SAFE_OWNERS_LIST]\r\n  const threshold = createSafeFormValues[FIELD_NEW_SAFE_THRESHOLD]\r\n  const maxOwnerNumber = createSafeFormValues[FIELD_MAX_OWNER_NUMBER]\r\n\r\n  function onClickAddNewOwner() {\r\n    const newEmptyOwner = {\r\n      nameFieldName: `owner-name-${maxOwnerNumber}`,\r\n      addressFieldName: `owner-address-${maxOwnerNumber}`,\r\n    }\r\n    createSafeForm.change(FIELD_SAFE_OWNERS_LIST, [...owners, newEmptyOwner])\r\n    const updatedMaxOwnerNumbers = maxOwnerNumber + 1\r\n    createSafeForm.change(FIELD_MAX_OWNER_NUMBER, updatedMaxOwnerNumbers)\r\n  }\r\n\r\n  function onClickRemoveOwner({ addressFieldName }) {\r\n    const ownersUpdated = owners.filter((owner) => owner.addressFieldName !== addressFieldName)\r\n\r\n    createSafeForm.change(FIELD_SAFE_OWNERS_LIST, ownersUpdated)\r\n\r\n    const hasToUpdateThreshold = threshold > ownersUpdated.length\r\n\r\n    if (hasToUpdateThreshold) {\r\n      createSafeForm.change(FIELD_NEW_SAFE_THRESHOLD, threshold - 1)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <BlockWithPadding data-testid={'create-safe-owners-confirmation-step'}>\r\n        <ParagraphWithMargin color=\"primary\" noMargin size=\"lg\">\r\n          Your Safe will have one or more owners. We have prefilled the first owner with your connected wallet details,\r\n          but you are free to change this to a different owner.\r\n        </ParagraphWithMargin>\r\n        <Paragraph color=\"primary\" size=\"lg\">\r\n          Add additional owners (e.g. wallets of your teammates) and specify how many of them have to confirm a\r\n          transaction before it gets executed. In general, the more confirmations required, the more secure your Safe\r\n          is.\r\n          <StyledLink\r\n            href=\"https://help.gnosis-safe.io/en/articles/4772567-what-gnosis-safe- setup-should-i-use\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n            title=\"Learn about which Safe setup to use\"\r\n          >\r\n            <Text size=\"xl\" as=\"span\" color=\"primary\">\r\n              Learn about which Safe setup to use\r\n            </Text>\r\n            <Icon size=\"sm\" type=\"externalLink\" color=\"primary\" />\r\n          </StyledLink>\r\n          . The new Safe will ONLY be available on <NetworkLabel />\r\n        </Paragraph>\r\n      </BlockWithPadding>\r\n      <Hairline />\r\n      <RowHeader>\r\n        <Col xs={3}>NAME</Col>\r\n        <Col xs={7}>ADDRESS</Col>\r\n      </RowHeader>\r\n      <Hairline />\r\n      <Block margin=\"md\" padding=\"md\">\r\n        <RowHeader>\r\n          {owners.map(({ nameFieldName, addressFieldName }) => {\r\n            const hasOwnerAddressError = formErrors[addressFieldName]\r\n            const showDeleteIcon = addressFieldName !== 'owner-address-0' // we hide de delete icon for the first owner\r\n\r\n            const handleScan = (address: string, closeQrModal: () => void): void => {\r\n              createSafeForm.change(addressFieldName, address)\r\n              closeQrModal()\r\n            }\r\n\r\n            return (\r\n              <Fragment key={addressFieldName}>\r\n                <Col xs={3}>\r\n                  <OwnerNameField\r\n                    component={TextField}\r\n                    name={nameFieldName}\r\n                    placeholder=\"Owner Name\"\r\n                    text=\"Owner Name\"\r\n                    type=\"text\"\r\n                    validate={minMaxLength(0, 50)}\r\n                    testId={nameFieldName}\r\n                  />\r\n                </Col>\r\n                <Col xs={7}>\r\n                  <AddressInput\r\n                    fieldMutator={(address) => {\r\n                      createSafeForm.change(addressFieldName, address)\r\n                      const addressName = addressBook[address]?.name\r\n                      if (addressName) {\r\n                        createSafeForm.change(nameFieldName, addressName)\r\n                      }\r\n                    }}\r\n                    inputAdornment={\r\n                      !hasOwnerAddressError && {\r\n                        endAdornment: (\r\n                          <InputAdornment position=\"end\">\r\n                            <CheckIconAddressAdornment data-testid={`${addressFieldName}-valid-adornment`} />\r\n                          </InputAdornment>\r\n                        ),\r\n                      }\r\n                    }\r\n                    name={addressFieldName}\r\n                    placeholder=\"Owner Address*\"\r\n                    text=\"Owner Address\"\r\n                    testId={addressFieldName}\r\n                  />\r\n                </Col>\r\n                <OwnersIconsContainer xs={1} center=\"xs\" middle=\"xs\">\r\n                  <ScanQRWrapper handleScan={handleScan} testId={`${addressFieldName}-scan-QR`} />\r\n                </OwnersIconsContainer>\r\n                {showDeleteIcon && (\r\n                  <OwnersIconsContainer xs={1} center=\"xs\" middle=\"xs\">\r\n                    <ButtonHelper\r\n                      onClick={() => onClickRemoveOwner({ addressFieldName })}\r\n                      dataTestId={`${addressFieldName}-remove-button`}\r\n                    >\r\n                      <Icon size=\"sm\" type=\"delete\" color=\"icon\" tooltip=\"Delete Owner\" />\r\n                    </ButtonHelper>\r\n                  </OwnersIconsContainer>\r\n                )}\r\n              </Fragment>\r\n            )\r\n          })}\r\n        </RowHeader>\r\n        <OwnerContainer align=\"center\" grow>\r\n          <Button color=\"secondary\" data-testid=\"add-new-owner\" onClick={onClickAddNewOwner}>\r\n            <Paragraph noMargin size=\"lg\">\r\n              + Add another owner\r\n            </Paragraph>\r\n          </Button>\r\n        </OwnerContainer>\r\n        <BlockWithPadding>\r\n          <Block>\r\n            <Paragraph>Any transaction requires the confirmation of:</Paragraph>\r\n          </Block>\r\n          <OwnerContainer align=\"center\" grow>\r\n            <Col xs={1}>\r\n              <Field\r\n                component={SelectField}\r\n                data-testid=\"threshold-selector-input\"\r\n                name={FIELD_NEW_SAFE_THRESHOLD}\r\n                validate={composeValidators(required, minValue(1))}\r\n              >\r\n                {owners.map((_, option) => (\r\n                  <MenuItem\r\n                    key={`threshold-selector-option-${option}`}\r\n                    value={option + 1}\r\n                    data-testid={`threshold-selector-option-${option + 1}`}\r\n                  >\r\n                    {option + 1}\r\n                  </MenuItem>\r\n                ))}\r\n              </Field>\r\n            </Col>\r\n            <Col xs={11}>\r\n              <StyledParagraph noMargin>out of {owners.length} owner(s)</StyledParagraph>\r\n            </Col>\r\n          </OwnerContainer>\r\n        </BlockWithPadding>\r\n      </Block>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OwnersAndConfirmationsNewSafeStep\r\n\r\nexport const ownersAndConfirmationsNewSafeStepValidations = (values: {\r\n  [FIELD_SAFE_OWNERS_LIST]: Array<Record<string, string>>\r\n  [FIELD_NEW_SAFE_THRESHOLD]: number\r\n}): Record<string, string> => {\r\n  const errors = {}\r\n\r\n  const owners = values[FIELD_SAFE_OWNERS_LIST]\r\n  const threshold = values[FIELD_NEW_SAFE_THRESHOLD]\r\n  const addresses = owners.map(({ addressFieldName }) => values[addressFieldName])\r\n\r\n  // we check repeated addresses\r\n  owners.forEach(({ addressFieldName }, index) => {\r\n    const address = values[addressFieldName]\r\n    const previousOwners = addresses.slice(0, index)\r\n    const isRepeated = previousOwners.includes(address)\r\n    if (isRepeated) {\r\n      errors[addressFieldName] = ADDRESS_REPEATED_ERROR\r\n    }\r\n  })\r\n\r\n  const isValidThreshold = !!threshold && threshold <= owners.length\r\n  if (!isValidThreshold) {\r\n    errors[FIELD_NEW_SAFE_THRESHOLD] = THRESHOLD_ERROR\r\n  }\r\n\r\n  return errors\r\n}\r\n\r\nconst BlockWithPadding = styled(Block)`\r\n  padding: ${lg};\r\n`\r\n\r\nconst ParagraphWithMargin = styled(Paragraph)`\r\n  margin-bottom: 12px;\r\n`\r\n\r\nconst StyledLink = styled(Link)`\r\n  padding: 0 ${xs};\r\n  & svg {\r\n    position: relative;\r\n    top: 1px;\r\n    left: ${xs};\r\n    height: 14px;\r\n    width: 14px;\r\n  }\r\n`\r\nconst RowHeader = styled(Row)`\r\n  padding: ${sm} ${lg};\r\n  font-size: ${extraSmallFontSize};\r\n  color: ${disabled};\r\n`\r\n\r\nconst OwnerNameField = styled(Field)`\r\n  margin-right: ${sm};\r\n  margin-bottom: ${sm};\r\n`\r\nconst CheckIconAddressAdornment = styled(CheckCircle)`\r\n  color: #03ae60;\r\n  height: 20px;\r\n`\r\n\r\nconst OwnersIconsContainer = styled(Col)`\r\n  height: 56px;\r\n  max-width: 32px;\r\n  cursor: pointer;\r\n`\r\n\r\nconst OwnerContainer = styled(Row)`\r\n  justify-content: center;\r\n`\r\n\r\nconst StyledParagraph = styled(Paragraph)`\r\n  padding-left: 12px;\r\n`\r\n","import { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { estimateGasForDeployingSafe } from 'src/logic/contracts/safeContracts'\r\nimport { fromTokenUnit } from 'src/logic/tokens/utils/humanReadableValue'\r\nimport { formatAmount } from 'src/logic/tokens/utils/formatAmount'\r\n\r\nimport { calculateGasPrice } from 'src/logic/wallets/ethTransactions'\r\nimport { userAccountSelector } from '../wallets/store/selectors'\r\nimport { getNativeCurrency } from 'src/config'\r\n\r\ntype EstimateSafeCreationGasProps = {\r\n  addresses: string[]\r\n  numOwners: number\r\n  safeCreationSalt: number\r\n}\r\n\r\ntype SafeCreationEstimationResult = {\r\n  gasEstimation: number // Amount of gas needed for execute or approve the transaction\r\n  gasCostFormatted: string // Cost of gas in format '< | > 100'\r\n  gasLimit: number // Minimum gas requited to execute the Tx\r\n  gasPrice: string\r\n}\r\n\r\nconst estimateGas = async (\r\n  userAccount: string,\r\n  numOwners: number,\r\n  safeCreationSalt: number,\r\n  addresses: string[],\r\n): Promise<SafeCreationEstimationResult> => {\r\n  const [gasEstimation, gasPrice] = await Promise.all([\r\n    estimateGasForDeployingSafe(addresses, numOwners, userAccount, safeCreationSalt),\r\n    calculateGasPrice(),\r\n  ])\r\n  const estimatedGasCosts = gasEstimation * parseInt(gasPrice, 10)\r\n  const nativeCurrency = getNativeCurrency()\r\n  const gasCost = fromTokenUnit(estimatedGasCosts, nativeCurrency.decimals)\r\n  const gasCostFormatted = formatAmount(gasCost)\r\n\r\n  return {\r\n    gasPrice,\r\n    gasEstimation,\r\n    gasCostFormatted,\r\n    gasLimit: gasEstimation,\r\n  }\r\n}\r\n\r\nexport const useEstimateSafeCreationGas = ({\r\n  addresses,\r\n  numOwners,\r\n  safeCreationSalt,\r\n}: EstimateSafeCreationGasProps): SafeCreationEstimationResult => {\r\n  const [gasEstimation, setGasEstimation] = useState<SafeCreationEstimationResult>({\r\n    gasEstimation: 0,\r\n    gasCostFormatted: '< 0.001',\r\n    gasLimit: 0,\r\n    gasPrice: '0',\r\n  })\r\n  const userAccount = useSelector(userAccountSelector)\r\n  // Serialize the addresses array so that it doesn't trigger the effect due to the dependencies\r\n  const addressesSerialized = JSON.stringify(addresses)\r\n\r\n  useEffect(() => {\r\n    const addressesList = JSON.parse(addressesSerialized)\r\n    if (!addressesList.length || !numOwners || !userAccount) {\r\n      return\r\n    }\r\n\r\n    estimateGas(userAccount, numOwners, safeCreationSalt, addressesList)?.then(setGasEstimation)\r\n  }, [numOwners, safeCreationSalt, addressesSerialized, userAccount])\r\n\r\n  return gasEstimation\r\n}\r\n","import React, { ReactElement, useEffect } from 'react'\r\nimport { useForm } from 'react-final-form'\r\nimport { useSelector } from 'react-redux'\r\nimport styled from 'styled-components'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\n\r\nimport Block from 'src/components/layout/Block'\r\nimport Col from 'src/components/layout/Col'\r\nimport Hairline from 'src/components/layout/Hairline'\r\nimport Paragraph from 'src/components/layout/Paragraph'\r\nimport Row from 'src/components/layout/Row'\r\nimport { background, border, lg, sm } from 'src/theme/variables'\r\nimport {\r\n  FIELD_CREATE_CUSTOM_SAFE_NAME,\r\n  FIELD_CREATE_SUGGESTED_SAFE_NAME,\r\n  FIELD_NEW_SAFE_GAS_LIMIT,\r\n  FIELD_NEW_SAFE_GAS_PRICE,\r\n  FIELD_NEW_SAFE_PROXY_SALT,\r\n  FIELD_NEW_SAFE_THRESHOLD,\r\n  FIELD_SAFE_OWNERS_LIST,\r\n} from '../fields/createSafeFields'\r\nimport { getExplorerInfo, getNativeCurrency } from 'src/config'\r\nimport { useEstimateSafeCreationGas } from 'src/logic/hooks/useEstimateSafeCreationGas'\r\nimport NetworkLabel from 'src/components/NetworkLabel/NetworkLabel'\r\nimport PrefixedEthHashInfo from 'src/components/PrefixedEthHashInfo'\r\nimport { useStepper } from 'src/components/Stepper/stepperContext'\r\nimport { providerNameSelector } from 'src/logic/wallets/store/selectors'\r\n\r\nexport const reviewNewSafeStepLabel = 'Review'\r\n\r\nfunction ReviewNewSafeStep(): ReactElement | null {\r\n  const provider = useSelector(providerNameSelector)\r\n\r\n  const { setCurrentStep } = useStepper()\r\n\r\n  useEffect(() => {\r\n    if (!provider) {\r\n      setCurrentStep(0)\r\n    }\r\n  }, [provider, setCurrentStep])\r\n\r\n  const createSafeForm = useForm()\r\n  const createSafeFormValues = createSafeForm.getState().values\r\n\r\n  const defaultSafeValue = createSafeFormValues[FIELD_CREATE_SUGGESTED_SAFE_NAME]\r\n  const safeName = createSafeFormValues[FIELD_CREATE_CUSTOM_SAFE_NAME] || defaultSafeValue\r\n  const threshold = createSafeFormValues[FIELD_NEW_SAFE_THRESHOLD]\r\n  const owners = createSafeFormValues[FIELD_SAFE_OWNERS_LIST]\r\n  const numberOfOwners = owners.length\r\n  const safeCreationSalt = createSafeFormValues[FIELD_NEW_SAFE_PROXY_SALT]\r\n  const ownerAddresses = owners.map(({ addressFieldName }) => createSafeFormValues[addressFieldName])\r\n\r\n  const { gasCostFormatted, gasLimit, gasPrice } = useEstimateSafeCreationGas({\r\n    addresses: ownerAddresses,\r\n    numOwners: numberOfOwners,\r\n    safeCreationSalt,\r\n  })\r\n  const nativeCurrency = getNativeCurrency()\r\n\r\n  useEffect(() => {\r\n    createSafeForm.change(FIELD_NEW_SAFE_GAS_LIMIT, gasLimit)\r\n    createSafeForm.change(FIELD_NEW_SAFE_GAS_PRICE, gasPrice)\r\n  }, [gasLimit, gasPrice, createSafeForm])\r\n\r\n  return (\r\n    <Row data-testid={'create-safe-review-step'}>\r\n      <Col xs={4} layout=\"column\">\r\n        <DetailsContainer>\r\n          <Block margin=\"lg\">\r\n            <Paragraph color=\"primary\" noMargin size=\"lg\">\r\n              Details\r\n            </Paragraph>\r\n          </Block>\r\n          <Block margin=\"lg\">\r\n            <Paragraph color=\"disabled\" noMargin size=\"sm\">\r\n              Name of new Safe\r\n            </Paragraph>\r\n            <SafeNameParagraph\r\n              color=\"primary\"\r\n              noMargin\r\n              size=\"md\"\r\n              weight=\"bolder\"\r\n              data-testid=\"create-safe-review-safe-name\"\r\n            >\r\n              {safeName}\r\n            </SafeNameParagraph>\r\n          </Block>\r\n          <Block margin=\"lg\">\r\n            <Paragraph color=\"disabled\" noMargin size=\"sm\">\r\n              Any transaction requires the confirmation of:\r\n            </Paragraph>\r\n            <Paragraph\r\n              color=\"primary\"\r\n              noMargin\r\n              size=\"md\"\r\n              weight=\"bolder\"\r\n              data-testid={'create-safe-review-threshold-label'}\r\n            >\r\n              {`${threshold} out of ${numberOfOwners} owners`}\r\n            </Paragraph>\r\n          </Block>\r\n        </DetailsContainer>\r\n      </Col>\r\n      <Col layout=\"column\" xs={8}>\r\n        <TableContainer>\r\n          <TitleContainer>\r\n            <Paragraph color=\"primary\" noMargin size=\"lg\">\r\n              {`${numberOfOwners} Safe owners`}\r\n            </Paragraph>\r\n          </TitleContainer>\r\n          <Hairline />\r\n          {owners.map(({ nameFieldName, addressFieldName }) => {\r\n            const ownerName = createSafeFormValues[nameFieldName]\r\n            const ownerAddress = createSafeFormValues[addressFieldName]\r\n            return (\r\n              <React.Fragment key={`owner-${addressFieldName}`}>\r\n                <OwnersAddressesContainer>\r\n                  <Col align=\"center\" xs={12} data-testid={`create-safe-owner-details-${ownerAddress}`}>\r\n                    <PrefixedEthHashInfo\r\n                      hash={ownerAddress}\r\n                      name={ownerName}\r\n                      showAvatar\r\n                      showCopyBtn\r\n                      explorerUrl={getExplorerInfo(ownerAddress)}\r\n                    />\r\n                  </Col>\r\n                </OwnersAddressesContainer>\r\n                <Hairline />\r\n              </React.Fragment>\r\n            )\r\n          })}\r\n        </TableContainer>\r\n      </Col>\r\n      <DescriptionContainer align=\"center\">\r\n        <Paragraph color=\"primary\" noMargin size=\"lg\">\r\n          You&apos;re about to create a new Safe on <NetworkLabel /> and will have to confirm a transaction with your\r\n          currently connected wallet. The creation will cost approximately {gasCostFormatted} {nativeCurrency.symbol}.\r\n          The exact amount will be determined by your wallet.\r\n        </Paragraph>\r\n      </DescriptionContainer>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default ReviewNewSafeStep\r\n\r\nconst DetailsContainer = styled(Block)`\r\n  padding: ${lg};\r\n  border-right: solid 1px ${border};\r\n  height: 100%;\r\n`\r\n\r\nconst SafeNameParagraph = styled(Paragraph)`\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n`\r\nconst TitleContainer = styled(Block)`\r\n  padding: ${lg};\r\n`\r\n\r\nconst OwnersAddressesContainer = styled(Row)`\r\n  align-items: center;\r\n  min-width: fit-content;\r\n  padding: ${sm};\r\n  padding-left: ${lg};\r\n`\r\nconst DescriptionContainer = styled(Row)`\r\n  background-color: ${background};\r\n  padding: ${lg};\r\n  text-align: center;\r\n`\r\n","import { Transaction, TransactionReceipt } from 'web3-core'\r\n\r\nimport { getWeb3ReadOnly } from 'src/logic/wallets/getWeb3'\r\nimport { sameAddress } from 'src/logic/wallets/ethAddresses'\r\nimport { sameString } from 'src/utils/strings'\r\nimport { CodedException, Errors } from 'src/logic/exceptions/CodedException'\r\n\r\ntype TxMonitorProps = {\r\n  sender: string\r\n  hash: string\r\n  data: string\r\n  nonce?: number\r\n  gasPrice?: string\r\n}\r\n\r\ntype TxMonitorOptions = {\r\n  delay?: number\r\n  maxRetries?: number\r\n}\r\n\r\nconst MAX_RETRIES = 720\r\nconst DEFAULT_DELAY = 5000\r\n\r\nasync function findSpeedupTx({ sender, hash, nonce, data }: TxMonitorProps): Promise<Transaction | undefined> {\r\n  const web3 = getWeb3ReadOnly()\r\n  const latestBlock = await web3.eth.getBlock('latest', true)\r\n\r\n  const replacementTransaction = latestBlock.transactions.find((transaction) => {\r\n    // TODO: use gasPrice, timestamp or another better way to differentiate\r\n    return (\r\n      sameAddress(transaction.from, sender) &&\r\n      transaction.nonce === nonce &&\r\n      !sameString(transaction.hash, hash) &&\r\n      // if `data` differs, then it's a replacement tx, not a speedup\r\n      sameString(transaction.input, data)\r\n    )\r\n  })\r\n\r\n  return replacementTransaction\r\n}\r\n\r\n/**\r\n * Recursively inspects a pending tx. Until it's found, and returns the mined tx receipt\r\n *\r\n * @param {object} txParams\r\n * @param {string} txParams.sender\r\n * @param {string} txParams.hash\r\n * @param {string} txParams.data\r\n * @param {number | undefined} txParams.nonce\r\n * @param {string | undefined} txParams.gasPrice\r\n * @param {object} options\r\n * @param {number} options.delay\r\n * @returns {Promise<TransactionReceipt>}\r\n */\r\nexport const txMonitor = (\r\n  { sender, hash, data, nonce, gasPrice }: TxMonitorProps,\r\n  options?: TxMonitorOptions,\r\n  tries = 0,\r\n): Promise<TransactionReceipt> => {\r\n  const web3 = getWeb3ReadOnly()\r\n  return new Promise<TransactionReceipt>((resolve, reject) => {\r\n    const { maxRetries = MAX_RETRIES } = options || {}\r\n    if (tries > maxRetries) {\r\n      reject(new CodedException(Errors._805, 'max retries reached'))\r\n      return\r\n    }\r\n\r\n    const monitorFn = async (): Promise<unknown> => {\r\n      // Case 1: this block is accessed for the first time, no nonce\r\n      if (nonce == null || gasPrice == null) {\r\n        let params: TxMonitorProps = { sender, hash, data }\r\n        try {\r\n          // Find the nonce for the current tx\r\n          const transaction = await web3.eth.getTransaction(hash)\r\n          if (transaction) {\r\n            params = { ...params, nonce: transaction.nonce, gasPrice: transaction.gasPrice }\r\n          }\r\n        } catch (e) {\r\n          // ignore error\r\n        }\r\n\r\n        return txMonitor(params, options, tries + 1)\r\n          .then(resolve)\r\n          .catch(reject)\r\n      }\r\n\r\n      // Case 2: the nonce exists, try to get the receipt for the original tx\r\n      try {\r\n        const firstTxReceipt = await web3.eth.getTransactionReceipt(hash)\r\n        if (firstTxReceipt) {\r\n          return resolve(firstTxReceipt)\r\n        }\r\n      } catch (e) {\r\n        // proceed to case 3\r\n      }\r\n\r\n      // Case 3: original tx not found, try to find a sped-up tx\r\n      try {\r\n        const replacementTx = await findSpeedupTx({ sender, hash, nonce, data })\r\n\r\n        if (replacementTx) {\r\n          const replacementReceipt = await web3.eth.getTransactionReceipt(replacementTx.hash)\r\n\r\n          // goal achieved\r\n          if (replacementReceipt) {\r\n            return resolve(replacementReceipt)\r\n          }\r\n\r\n          // tx exists but no receipt yet, it's pending\r\n          return txMonitor(\r\n            {\r\n              sender,\r\n              nonce,\r\n              hash: replacementTx.hash,\r\n              data: replacementTx.input,\r\n              gasPrice: replacementTx.gasPrice,\r\n            },\r\n            options,\r\n            tries + 1,\r\n          )\r\n            .then(resolve)\r\n            .catch(reject)\r\n        }\r\n      } catch (e) {\r\n        // ignore error\r\n      }\r\n\r\n      // Neither the original nor a replacement transactions were found, try again\r\n      txMonitor({ sender, hash, data, nonce, gasPrice }, options, tries + 1)\r\n        .then(resolve)\r\n        .catch(reject)\r\n    }\r\n\r\n    setTimeout(monitorFn, options?.delay ?? DEFAULT_DELAY)\r\n  })\r\n}\r\n","import { ReactElement, SyntheticEvent } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport { Icon, Link, Loader, Text } from '@gnosis.pm/safe-react-components'\r\n\r\nimport Button from 'src/components/layout/Button'\r\nimport { getHashedExplorerUrl } from 'src/config'\r\nimport Hairline from 'src/components/layout/Hairline'\r\n\r\nconst StyledText = styled(Text)`\r\n  display: inline-flex;\r\n  a {\r\n    margin-left: 4px;\r\n  }\r\n  svg {\r\n    position: relative;\r\n    top: 4px;\r\n    left: 4px;\r\n  }\r\n`\r\nconst ButtonWithMargin = styled(Button)`\r\n  margin-right: 16px;\r\n`\r\nconst FooterContainer = styled.div`\r\n  width: 100%;\r\n  height: 76px;\r\n\r\n  button {\r\n    margin-top: 24px;\r\n  }\r\n`\r\n\r\nconst LoaderText = styled.span`\r\n  margin-left: 10px;\r\n`\r\n\r\nexport const GenericFooter = ({ safeCreationTxHash }: { safeCreationTxHash: string }): ReactElement => {\r\n  const explorerUrl = getHashedExplorerUrl(safeCreationTxHash)\r\n  const match = /(http|https):\\/\\/(\\w+\\.\\w+)\\/.*/i.exec(explorerUrl)\r\n  const explorerDomain = match !== null ? match[2] : 'Network Explorer'\r\n\r\n  return (\r\n    <span>\r\n      <Text size=\"xl\">This process should take a couple of minutes.</Text>\r\n      <StyledText size=\"xl\">\r\n        Follow the progress on{' '}\r\n        <Link\r\n          href={explorerUrl}\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          data-testid=\"safe-create-explorer-link\"\r\n          title=\"More info about this in Etherscan\"\r\n        >\r\n          <Text size=\"xl\" as=\"span\" color=\"primary\">\r\n            {explorerDomain}\r\n          </Text>\r\n          <Icon size=\"sm\" type=\"externalLink\" color=\"primary\" />\r\n        </Link>\r\n      </StyledText>\r\n    </span>\r\n  )\r\n}\r\n\r\nexport const ContinueFooter = ({\r\n  continueButtonDisabled,\r\n  onContinue,\r\n}: {\r\n  continueButtonDisabled: boolean\r\n  onContinue: (event: SyntheticEvent) => void\r\n}): ReactElement => (\r\n  <FooterContainer>\r\n    <Hairline />\r\n    <Button\r\n      color=\"primary\"\r\n      disabled={continueButtonDisabled}\r\n      onClick={onContinue}\r\n      variant=\"contained\"\r\n      data-testid=\"continue-btn\"\r\n    >\r\n      {continueButtonDisabled ? (\r\n        <>\r\n          <Loader size=\"xs\" color=\"secondaryLight\" /> <LoaderText>Loading your Safe</LoaderText>\r\n        </>\r\n      ) : (\r\n        <>Get started</>\r\n      )}\r\n    </Button>\r\n  </FooterContainer>\r\n)\r\n\r\nexport const ErrorFooter = ({\r\n  onCancel,\r\n  onRetry,\r\n}: {\r\n  onCancel: (event: SyntheticEvent) => void\r\n  onRetry: (event: SyntheticEvent) => void\r\n}): ReactElement => (\r\n  <FooterContainer>\r\n    <Hairline />\r\n    <ButtonWithMargin onClick={onCancel} variant=\"contained\">\r\n      Cancel\r\n    </ButtonWithMargin>\r\n    <Button color=\"primary\" onClick={onRetry} variant=\"contained\">\r\n      Retry\r\n    </Button>\r\n  </FooterContainer>\r\n)\r\n","import { ContinueFooter, GenericFooter } from './components/Footer'\r\n\r\nexport const isConfirmationStep = (stepIndex?: number): boolean => stepIndex === 0\r\n\r\nexport const steps = [\r\n  {\r\n    id: '1',\r\n    label: 'Waiting for transaction confirmation',\r\n    description: undefined,\r\n    instruction: 'Please confirm the Safe creation in your wallet',\r\n    footerComponent: null,\r\n  },\r\n  {\r\n    id: '2',\r\n    label: 'Transaction submitted',\r\n    description: undefined,\r\n    instruction: 'Please do not leave the page',\r\n    footerComponent: GenericFooter,\r\n  },\r\n  {\r\n    id: '3',\r\n    label: 'Validating transaction',\r\n    description: undefined,\r\n    instruction: 'Please do not leave the page',\r\n    footerComponent: GenericFooter,\r\n  },\r\n  {\r\n    id: '4',\r\n    label: 'Deploying smart contract',\r\n    description: undefined,\r\n    instruction: 'Please do not leave the page',\r\n    footerComponent: GenericFooter,\r\n  },\r\n  {\r\n    id: '5',\r\n    label: 'Generating your Safe',\r\n    description: undefined,\r\n    instruction: 'Please do not leave the page',\r\n    footerComponent: GenericFooter,\r\n  },\r\n  {\r\n    id: '6',\r\n    label: 'Success',\r\n    description: 'Your Safe was created successfully',\r\n    instruction: undefined,\r\n    footerComponent: ContinueFooter,\r\n  },\r\n]\r\n","export default __webpack_public_path__ + \"static/media/safe-created.a4191f5c.svg\";","export default __webpack_public_path__ + \"static/media/vault-error.6a7f7919.svg\";","export default __webpack_public_path__ + \"static/media/creation-process.b0164935.gif\";","import abiDecoder from 'abi-decoder'\r\nimport { getProxyFactoryDeployment } from '@gnosis.pm/safe-deployments'\r\nimport { Log } from 'web3-core'\r\nimport { checksumAddress } from 'src/utils/checksumAddress'\r\n\r\nimport { LATEST_SAFE_VERSION } from 'src/utils/constants'\r\n\r\n// Init abiDecoder with ProxyCreation ABI\r\nabiDecoder.addABI(\r\n  getProxyFactoryDeployment({\r\n    version: LATEST_SAFE_VERSION,\r\n  })?.abi,\r\n)\r\n\r\nexport const getNewSafeAddressFromLogs = (logs: Log[]): string => {\r\n  // We find the ProxyCreation event in the logs\r\n  const proxyCreationEvent = abiDecoder.decodeLogs(logs).find(({ name }) => name === 'ProxyCreation')\r\n\r\n  // We extract the proxy creation information from the event parameters\r\n  const proxyInformation = proxyCreationEvent?.events?.find(({ name }) => name === 'proxy')\r\n\r\n  return checksumAddress(proxyInformation?.value || '')\r\n}\r\n","import { Loader, Stepper } from '@gnosis.pm/safe-react-components'\r\nimport { useEffect, useState, useCallback } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport styled from 'styled-components'\r\n\r\nimport { ErrorFooter } from 'src/routes/opening/components/Footer'\r\nimport { isConfirmationStep, steps } from './steps'\r\n\r\nimport Button from 'src/components/layout/Button'\r\nimport Heading from 'src/components/layout/Heading'\r\nimport Img from 'src/components/layout/Img'\r\nimport Paragraph from 'src/components/layout/Paragraph'\r\nimport { instantiateSafeContracts } from 'src/logic/contracts/safeContracts'\r\nimport { EMPTY_DATA } from 'src/logic/wallets/ethTransactions'\r\nimport { getWeb3, isTxPendingError } from 'src/logic/wallets/getWeb3'\r\nimport { background, connected, fontColor } from 'src/theme/variables'\r\nimport { providerNameSelector } from 'src/logic/wallets/store/selectors'\r\n\r\nimport SuccessSvg from './assets/safe-created.svg'\r\nimport VaultErrorSvg from './assets/vault-error.svg'\r\nimport VaultLoading from './assets/creation-process.gif'\r\nimport { TransactionReceipt } from 'web3-core'\r\nimport { Errors, logError } from 'src/logic/exceptions/CodedException'\r\nimport { NOTIFICATIONS } from 'src/logic/notifications'\r\nimport enqueueSnackbar from 'src/logic/notifications/store/actions/enqueueSnackbar'\r\nimport { getNewSafeAddressFromLogs } from 'src/routes/opening/utils/getSafeAddressFromLogs'\r\n\r\nexport const SafeDeployment = ({\r\n  creationTxHash,\r\n  onCancel,\r\n  onRetry,\r\n  onSuccess,\r\n  submittedPromise,\r\n}: Props): React.ReactElement => {\r\n  const [loading, setLoading] = useState(true)\r\n  const [stepIndex, setStepIndex] = useState(0)\r\n  const [safeCreationTxHash, setSafeCreationTxHash] = useState('')\r\n  const [createdSafeAddress, setCreatedSafeAddress] = useState('')\r\n\r\n  const [error, setError] = useState(false)\r\n  const [intervalStarted, setIntervalStarted] = useState(false)\r\n  const [waitingSafeDeployed, setWaitingSafeDeployed] = useState(false)\r\n  const [continueButtonDisabled, setContinueButtonDisabled] = useState(false)\r\n  const provider = useSelector(providerNameSelector)\r\n  const dispatch = useDispatch()\r\n\r\n  const confirmationStep = isConfirmationStep(stepIndex)\r\n\r\n  const navigateToSafe = () => {\r\n    setContinueButtonDisabled(true)\r\n    onSuccess(createdSafeAddress)\r\n  }\r\n\r\n  const showSnackbarError = useCallback(\r\n    (err: Error) => {\r\n      if (isTxPendingError(err)) {\r\n        dispatch(enqueueSnackbar({ ...NOTIFICATIONS.TX_PENDING_MSG }))\r\n      } else {\r\n        dispatch(enqueueSnackbar({ ...NOTIFICATIONS.CREATE_SAFE_FAILED_MSG }))\r\n      }\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  const onError = useCallback(\r\n    (error: Error) => {\r\n      setIntervalStarted(false)\r\n      setWaitingSafeDeployed(false)\r\n      setContinueButtonDisabled(false)\r\n      setError(true)\r\n      logError(Errors._800, error.message)\r\n      showSnackbarError(error)\r\n    },\r\n    [setIntervalStarted, setWaitingSafeDeployed, setContinueButtonDisabled, setError, showSnackbarError],\r\n  )\r\n\r\n  // discard click event value\r\n  const onRetryTx = () => {\r\n    setStepIndex(0)\r\n    setError(false)\r\n    onRetry()\r\n  }\r\n\r\n  const getImage = () => {\r\n    if (error) {\r\n      return VaultErrorSvg\r\n    }\r\n\r\n    if (stepIndex <= 4) {\r\n      return VaultLoading\r\n    }\r\n\r\n    return SuccessSvg\r\n  }\r\n\r\n  useEffect(() => {\r\n    const loadContracts = async () => {\r\n      await instantiateSafeContracts()\r\n      setLoading(false)\r\n    }\r\n\r\n    if (provider) {\r\n      loadContracts()\r\n    }\r\n  }, [provider])\r\n\r\n  // creating safe from from submission\r\n  useEffect(() => {\r\n    if (submittedPromise === undefined) {\r\n      return\r\n    }\r\n\r\n    const handlePromise = async () => {\r\n      setStepIndex(0)\r\n      try {\r\n        const receipt = await submittedPromise\r\n        setSafeCreationTxHash(receipt.transactionHash)\r\n        setStepIndex(1)\r\n        setIntervalStarted(true)\r\n      } catch (err) {\r\n        onError(err)\r\n      }\r\n    }\r\n\r\n    handlePromise()\r\n  }, [submittedPromise, onError])\r\n\r\n  // recovering safe creation from txHash\r\n  useEffect(() => {\r\n    if (creationTxHash === undefined) {\r\n      return\r\n    }\r\n    setSafeCreationTxHash(creationTxHash)\r\n    setStepIndex(1)\r\n    setIntervalStarted(true)\r\n  }, [creationTxHash])\r\n\r\n  useEffect(() => {\r\n    if (!intervalStarted) {\r\n      return\r\n    }\r\n\r\n    const isTxMined = async (txHash) => {\r\n      const web3 = getWeb3()\r\n\r\n      const txResult = await web3.eth.getTransaction(txHash)\r\n      if (txResult.blockNumber === null) {\r\n        return false\r\n      }\r\n\r\n      const receipt = await web3.eth.getTransactionReceipt(txHash)\r\n      if (!receipt.status) {\r\n        throw Error('TX status reverted')\r\n      }\r\n\r\n      return true\r\n    }\r\n\r\n    const interval = setInterval(async () => {\r\n      if (stepIndex < 4) {\r\n        setStepIndex(stepIndex + 1)\r\n      }\r\n\r\n      // safe created using the form\r\n      if (submittedPromise !== undefined) {\r\n        submittedPromise.then(() => {\r\n          setStepIndex(4)\r\n          setWaitingSafeDeployed(true)\r\n          setIntervalStarted(false)\r\n        })\r\n      }\r\n\r\n      // safe pending creation recovered from storage\r\n      if (creationTxHash !== undefined) {\r\n        try {\r\n          const res = await isTxMined(creationTxHash)\r\n          if (res) {\r\n            setStepIndex(4)\r\n            setWaitingSafeDeployed(true)\r\n            setIntervalStarted(false)\r\n          }\r\n        } catch (error) {\r\n          onError(error)\r\n        }\r\n      }\r\n    }, 3000)\r\n\r\n    return () => {\r\n      clearInterval(interval)\r\n    }\r\n  }, [creationTxHash, submittedPromise, intervalStarted, stepIndex, error, onError])\r\n\r\n  useEffect(() => {\r\n    let interval\r\n\r\n    const awaitUntilSafeIsDeployed = async (safeCreationTxHash: string) => {\r\n      try {\r\n        const web3 = getWeb3()\r\n        const receipt = await web3.eth.getTransactionReceipt(safeCreationTxHash)\r\n\r\n        let safeAddress\r\n\r\n        if (receipt.events) {\r\n          safeAddress = receipt.events.ProxyCreation.returnValues.proxy\r\n        } else {\r\n          // If the node doesn't return the events we try to fetch it from logs\r\n          safeAddress = getNewSafeAddressFromLogs(receipt.logs)\r\n        }\r\n\r\n        setCreatedSafeAddress(safeAddress)\r\n\r\n        interval = setInterval(async () => {\r\n          const code = await web3.eth.getCode(safeAddress)\r\n          if (code !== EMPTY_DATA) {\r\n            setStepIndex(5)\r\n          }\r\n        }, 1000)\r\n      } catch (error) {\r\n        onError(error)\r\n      }\r\n    }\r\n\r\n    if (!waitingSafeDeployed) {\r\n      return\r\n    }\r\n\r\n    if (typeof safeCreationTxHash === 'string') {\r\n      awaitUntilSafeIsDeployed(safeCreationTxHash)\r\n    }\r\n\r\n    return () => {\r\n      clearInterval(interval)\r\n    }\r\n  }, [safeCreationTxHash, waitingSafeDeployed, onError])\r\n\r\n  if (loading || stepIndex === undefined) {\r\n    return (\r\n      <LoaderContainer data-testid={'create-safe-loader'}>\r\n        <Loader size=\"md\" />\r\n      </LoaderContainer>\r\n    )\r\n  }\r\n\r\n  let FooterComponent\r\n  if (error) {\r\n    FooterComponent = ErrorFooter\r\n  } else if (steps[stepIndex].footerComponent) {\r\n    FooterComponent = steps[stepIndex].footerComponent\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Title tag=\"h2\" testId=\"safe-creation-process-title\">\r\n        Safe creation process\r\n      </Title>\r\n      <Nav>\r\n        <Stepper activeStepIndex={stepIndex} error={error} orientation=\"vertical\" steps={steps} />\r\n      </Nav>\r\n      <Body>\r\n        <BodyImage>\r\n          <Img alt=\"Vault\" height={92} src={getImage()} />\r\n        </BodyImage>\r\n\r\n        <BodyDescription>\r\n          <CardTitle>{steps[stepIndex].description || steps[stepIndex].label}</CardTitle>\r\n        </BodyDescription>\r\n\r\n        {steps[stepIndex].instruction && (\r\n          <BodyInstruction>\r\n            <FullParagraph\r\n              color=\"primary\"\r\n              inversecolors={confirmationStep.toString()}\r\n              noMargin\r\n              size=\"md\"\r\n              $stepIndex={stepIndex}\r\n            >\r\n              {error ? 'You can Cancel or Retry the Safe creation process.' : steps[stepIndex].instruction}\r\n            </FullParagraph>\r\n          </BodyInstruction>\r\n        )}\r\n\r\n        <BodyFooter>\r\n          {FooterComponent ? (\r\n            <FooterComponent\r\n              continueButtonDisabled={continueButtonDisabled}\r\n              onCancel={onCancel}\r\n              onClick={onRetryTx}\r\n              onContinue={navigateToSafe}\r\n              onRetry={onRetryTx}\r\n              safeCreationTxHash={safeCreationTxHash}\r\n            />\r\n          ) : null}\r\n        </BodyFooter>\r\n      </Body>\r\n\r\n      {stepIndex !== 0 && (\r\n        <BackButton color=\"primary\" minWidth={140} onClick={onCancel} data-testid=\"safe-creation-back-btn\">\r\n          Back\r\n        </BackButton>\r\n      )}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\ntype Props = {\r\n  creationTxHash?: string\r\n  submittedPromise?: Promise<TransactionReceipt>\r\n  onRetry: () => void\r\n  onSuccess: (createdSafeAddress: string) => void\r\n  onCancel: () => void\r\n}\r\n\r\ninterface FullParagraphProps {\r\n  inversecolors: string\r\n  $stepIndex: number\r\n}\r\n\r\nconst LoaderContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100%;\r\n`\r\n\r\nconst Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 250px auto;\r\n  grid-template-rows: 43px auto;\r\n  margin-bottom: 30px;\r\n`\r\n\r\nconst Title = styled(Heading)`\r\n  grid-column: 1/3;\r\n  grid-row: 1;\r\n  margin: 7px 0 0 0 !important;\r\n`\r\n\r\nconst Nav = styled.div`\r\n  grid-column: 1;\r\n  grid-row: 2;\r\n`\r\n\r\nconst Body = styled.div`\r\n  grid-column: 2;\r\n  grid-row: 2;\r\n  text-align: center;\r\n  background-color: ${({ theme }) => theme.colors.white};\r\n  border-radius: 5px;\r\n  min-width: 700px;\r\n  padding-top: 70px;\r\n  box-shadow: 0 0 10px 0 rgba(33, 48, 77, 0.1);\r\n\r\n  display: grid;\r\n  grid-template-rows: 100px 50px 110px 1fr;\r\n`\r\n\r\nconst CardTitle = styled.div`\r\n  font-size: 20px;\r\n  padding-top: 10px;\r\n`\r\n\r\nconst FullParagraph = styled(Paragraph)<FullParagraphProps>`\r\n  background-color: ${({ $stepIndex }) => ($stepIndex === 0 ? connected : background)};\r\n  color: ${({ theme, $stepIndex }) => ($stepIndex === 0 ? theme.colors.white : fontColor)};\r\n  padding: 28px;\r\n  font-size: 20px;\r\n  margin-bottom: 16px;\r\n  transition: color 0.3s ease-in-out, background-color 0.3s ease-in-out;\r\n`\r\n\r\nconst BodyImage = styled.div`\r\n  grid-row: 1;\r\n`\r\nconst BodyDescription = styled.div`\r\n  grid-row: 2;\r\n`\r\nconst BodyInstruction = styled.div`\r\n  grid-row: 3;\r\n  margin: 27px 0;\r\n`\r\nconst BodyFooter = styled.div`\r\n  grid-row: 4;\r\n\r\n  padding: 10px 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-end;\r\n`\r\n\r\nconst BackButton = styled(Button)`\r\n  grid-column: 2;\r\n  margin: 20px auto 0;\r\n`\r\n","import { ReactElement, useState, useEffect, useCallback } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { backOff } from 'exponential-backoff'\r\nimport { TransactionReceipt } from 'web3-core'\r\nimport { GenericModal } from '@gnosis.pm/safe-react-components'\r\nimport styled from 'styled-components'\r\n\r\nimport { getSafeDeploymentTransaction } from 'src/logic/contracts/safeContracts'\r\nimport { txMonitor } from 'src/logic/safe/transactions/txMonitor'\r\nimport { userAccountSelector } from 'src/logic/wallets/store/selectors'\r\nimport { SafeDeployment } from 'src/routes/opening'\r\nimport { useAnalytics, USER_EVENTS } from 'src/utils/googleAnalytics'\r\nimport { loadFromStorage, removeFromStorage, saveToStorage } from 'src/utils/storage'\r\nimport { addOrUpdateSafe } from 'src/logic/safe/store/actions/addOrUpdateSafe'\r\nimport {\r\n  SAFE_PENDING_CREATION_STORAGE_KEY,\r\n  CreateSafeFormValues,\r\n  FIELD_NEW_SAFE_THRESHOLD,\r\n  FIELD_SAFE_OWNERS_LIST,\r\n  FIELD_NEW_SAFE_GAS_LIMIT,\r\n  FIELD_NEW_SAFE_CREATION_TX_HASH,\r\n  FIELD_CREATE_SUGGESTED_SAFE_NAME,\r\n  FIELD_CREATE_CUSTOM_SAFE_NAME,\r\n  FIELD_NEW_SAFE_PROXY_SALT,\r\n  FIELD_NEW_SAFE_GAS_PRICE,\r\n} from '../fields/createSafeFields'\r\nimport { getSafeInfo } from 'src/logic/safe/utils/safeInformation'\r\nimport { buildSafe } from 'src/logic/safe/store/actions/fetchSafe'\r\nimport { addressBookSafeLoad } from 'src/logic/addressBook/store/actions'\r\nimport { makeAddressBookEntry } from 'src/logic/addressBook/model/addressBook'\r\nimport Paragraph from 'src/components/layout/Paragraph'\r\nimport NetworkLabel from 'src/components/NetworkLabel/NetworkLabel'\r\nimport Button from 'src/components/layout/Button'\r\nimport { boldFont } from 'src/theme/variables'\r\nimport { WELCOME_ROUTE, history, generateSafeRoute, SAFE_ROUTES } from 'src/routes/routes'\r\nimport { getExplorerInfo, getShortName } from 'src/config'\r\nimport { getGasParam } from 'src/logic/safe/transactions/gas'\r\nimport { currentChainId } from 'src/logic/config/store/selectors'\r\nimport PrefixedEthHashInfo from 'src/components/PrefixedEthHashInfo'\r\n\r\nexport const InlinePrefixedEthHashInfo = styled(PrefixedEthHashInfo)`\r\n  display: inline-flex;\r\n`\r\n\r\ntype ModalDataType = {\r\n  safeAddress: string\r\n  safeName?: string\r\n  safeCreationTxHash?: string\r\n}\r\n\r\nconst goToWelcomePage = () => {\r\n  history.push(WELCOME_ROUTE)\r\n}\r\n\r\nconst sleep = (ms: number): Promise<void> => new Promise((resolve) => setTimeout(resolve, ms))\r\n\r\nfunction SafeCreationProcess(): ReactElement {\r\n  const [safeCreationTxHash, setSafeCreationTxHash] = useState<string | undefined>()\r\n  const [creationTxPromise, setCreationTxPromise] = useState<Promise<TransactionReceipt>>()\r\n\r\n  const { trackEvent } = useAnalytics()\r\n  const dispatch = useDispatch()\r\n  const userAddressAccount = useSelector(userAccountSelector)\r\n  const chainId = useSelector(currentChainId)\r\n\r\n  const [showModal, setShowModal] = useState(false)\r\n  const [modalData, setModalData] = useState<ModalDataType>({ safeAddress: '' })\r\n  const [showCouldNotLoadModal, setShowCouldNotLoadModal] = useState(false)\r\n  const [newSafeAddress, setNewSafeAddress] = useState<string>('')\r\n\r\n  const createNewSafe = useCallback(() => {\r\n    const safeCreationFormValues = loadFromStorage<CreateSafeFormValues>(SAFE_PENDING_CREATION_STORAGE_KEY)\r\n\r\n    if (!safeCreationFormValues) {\r\n      goToWelcomePage()\r\n      return\r\n    }\r\n\r\n    setSafeCreationTxHash(safeCreationFormValues[FIELD_NEW_SAFE_CREATION_TX_HASH])\r\n\r\n    setCreationTxPromise(\r\n      new Promise((resolve, reject) => {\r\n        const confirmations = safeCreationFormValues[FIELD_NEW_SAFE_THRESHOLD]\r\n        const ownerFields = safeCreationFormValues[FIELD_SAFE_OWNERS_LIST]\r\n        const ownerAddresses = ownerFields.map(({ addressFieldName }) => safeCreationFormValues[addressFieldName])\r\n        const safeCreationSalt = safeCreationFormValues[FIELD_NEW_SAFE_PROXY_SALT]\r\n        const gasLimit = safeCreationFormValues[FIELD_NEW_SAFE_GAS_LIMIT]\r\n        const gasPrice = safeCreationFormValues[FIELD_NEW_SAFE_GAS_PRICE]\r\n        const deploymentTx = getSafeDeploymentTransaction(ownerAddresses, confirmations, safeCreationSalt)\r\n\r\n        deploymentTx\r\n          .send({\r\n            from: userAddressAccount,\r\n            gas: gasLimit,\r\n            [getGasParam()]: gasPrice,\r\n          })\r\n          .once('transactionHash', (txHash) => {\r\n            saveToStorage(SAFE_PENDING_CREATION_STORAGE_KEY, {\r\n              [FIELD_NEW_SAFE_CREATION_TX_HASH]: txHash,\r\n              ...safeCreationFormValues,\r\n            })\r\n\r\n            // Monitor the latest block to find a potential speed-up tx\r\n            txMonitor({ sender: userAddressAccount, hash: txHash, data: deploymentTx.encodeABI() })\r\n              .then((txReceipt) => {\r\n                console.log('Speed up tx mined:', txReceipt)\r\n                resolve(txReceipt)\r\n              })\r\n              .catch((error) => {\r\n                reject(error)\r\n              })\r\n          })\r\n          .then((txReceipt) => {\r\n            console.log('First tx mined:', txReceipt)\r\n            resolve(txReceipt)\r\n          })\r\n          .catch((error) => {\r\n            reject(error)\r\n          })\r\n      }),\r\n    )\r\n  }, [userAddressAccount])\r\n\r\n  useEffect(() => {\r\n    const safeCreationFormValues = loadFromStorage<CreateSafeFormValues>(SAFE_PENDING_CREATION_STORAGE_KEY)\r\n    if (!safeCreationFormValues) {\r\n      goToWelcomePage()\r\n      return\r\n    }\r\n\r\n    const safeCreationTxHash = safeCreationFormValues[FIELD_NEW_SAFE_CREATION_TX_HASH]\r\n    if (safeCreationTxHash) {\r\n      setSafeCreationTxHash(safeCreationTxHash)\r\n    } else {\r\n      createNewSafe()\r\n    }\r\n  }, [createNewSafe])\r\n\r\n  const onSafeCreated = async (newSafeAddress: string): Promise<void> => {\r\n    const createSafeFormValues = loadFromStorage<CreateSafeFormValues>(SAFE_PENDING_CREATION_STORAGE_KEY)\r\n\r\n    if (!createSafeFormValues) {\r\n      goToWelcomePage()\r\n      return\r\n    }\r\n\r\n    const safeCreationTxHash = createSafeFormValues[FIELD_NEW_SAFE_CREATION_TX_HASH]\r\n    const defaultSafeValue = createSafeFormValues[FIELD_CREATE_SUGGESTED_SAFE_NAME]\r\n    const safeName = createSafeFormValues[FIELD_CREATE_CUSTOM_SAFE_NAME] || defaultSafeValue\r\n    const owners = createSafeFormValues[FIELD_SAFE_OWNERS_LIST]\r\n\r\n    // we update the address book with the owners and the new safe\r\n    const ownersAddressBookEntry = owners.map(({ nameFieldName, addressFieldName }) =>\r\n      makeAddressBookEntry({\r\n        address: createSafeFormValues[addressFieldName],\r\n        name: createSafeFormValues[nameFieldName],\r\n        chainId,\r\n      }),\r\n    )\r\n    const safeAddressBookEntry = makeAddressBookEntry({ address: newSafeAddress, name: safeName, chainId })\r\n    await dispatch(addressBookSafeLoad([...ownersAddressBookEntry, safeAddressBookEntry]))\r\n\r\n    trackEvent(USER_EVENTS.CREATE_SAFE)\r\n\r\n    // a default 5s wait before starting to request safe information\r\n    await sleep(5000)\r\n\r\n    try {\r\n      // exponential delay between attempts for around 4 min\r\n      await backOff(() => getSafeInfo(newSafeAddress), {\r\n        startingDelay: 750,\r\n        maxDelay: 20000,\r\n        numOfAttempts: 19,\r\n        retry: (e) => {\r\n          console.info('waiting for client-gateway to provide safe information', e)\r\n          return true\r\n        },\r\n      })\r\n    } catch (e) {\r\n      setNewSafeAddress(newSafeAddress)\r\n      setShowCouldNotLoadModal(true)\r\n      return\r\n    }\r\n\r\n    const safeProps = await buildSafe(newSafeAddress)\r\n    await dispatch(addOrUpdateSafe(safeProps))\r\n\r\n    setShowModal(true)\r\n    setModalData({\r\n      safeAddress: safeProps.address,\r\n      safeName,\r\n      safeCreationTxHash,\r\n    })\r\n  }\r\n\r\n  const onRetry = (): void => {\r\n    const safeCreationFormValues = loadFromStorage<CreateSafeFormValues>(SAFE_PENDING_CREATION_STORAGE_KEY)\r\n\r\n    if (!safeCreationFormValues) {\r\n      goToWelcomePage()\r\n      return\r\n    }\r\n\r\n    setSafeCreationTxHash(undefined)\r\n    delete safeCreationFormValues.safeCreationTxHash\r\n    saveToStorage(SAFE_PENDING_CREATION_STORAGE_KEY, safeCreationFormValues)\r\n    createNewSafe()\r\n  }\r\n\r\n  const onCancel = () => {\r\n    removeFromStorage(SAFE_PENDING_CREATION_STORAGE_KEY)\r\n    goToWelcomePage()\r\n  }\r\n\r\n  function onClickModalButton() {\r\n    removeFromStorage(SAFE_PENDING_CREATION_STORAGE_KEY)\r\n\r\n    const { safeName, safeCreationTxHash, safeAddress } = modalData\r\n    history.push({\r\n      pathname: generateSafeRoute(SAFE_ROUTES.ASSETS_BALANCES, {\r\n        shortName: getShortName(),\r\n        safeAddress,\r\n      }),\r\n      state: {\r\n        name: safeName,\r\n        tx: safeCreationTxHash,\r\n      },\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <SafeDeployment\r\n        creationTxHash={safeCreationTxHash}\r\n        onCancel={onCancel}\r\n        onRetry={onRetry}\r\n        onSuccess={onSafeCreated}\r\n        submittedPromise={creationTxPromise}\r\n      />\r\n      {showModal && (\r\n        <GenericModal\r\n          onClose={onClickModalButton}\r\n          title=\"Safe Created!\"\r\n          body={\r\n            <div data-testid=\"safe-created-popup\">\r\n              <Paragraph>\r\n                You just created a new Safe on <NetworkLabel />\r\n              </Paragraph>\r\n              <Paragraph>\r\n                You will only be able to use this Safe on <NetworkLabel />\r\n              </Paragraph>\r\n              <Paragraph>\r\n                If you send assets on other networks to this address,{' '}\r\n                <EmphasisLabel>you will not be able to access them</EmphasisLabel>\r\n              </Paragraph>\r\n            </div>\r\n          }\r\n          footer={\r\n            <ButtonContainer>\r\n              <Button\r\n                testId=\"safe-created-button\"\r\n                onClick={onClickModalButton}\r\n                color=\"primary\"\r\n                type={'button'}\r\n                size=\"small\"\r\n                variant=\"contained\"\r\n              >\r\n                Continue\r\n              </Button>\r\n            </ButtonContainer>\r\n          }\r\n        />\r\n      )}\r\n      {showCouldNotLoadModal && newSafeAddress && (\r\n        <GenericModal\r\n          onClose={onCancel}\r\n          title=\"Unable to load the new Safe\"\r\n          body={\r\n            <div>\r\n              <Paragraph>\r\n                We are currently unable to load the Safe but it was successfully created and can be found <br />\r\n                under the following address{' '}\r\n                <InlinePrefixedEthHashInfo\r\n                  hash={newSafeAddress}\r\n                  showCopyBtn\r\n                  explorerUrl={getExplorerInfo(newSafeAddress)}\r\n                />\r\n              </Paragraph>\r\n            </div>\r\n          }\r\n          footer={\r\n            <ButtonContainer>\r\n              <Button onClick={onCancel} color=\"primary\" type=\"button\" size=\"small\" variant=\"contained\">\r\n                OK\r\n              </Button>\r\n            </ButtonContainer>\r\n          }\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SafeCreationProcess\r\n\r\nconst ButtonContainer = styled.div`\r\n  text-align: center;\r\n`\r\n\r\nconst EmphasisLabel = styled.span`\r\n  font-weight: ${boldFont};\r\n`\r\n","import { ReactElement, useState, useCallback } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { ButtonLink } from '@gnosis.pm/safe-react-components'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport List from '@material-ui/core/List'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport styled from 'styled-components'\r\n\r\nimport Block from 'src/components/layout/Block'\r\nimport { ChainId } from 'src/config/chain.d'\r\nimport { setChainId } from 'src/logic/config/utils'\r\nimport { lg } from 'src/theme/variables'\r\nimport NetworkLabel from 'src/components/NetworkLabel/NetworkLabel'\r\nimport Paragraph from 'src/components/layout/Paragraph'\r\nimport { providerNameSelector, shouldSwitchWalletChain } from 'src/logic/wallets/store/selectors'\r\nimport ConnectButton from 'src/components/ConnectButton'\r\nimport WalletSwitch from 'src/components/WalletSwitch'\r\nimport { getChains } from 'src/config/cache/chains'\r\n\r\nexport const selectWalletAndNetworkStepLabel = 'Connect wallet & select network'\r\n\r\nfunction SelectWalletAndNetworkStep(): ReactElement {\r\n  const [isNetworkSelectorPopupOpen, setIsNetworkSelectorPopupOpen] = useState(false)\r\n  const isWalletConnected = !!useSelector(providerNameSelector)\r\n  const isWrongNetwork = useSelector(shouldSwitchWalletChain)\r\n\r\n  function openNetworkSelectorPopup() {\r\n    setIsNetworkSelectorPopupOpen(true)\r\n  }\r\n\r\n  const onNetworkSwitch = useCallback((chainId: ChainId) => {\r\n    setChainId(chainId)\r\n    setIsNetworkSelectorPopupOpen(false)\r\n  }, [])\r\n\r\n  return (\r\n    <Container data-testid={'select-network-step'}>\r\n      {isWalletConnected ? (\r\n        <Paragraph color=\"primary\" noMargin size=\"lg\">\r\n          Select network on which to create your Safe. The app is currently pointing to{' '}\r\n          <NetworkLabel onClick={openNetworkSelectorPopup} />\r\n        </Paragraph>\r\n      ) : (\r\n        <Paragraph color=\"primary\" noMargin size=\"lg\">\r\n          In order to select the network to create your Safe, you need to connect a wallet\r\n        </Paragraph>\r\n      )}\r\n\r\n      <SwitchNetworkContainer>\r\n        {isWalletConnected ? (\r\n          <ButtonLink\r\n            type=\"button\"\r\n            onClick={openNetworkSelectorPopup}\r\n            color=\"primary\"\r\n            data-testid={'switch-network-link'}\r\n          >\r\n            Switch Network\r\n          </ButtonLink>\r\n        ) : (\r\n          <ConnectButton data-testid=\"heading-connect-btn\" />\r\n        )}\r\n      </SwitchNetworkContainer>\r\n\r\n      {isWalletConnected && isWrongNetwork && (\r\n        <Paragraph color=\"primary\" size=\"lg\">\r\n          Your wallet connection must match the selected network. <WalletSwitch />\r\n        </Paragraph>\r\n      )}\r\n\r\n      <Dialog\r\n        onClose={() => setIsNetworkSelectorPopupOpen(false)}\r\n        aria-labelledby=\"select-network\"\r\n        data-testid={'select-network-popup'}\r\n        open={isNetworkSelectorPopupOpen}\r\n      >\r\n        <StyledDialogTitle disableTypography>\r\n          <Typography variant={'h5'}>Select Network</Typography>\r\n          <IconButton aria-label=\"close\" onClick={() => setIsNetworkSelectorPopupOpen(false)}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </StyledDialogTitle>\r\n        <StyledDialogContent dividers>\r\n          <List component=\"div\">\r\n            {getChains().map((network) => (\r\n              <NetworkLabelItem key={network.chainId} role=\"button\" onClick={() => onNetworkSwitch(network.chainId)}>\r\n                <NetworkLabel networkInfo={network} flexGrow />\r\n              </NetworkLabelItem>\r\n            ))}\r\n          </List>\r\n        </StyledDialogContent>\r\n      </Dialog>\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst Container = styled(Block)`\r\n  padding: ${lg};\r\n`\r\nconst SwitchNetworkContainer = styled.div`\r\n  margin: ${lg};\r\n  display: flex;\r\n  justify-content: center;\r\n`\r\n\r\nconst StyledDialogTitle = styled(DialogTitle)`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 16px 24px;\r\n`\r\n\r\nconst StyledDialogContent = styled(DialogContent)`\r\n  min-width: 500px;\r\n`\r\n\r\nconst NetworkLabelItem = styled.div`\r\n  display: flex;\r\n  margin: ${lg} auto;\r\n  cursor: pointer;\r\n  max-width: 50%;\r\n\r\n  & > span {\r\n    font-size: 13px;\r\n  }\r\n`\r\n\r\nexport default SelectWalletAndNetworkStep\r\n","import { ReactElement, useState, useEffect } from 'react'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft'\r\nimport styled from 'styled-components'\r\nimport { useSelector } from 'react-redux'\r\nimport queryString from 'query-string'\r\nimport { useLocation } from 'react-router'\r\nimport { Loader } from '@gnosis.pm/safe-react-components'\r\n\r\nimport Page from 'src/components/layout/Page'\r\nimport Block from 'src/components/layout/Block'\r\nimport Row from 'src/components/layout/Row'\r\nimport Heading from 'src/components/layout/Heading'\r\nimport { history } from 'src/routes/routes'\r\nimport { sm, secondary } from 'src/theme/variables'\r\nimport StepperForm, { StepFormElement } from 'src/components/StepperForm/StepperForm'\r\nimport NameNewSafeStep, { nameNewSafeStepLabel } from './steps/NameNewSafeStep'\r\nimport {\r\n  CreateSafeFormValues,\r\n  FIELD_CREATE_CUSTOM_SAFE_NAME,\r\n  FIELD_CREATE_SUGGESTED_SAFE_NAME,\r\n  FIELD_MAX_OWNER_NUMBER,\r\n  FIELD_NEW_SAFE_PROXY_SALT,\r\n  FIELD_NEW_SAFE_THRESHOLD,\r\n  FIELD_SAFE_OWNERS_LIST,\r\n  SAFE_PENDING_CREATION_STORAGE_KEY,\r\n} from './fields/createSafeFields'\r\nimport { useMnemonicSafeName } from 'src/logic/hooks/useMnemonicName'\r\nimport { providerNameSelector, shouldSwitchWalletChain, userAccountSelector } from 'src/logic/wallets/store/selectors'\r\nimport OwnersAndConfirmationsNewSafeStep, {\r\n  ownersAndConfirmationsNewSafeStepLabel,\r\n  ownersAndConfirmationsNewSafeStepValidations,\r\n} from './steps/OwnersAndConfirmationsNewSafeStep'\r\nimport { currentNetworkAddressBookAsMap } from 'src/logic/addressBook/store/selectors'\r\nimport ReviewNewSafeStep, { reviewNewSafeStepLabel } from './steps/ReviewNewSafeStep'\r\nimport { loadFromStorage, saveToStorage } from 'src/utils/storage'\r\nimport SafeCreationProcess from './components/SafeCreationProcess'\r\nimport SelectWalletAndNetworkStep, { selectWalletAndNetworkStepLabel } from './steps/SelectWalletAndNetworkStep'\r\nimport { instantiateSafeContracts } from 'src/logic/contracts/safeContracts'\r\n\r\nfunction CreateSafePage(): ReactElement {\r\n  const [safePendingToBeCreated, setSafePendingToBeCreated] = useState<CreateSafeFormValues>()\r\n  const [isLoading, setIsLoading] = useState<boolean>(true)\r\n  const providerName = useSelector(providerNameSelector)\r\n  const isWrongNetwork = useSelector(shouldSwitchWalletChain)\r\n  const provider = !!providerName && !isWrongNetwork\r\n\r\n  useEffect(() => {\r\n    const checkIfSafeIsPendingToBeCreated = async (): Promise<void> => {\r\n      setIsLoading(true)\r\n\r\n      // Removing the await completely is breaking the tests for a mysterious reason\r\n      // @TODO: remove the promise\r\n      const safePendingToBeCreated = await Promise.resolve(\r\n        loadFromStorage<CreateSafeFormValues>(SAFE_PENDING_CREATION_STORAGE_KEY),\r\n      )\r\n\r\n      if (provider) {\r\n        await instantiateSafeContracts()\r\n        setSafePendingToBeCreated(safePendingToBeCreated)\r\n      }\r\n      setIsLoading(false)\r\n    }\r\n    checkIfSafeIsPendingToBeCreated()\r\n  }, [provider])\r\n\r\n  const userWalletAddress = useSelector(userAccountSelector)\r\n  const addressBook = useSelector(currentNetworkAddressBookAsMap)\r\n  const location = useLocation()\r\n  const safeRandomName = useMnemonicSafeName()\r\n\r\n  const showSafeCreationProcess = (newSafeFormValues: CreateSafeFormValues): void => {\r\n    saveToStorage(SAFE_PENDING_CREATION_STORAGE_KEY, { ...newSafeFormValues })\r\n    setSafePendingToBeCreated(newSafeFormValues)\r\n  }\r\n\r\n  const [initialFormValues, setInitialFormValues] = useState<CreateSafeFormValues>()\r\n\r\n  useEffect(() => {\r\n    if (provider && userWalletAddress) {\r\n      const initialValuesFromUrl = getInitialValues(userWalletAddress, addressBook, location, safeRandomName)\r\n      setInitialFormValues(initialValuesFromUrl)\r\n    }\r\n  }, [provider, userWalletAddress, addressBook, location, safeRandomName])\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <LoaderContainer data-testid={'create-safe-loader'}>\r\n        <Loader size=\"md\" />\r\n      </LoaderContainer>\r\n    )\r\n  }\r\n\r\n  return !!safePendingToBeCreated ? (\r\n    <SafeCreationProcess />\r\n  ) : (\r\n    <Page>\r\n      <Block>\r\n        <Row align=\"center\">\r\n          <BackIcon disableRipple onClick={history.goBack}>\r\n            <ChevronLeft />\r\n          </BackIcon>\r\n          <Heading tag=\"h2\">Create new Safe</Heading>\r\n        </Row>\r\n        <StepperForm initialValues={initialFormValues} onSubmit={showSafeCreationProcess} testId={'create-safe-form'}>\r\n          <StepFormElement\r\n            label={selectWalletAndNetworkStepLabel}\r\n            nextButtonLabel=\"Continue\"\r\n            disableNextButton={!provider}\r\n          >\r\n            <SelectWalletAndNetworkStep />\r\n          </StepFormElement>\r\n          <StepFormElement label={nameNewSafeStepLabel} nextButtonLabel=\"Continue\">\r\n            <NameNewSafeStep />\r\n          </StepFormElement>\r\n          <StepFormElement\r\n            label={ownersAndConfirmationsNewSafeStepLabel}\r\n            nextButtonLabel=\"Continue\"\r\n            validate={ownersAndConfirmationsNewSafeStepValidations}\r\n          >\r\n            <OwnersAndConfirmationsNewSafeStep />\r\n          </StepFormElement>\r\n          <StepFormElement label={reviewNewSafeStepLabel} nextButtonLabel=\"Create\">\r\n            <ReviewNewSafeStep />\r\n          </StepFormElement>\r\n        </StepperForm>\r\n      </Block>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default CreateSafePage\r\n\r\nconst DEFAULT_THRESHOLD_VALUE = 1\r\n\r\n// initial values can be present in the URL because the Old MultiSig migration\r\nfunction getInitialValues(userAddress, addressBook, location, suggestedSafeName): CreateSafeFormValues {\r\n  const query = queryString.parse(location.search, { arrayFormat: 'comma' })\r\n  const { name, owneraddresses, ownernames, threshold } = query\r\n\r\n  // if owners are not present in the URL we use current user account as default owner\r\n  const isOwnersPresentInTheUrl = !!owneraddresses\r\n  const ownersFromUrl = Array.isArray(owneraddresses) ? owneraddresses : [owneraddresses]\r\n  const owners = isOwnersPresentInTheUrl ? ownersFromUrl : [userAddress]\r\n\r\n  // we set the owner names\r\n  const ownersNamesFromUrl = Array.isArray(ownernames) ? ownernames : [ownernames]\r\n  const userAddressName = [addressBook[userAddress]?.name || 'My Wallet']\r\n  const ownerNames = isOwnersPresentInTheUrl ? ownersNamesFromUrl : userAddressName\r\n\r\n  const thresholdFromURl = Number(threshold)\r\n  const isValidThresholdInTheUrl =\r\n    threshold && !Number.isNaN(threshold) && thresholdFromURl <= owners.length && thresholdFromURl > 0\r\n\r\n  return {\r\n    [FIELD_CREATE_SUGGESTED_SAFE_NAME]: suggestedSafeName,\r\n    [FIELD_CREATE_CUSTOM_SAFE_NAME]: name,\r\n    [FIELD_NEW_SAFE_THRESHOLD]: isValidThresholdInTheUrl ? threshold : DEFAULT_THRESHOLD_VALUE,\r\n    [FIELD_SAFE_OWNERS_LIST]: owners.map((owner, index) => ({\r\n      nameFieldName: `owner-name-${index}`,\r\n      addressFieldName: `owner-address-${index}`,\r\n    })),\r\n    // we set owners address values as owner-address-${index} format in the form state\r\n    ...owners.reduce(\r\n      (ownerAddressFields, ownerAddress, index) => ({\r\n        ...ownerAddressFields,\r\n        [`owner-address-${index}`]: ownerAddress,\r\n      }),\r\n      {},\r\n    ),\r\n    // we set owners name values as owner-name-${index} format in the form state\r\n    ...ownerNames.reduce(\r\n      (ownerNameFields, ownerName, index) => ({\r\n        ...ownerNameFields,\r\n        [`owner-name-${index}`]: ownerName,\r\n      }),\r\n      {},\r\n    ),\r\n    [FIELD_MAX_OWNER_NUMBER]: owners.length,\r\n    [FIELD_NEW_SAFE_PROXY_SALT]: Date.now(),\r\n  }\r\n}\r\n\r\nconst LoaderContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100%;\r\n`\r\n\r\nconst BackIcon = styled(IconButton)`\r\n  color: ${secondary};\r\n  padding: ${sm};\r\n  margin-right: 5px;\r\n`\r\n"],"sourceRoot":""}