{"version":3,"sources":["routes/safe/components/Settings/RemoveSafeModal/style.ts","routes/safe/components/Settings/RemoveSafeModal/index.tsx"],"names":["useStyles","makeStyles","createStyles","heading","boxSizing","justifyContent","minHeight","padding","sm","lg","container","manage","fontSize","close","height","width","owner","md","alignItems","description","RemoveSafeModal","isOpen","onClose","classes","useSelector","currentSafeWithNames","safeAddress","address","safeName","name","dispatch","useDispatch","onRemoveSafeHandler","a","removeSafe","history","push","WELCOME_ROUTE","Modal","handleClose","open","paperClassName","title","Row","align","className","grow","Paragraph","noMargin","weight","IconButton","disableRipple","onClick","Hairline","Block","Col","xs","PrefixedEthHashInfo","hash","showAvatar","showCopyBtn","explorerUrl","getExplorerInfo","size","Footer","Buttons","cancelButtonProps","confirmButtonProps","color","text"],"mappings":"kNAIaA,EAAYC,YACvBC,YAAa,CACXC,QAAS,CACPC,UAAW,aACXC,eAAgB,gBAChBC,UAAW,OACXC,QAAQ,GAAD,OAAKC,KAAL,YAAWC,OAEpBC,UAAW,CACTJ,UAAW,QACXC,QAAQ,GAAD,OAAKC,OAEdG,OAAQ,CACNC,SAAUH,MAEZI,MAAO,CACLC,OAAQ,OACRC,MAAO,QAETC,MAAO,CACLT,QAASU,KACTC,WAAY,UAEdC,YAAa,CACXZ,QAASU,S,sGCuDAG,UA7DS,SAAC,GAAmE,IAAjEC,EAAgE,EAAhEA,OAAQC,EAAwD,EAAxDA,QAC3BC,EAAUvB,IAChB,EAAiDwB,YAAYC,KAA5CC,EAAjB,EAAQC,QAA4BC,EAApC,EAA8BC,KACxBC,EAAWC,cAEXC,EAAmB,uCAAG,sBAAAC,EAAA,sDAC1BH,EAASI,YAAWR,IACpBJ,IACAa,IAAQC,KAAKC,KAHa,2CAAH,qDAMzB,OACE,eAACC,EAAA,EAAD,CACEnB,YAAY,2BACZoB,YAAajB,EACbkB,KAAMnB,EACNoB,eAAe,QACfC,MAAM,cALR,UAOE,eAACC,EAAA,EAAD,CAAKC,MAAM,SAASC,UAAWtB,EAAQpB,QAAS2C,MAAI,EAApD,UACE,cAACC,EAAA,EAAD,CAAWF,UAAWtB,EAAQZ,OAAQqC,UAAQ,EAACC,OAAO,SAAtD,yBAGA,cAACC,EAAA,EAAD,CAAYC,eAAa,EAACC,QAAS9B,EAAnC,SACE,cAAC,IAAD,CAAOuB,UAAWtB,EAAQV,aAG9B,cAACwC,EAAA,EAAD,IACA,eAACC,EAAA,EAAD,CAAOT,UAAWtB,EAAQb,UAA1B,UACE,cAACiC,EAAA,EAAD,CAAKE,UAAWtB,EAAQP,MAAxB,SACE,cAACuC,EAAA,EAAD,CAAKX,MAAM,SAASY,GAAI,GAAxB,SACE,cAACC,EAAA,EAAD,CACEC,KAAMhC,EACNG,KAAMD,EACN+B,YAAU,EACVC,aAAW,EACXC,YAAaC,YAAgBpC,SAInC,cAACiB,EAAA,EAAD,CAAKE,UAAWtB,EAAQJ,YAAxB,SACE,eAAC4B,EAAA,EAAD,CAAWC,UAAQ,EAACe,KAAK,KAAzB,kEACuD,4DADvD,iEAMJ,cAAC,IAAaC,OAAd,UACE,cAAC,IAAaA,OAAOC,QAArB,CACEC,kBAAmB,CAAEd,QAAS9B,GAC9B6C,mBAAoB,CAClBf,QAASpB,EACToC,MAAO,QACPC,KAAM","file":"static/js/98.59930890.chunk.js","sourcesContent":["import { createStyles, makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { lg, md, sm } from 'src/theme/variables'\r\n\r\nexport const useStyles = makeStyles(\r\n  createStyles({\r\n    heading: {\r\n      boxSizing: 'border-box',\r\n      justifyContent: 'space-between',\r\n      minHeight: '74px',\r\n      padding: `${sm} ${lg}`,\r\n    },\r\n    container: {\r\n      minHeight: '369px',\r\n      padding: `${sm}`,\r\n    },\r\n    manage: {\r\n      fontSize: lg,\r\n    },\r\n    close: {\r\n      height: '35px',\r\n      width: '35px',\r\n    },\r\n    owner: {\r\n      padding: md,\r\n      alignItems: 'center',\r\n    },\r\n    description: {\r\n      padding: md,\r\n    },\r\n  }),\r\n)\r\n","import IconButton from '@material-ui/core/IconButton'\r\nimport Close from '@material-ui/icons/Close'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { useStyles } from './style'\r\nimport Modal, { Modal as GenericModal } from 'src/components/Modal'\r\nimport Block from 'src/components/layout/Block'\r\nimport Hairline from 'src/components/layout/Hairline'\r\nimport Paragraph from 'src/components/layout/Paragraph'\r\nimport Row from 'src/components/layout/Row'\r\nimport PrefixedEthHashInfo from 'src/components/PrefixedEthHashInfo'\r\nimport { currentSafeWithNames } from 'src/logic/safe/store/selectors'\r\nimport removeSafe from 'src/logic/safe/store/actions/removeSafe'\r\nimport { getExplorerInfo } from 'src/config'\r\nimport Col from 'src/components/layout/Col'\r\nimport { WELCOME_ROUTE, history } from 'src/routes/routes'\r\n\r\ntype RemoveSafeModalProps = {\r\n  isOpen: boolean\r\n  onClose: () => void\r\n}\r\n\r\nconst RemoveSafeModal = ({ isOpen, onClose }: RemoveSafeModalProps): React.ReactElement => {\r\n  const classes = useStyles()\r\n  const { address: safeAddress, name: safeName } = useSelector(currentSafeWithNames)\r\n  const dispatch = useDispatch()\r\n\r\n  const onRemoveSafeHandler = async () => {\r\n    dispatch(removeSafe(safeAddress))\r\n    onClose()\r\n    history.push(WELCOME_ROUTE)\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      description=\"Remove the selected Safe\"\r\n      handleClose={onClose}\r\n      open={isOpen}\r\n      paperClassName=\"modal\"\r\n      title=\"Remove Safe\"\r\n    >\r\n      <Row align=\"center\" className={classes.heading} grow>\r\n        <Paragraph className={classes.manage} noMargin weight=\"bolder\">\r\n          Remove Safe\r\n        </Paragraph>\r\n        <IconButton disableRipple onClick={onClose}>\r\n          <Close className={classes.close} />\r\n        </IconButton>\r\n      </Row>\r\n      <Hairline />\r\n      <Block className={classes.container}>\r\n        <Row className={classes.owner}>\r\n          <Col align=\"center\" xs={12}>\r\n            <PrefixedEthHashInfo\r\n              hash={safeAddress}\r\n              name={safeName}\r\n              showAvatar\r\n              showCopyBtn\r\n              explorerUrl={getExplorerInfo(safeAddress)}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row className={classes.description}>\r\n          <Paragraph noMargin size=\"lg\">\r\n            Removing a Safe only removes it from your interface. <b>It does not delete the Safe</b>. You can always add\r\n            it back using the Safe&apos;s address.\r\n          </Paragraph>\r\n        </Row>\r\n      </Block>\r\n      <GenericModal.Footer>\r\n        <GenericModal.Footer.Buttons\r\n          cancelButtonProps={{ onClick: onClose }}\r\n          confirmButtonProps={{\r\n            onClick: onRemoveSafeHandler,\r\n            color: 'error',\r\n            text: 'Remove',\r\n          }}\r\n        />\r\n      </GenericModal.Footer>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default RemoveSafeModal\r\n"],"sourceRoot":""}