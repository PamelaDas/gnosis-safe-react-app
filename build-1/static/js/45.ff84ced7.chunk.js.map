{"version":3,"sources":["assets/icons/qrcode.svg","components/ScanQRModal/style.ts","components/ScanQRModal/index.tsx","components/ScanQRModal/ScanQRWrapper/index.tsx","components/forms/SelectField/index.tsx","components/layout/Heading/index.tsx","components/Table/TableHead.tsx","components/layout/Heading/index.module.scss","../node_modules/react-final-form-listeners/dist/react-final-form-listeners.es.js","components/Table/sorting.ts","components/Table/index.tsx","components/forms/AddressInput/index.tsx","../node_modules/@material-ui/core/esm/Toolbar/Toolbar.js","../node_modules/@material-ui/core/esm/TablePagination/TablePaginationActions.js","../node_modules/@material-ui/core/esm/TablePagination/TablePagination.js","routes/safe/components/Settings/ManageOwners/AddOwnerModal/screens/OwnerForm/style.ts","routes/safe/components/Settings/ManageOwners/AddOwnerModal/screens/OwnerForm/index.tsx","routes/safe/components/Settings/ManageOwners/AddOwnerModal/screens/Review/style.ts","routes/safe/components/Settings/ManageOwners/AddOwnerModal/screens/Review/index.tsx","routes/safe/components/Settings/ManageOwners/AddOwnerModal/screens/ThresholdForm/style.ts","routes/safe/components/Settings/ManageOwners/AddOwnerModal/screens/ThresholdForm/index.tsx","routes/safe/components/Settings/ManageOwners/AddOwnerModal/index.tsx","routes/safe/components/Settings/ManageOwners/EditOwnerModal/style.ts","routes/safe/components/Settings/ManageOwners/EditOwnerModal/index.tsx","routes/safe/components/Settings/ManageOwners/RemoveOwnerModal/screens/CheckOwner/style.ts","routes/safe/components/Settings/ManageOwners/RemoveOwnerModal/screens/CheckOwner/index.tsx","routes/safe/components/Settings/ManageOwners/RemoveOwnerModal/screens/Review/style.ts","routes/safe/components/Settings/ManageOwners/RemoveOwnerModal/screens/Review/index.tsx","routes/safe/components/Settings/ManageOwners/RemoveOwnerModal/screens/ThresholdForm/style.ts","routes/safe/components/Settings/ManageOwners/RemoveOwnerModal/screens/ThresholdForm/index.tsx","routes/safe/components/Settings/ManageOwners/RemoveOwnerModal/index.tsx","routes/safe/components/Settings/ManageOwners/ReplaceOwnerModal/screens/OwnerForm/style.ts","routes/safe/components/Settings/ManageOwners/ReplaceOwnerModal/screens/OwnerForm/index.tsx","routes/safe/components/Settings/ManageOwners/ReplaceOwnerModal/screens/Review/style.ts","routes/safe/components/Settings/ManageOwners/ReplaceOwnerModal/screens/Review/index.tsx","routes/safe/components/Settings/ManageOwners/ReplaceOwnerModal/index.tsx","routes/safe/components/Settings/ManageOwners/dataFetcher.ts","routes/safe/components/Settings/ManageOwners/style.ts","routes/safe/components/Settings/ManageOwners/index.tsx"],"names":["styles","createStyles","heading","padding","lg","justifyContent","maxHeight","boxSizing","loaderContainer","width","height","close","color","secondaryText","detailsContainer","backgroundColor","background","buttonRow","button","marginLeft","sm","useStyles","makeStyles","ScanQRModal","isOpen","onClose","onScan","classes","useState","fileUploadModalOpen","setFileUploadModalOpen","error","setError","cameraBlocked","setCameraBlocked","scannerRef","React","openImageDialog","current","useEffect","onFileScannedResolve","successData","console","name","Modal","description","handleClose","open","title","Row","align","className","grow","Paragraph","noMargin","size","IconButton","disableRipple","onClick","Hairline","Col","layout","middle","Block","margin","legacyMode","onError","err","data","ref","style","facingMode","Button","minWidth","variant","qrCodeBtn","cursor","ScanQRWrapper","handleScan","testId","qrModalOpen","setQrModalOpen","closeQrModal","Img","alt","role","src","QRIcon","value","SelectInput","disableError","formControlProps","input","onChange","restInput","label","meta","renderValue","rest","showError","submitError","dirtySinceLastSubmit","touched","inputProps","htmlFor","cx","classNames","bind","Heading","props","children","tag","truncate","capitalize","undefined","cellWidth","maxWidth","GnoTableHead","changeSort","property","orderAttr","onSort","this","columns","order","orderBy","map","column","disablePadding","sortDirection","id","static","active","direction","module","exports","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_inheritsLoose","subClass","superClass","create","constructor","__proto__","Component","OnChangeState","_React$Component","_this","state","previous","_proto","componentDidUpdate","_this$props","setState","render","OnChange","_ref","createElement","Field","subscription","allowNull","desc","a","b","orderProp","format","root","borderTopRightRadius","borderTopLeftRadius","boxShadow","selectRoot","lineHeight","xxl","white","paginationRoot","marginBottom","borderBottomRightRadius","borderBottomLeftRadius","loader","backProps","nextProps","GnoTable","newOrderBy","defaultOrder","newOrder","fixed","getEmptyStyle","display","alignItems","handleChangePage","e","page","handleChangeRowsPerPage","rowsPerPage","Number","defaultOrderBy","find","defaultFixed","defaultRowsPerPage","disableLoadingOnEmptyTable","disablePagination","noBorder","orderByParam","orderParam","displayRows","fixedParam","paginationClasses","columnSort","sortedData","dataArray","cmp","fixedElems","filter","elem","List","stabilizedThis","el","index","sortedElems","sort","concat","stableSort","getSorting","formatTypeSort","slice","isEmpty","Table","TableHead","TableBody","TablePagination","backIconButtonProps","component","count","nextIconButtonProps","onPageChange","onRowsPerPageChange","rowsPerPageOptions","defaultProps","withStyles","AddressInput","text","placeholder","fieldMutator","inputAdornment","validators","defaultValue","disabled","currentInput","setCurrentInput","resolutions","setResolutions","resolvedAddress","isResolving","sanitizedValidators","useCallback","val","parsed","parsePrefixedAddress","composeValidators","address","allValidators","useMemo","required","mustBeEthereumAddress","onValueChange","rawVal","trimSpaces","isValidEnsName","isValidCryptoDomainName","prev","getAddressFromDomain","then","resolverAddr","formattedAddress","checksumAddress","catch","logError","Errors","_101","message","checkedAddress","adornment","endAdornment","position","TextField","spellCheck","validate","Toolbar","_props$component","_props$disableGutters","disableGutters","_props$variant","other","_objectWithoutProperties","clsx","gutters","theme","_defineProperty","paddingLeft","spacing","paddingRight","breakpoints","up","regular","mixins","toolbar","dense","minHeight","KeyboardArrowRight","_ref2","KeyboardArrowLeft","_ref3","_ref4","TablePaginationActions","_props$onChangePage","onChangePage","_props$onPageChange","useTheme","event","Math","ceil","defaultLabelDisplayedRows","from","to","defaultRowsPerPageOptions","colSpan","_props$ActionsCompone","ActionsComponent","_props$backIconButton","backIconButtonText","colSpanProp","TableCell","_props$labelDisplayed","labelDisplayedRows","_props$labelRowsPerPa","labelRowsPerPage","_props$nextIconButton","nextIconButtonText","onChangeRowsPerPageProp","onChangeRowsPerPage","onRowsPerPageChangeProp","_props$rowsPerPageOpt","_props$SelectProps","SelectProps","selectId","useId","labelId","MenuItemComponent","native","MenuItem","spacer","Typography","caption","Select","select","icon","selectIcon","InputBase","rowsPerPageOption","menuItem","min","actions","palette","primary","fontSize","typography","pxToRem","overflow","flex","flexShrink","marginRight","textAlign","textAlignLast","formContainer","md","gap","ADD_OWNER_NAME_INPUT_TEST_ID","ADD_OWNER_ADDRESS_INPUT_TEST_ID","ADD_OWNER_NEXT_BTN_TEST_ID","formMutators","setOwnerAddress","args","utils","changeValue","setOwnerName","OwnerForm","onSubmit","initialValues","addressBookMap","useSelector","currentNetworkAddressBookAsMap","currentSafe","safeAddress","owners","ownerDoesntExist","uniqueAddress","ownerAddressIsNotSafeAddress","addressIsNotCurrentSafe","ModalHeader","subTitle","GnoForm","ownerName","ownerAddress","values","mutators","scannedAddress","startsWith","replace","xs","type","validAddressBookName","isValidAddress","center","Footer","Buttons","cancelButtonProps","confirmButtonProps","info","flexDirection","details","borderRight","border","ownersTitle","owner","textOverflow","selectedOwner","ReviewAddOwner","onClickBack","setData","currentSafeWithNames","safeName","safeVersion","currentVersion","connectedWalletAddress","userAccountSelector","manualSafeTxGas","setManualSafeTxGas","manualGasPrice","setManualGasPrice","manualGasLimit","setManualGasLimit","useEstimateTransactionGas","txData","txRecipient","safeTxGas","gasLimit","gasEstimation","gasCostFormatted","gasPriceFormatted","txEstimationExecutionStatus","isExecution","isOffChainSignature","isCreation","useEstimationStatus","buttonStatus","isCurrent","calculateAddOwnerData","getSafeSDK","sdk","getAddOwnerTx","threshold","safeTx","_811","EditableTxParameters","ethGasLimit","ethGasPrice","closeEditModalCallback","txParameters","oldGasPrice","newGasPrice","oldSafeTxGas","newSafeTxGas","toggleEditMode","weight","PrefixedEthHashInfo","hash","showCopyBtn","showAvatar","explorerUrl","getExplorerInfo","TxParametersDetail","onEdit","compact","isTransactionCreation","isTransactionExecution","ReviewInfoText","safeNonce","status","EstimationStatus","LOADING","headingText","ownersText","inputRow","errorText","bottom","ThresholdForm","numOptions","toString","SelectField","Array","x","mustBeInteger","minValue","maxValue","sendAddOwner","dispatch","createTransaction","valueInWei","txNonce","ethParameters","notifiedTransaction","TX_NOTIFICATION_TYPES","SETTINGS_CHANGE_TX","addressBookAddOrUpdate","makeAddressBookEntry","chainId","_getChainId","AddOwnerModal","activeScreen","setActiveScreen","setValues","useDispatch","extractSafeAddress","currentSafeCurrentVersion","currentChainId","onAddOwner","_808","paperClassName","newValues","stateValues","manage","container","RENAME_OWNER_INPUT_TEST_ID","SAVE_OWNER_CHANGES_BTN_TEST_ID","EditOwnerModal","enqueueSnackbar","NOTIFICATIONS","OWNER_NAME_CHANGE_EXECUTED_MSG","pristine","initialValue","justify","CheckOwner","ReviewRemoveOwnerModal","calculateRemoveOwnerData","getRemoveOwnerTx","ErrorCodes","_812","safeOwner","sameAddress","withoutBorder","ownersCount","defaultThreshold","sendRemoveOwner","ownerAddressToRemove","RemoveOwnerModal","onRemoveOwner","_809","cpValues","REPLACE_OWNER_NAME_INPUT_TEST_ID","REPLACE_OWNER_ADDRESS_INPUT_TEST_ID","REPLACE_OWNER_NEXT_BTN_TEST_ID","selectedOwnerRemoved","selectedOwnerAdded","ReviewReplaceOwnerModal","newOwner","calculateReplaceOwnerData","getSwapOwnerTx","oldOwnerAddress","newOwnerAddress","_813","sendReplaceOwner","ReplaceOwnerModal","setNewOwner","onReplaceOwner","_810","checksumAddr","OWNERS_TABLE_NAME_ID","OWNERS_TABLE_ADDRESS_ID","paddingBottom","annotation","hide","visibility","noBorderBottom","borderBottom","editOwnerIcon","replaceOwnerIcon","controlsRow","borderRadius","removeOwnerIcon","RENAME_OWNER_BTN_TEST_ID","REMOVE_OWNER_BTN_TEST_ID","ADD_OWNER_BTN_TEST_ID","REPLACE_OWNER_BTN_TEST_ID","OWNERS_ROW_TEST_ID","ManageOwners","granted","trackEvent","useAnalytics","setSelectedOwner","showAddOwner","showRemoveOwner","showReplaceOwner","showEditOwner","modalsStatus","setModalStatus","onShow","action","row","prevState","onHide","Boolean","SETTINGS_EVENTS","OWNERS","nameColumn","toLowerCase","custom","addressColumn","actionsColumn","generateColumns","autoColumns","c","ownerData","getOwnerData","TableContainer","TableRow","cn","ButtonHelper","dataTestId","tooltip","end"],"mappings":"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","file":"static/js/45.ff84ced7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/qrcode.f0b048aa.svg\";","import { background, lg, secondaryText, sm } from 'src/theme/variables'\r\nimport { createStyles } from '@material-ui/core'\r\n\r\nexport const styles = createStyles({\r\n  heading: {\r\n    padding: lg,\r\n    justifyContent: 'space-between',\r\n    maxHeight: '75px',\r\n    boxSizing: 'border-box',\r\n  },\r\n  loaderContainer: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  close: {\r\n    height: '25px',\r\n    width: '25px',\r\n    color: secondaryText,\r\n  },\r\n  detailsContainer: {\r\n    backgroundColor: background,\r\n    maxHeight: '450px',\r\n  },\r\n  buttonRow: {\r\n    height: '84px',\r\n    justifyContent: 'center',\r\n  },\r\n  button: {\r\n    '&:last-child': {\r\n      marginLeft: sm,\r\n    },\r\n  },\r\n})\r\n","import IconButton from '@material-ui/core/IconButton'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Close from '@material-ui/icons/Close'\r\nimport * as React from 'react'\r\nimport QrReader from 'react-qr-reader'\r\n\r\nimport { styles } from './style'\r\n\r\nimport Modal from 'src/components/Modal'\r\nimport Block from 'src/components/layout/Block'\r\nimport Button from 'src/components/layout/Button'\r\nimport Col from 'src/components/layout/Col'\r\nimport Hairline from 'src/components/layout/Hairline'\r\nimport Paragraph from 'src/components/layout/Paragraph'\r\nimport Row from 'src/components/layout/Row'\r\nimport { useEffect, useState } from 'react'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\ntype Props = {\r\n  isOpen: boolean\r\n  onClose: () => void\r\n  onScan: (value: string) => void\r\n}\r\n\r\nexport const ScanQRModal = ({ isOpen, onClose, onScan }: Props): React.ReactElement => {\r\n  const classes = useStyles()\r\n  const [fileUploadModalOpen, setFileUploadModalOpen] = useState<boolean>(false)\r\n  const [error, setError] = useState<string | null>(null)\r\n  const [cameraBlocked, setCameraBlocked] = useState<boolean>(false)\r\n  const scannerRef: any = React.createRef()\r\n  const openImageDialog = React.useCallback(() => {\r\n    scannerRef.current.openImageDialog()\r\n  }, [scannerRef])\r\n\r\n  useEffect(() => {\r\n    if (!fileUploadModalOpen && cameraBlocked && !error) {\r\n      setFileUploadModalOpen(true)\r\n      openImageDialog()\r\n    }\r\n  }, [cameraBlocked, openImageDialog, fileUploadModalOpen, setFileUploadModalOpen, error])\r\n\r\n  const onFileScannedResolve = (error: Error | null, successData: string | null) => {\r\n    if (error) {\r\n      console.error('QR code error', error)\r\n\r\n      if (error.name === 'NotAllowedError' || error.name === 'PermissionDismissedError') {\r\n        setCameraBlocked(true)\r\n        setFileUploadModalOpen(false)\r\n      } else {\r\n        setError('The QR could not be read')\r\n      }\r\n      return\r\n    }\r\n\r\n    if (successData) {\r\n      onScan(successData)\r\n    } else if (cameraBlocked) {\r\n      setError('The QR could not be read')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal description=\"Receive Tokens Form\" handleClose={onClose} open={isOpen} title=\"Receive Tokens\">\r\n      <Row align=\"center\" className={classes.heading} grow>\r\n        <Paragraph noMargin size=\"xl\">\r\n          Scan QR\r\n        </Paragraph>\r\n        <IconButton disableRipple onClick={onClose}>\r\n          <Close className={classes.close} />\r\n        </IconButton>\r\n      </Row>\r\n      <Hairline />\r\n      <Col className={classes.detailsContainer} layout=\"column\" middle=\"xs\">\r\n        {error && (\r\n          <Block padding=\"md\" margin=\"md\">\r\n            {error}\r\n          </Block>\r\n        )}\r\n        <QrReader\r\n          legacyMode={cameraBlocked}\r\n          onError={(err: Error) => onFileScannedResolve(err, null)}\r\n          onScan={(data: string) => onFileScannedResolve(null, data)}\r\n          ref={scannerRef}\r\n          style={{ width: '400px', height: '400px' }}\r\n          facingMode=\"user\"\r\n        />\r\n      </Col>\r\n      <Hairline />\r\n      <Row align=\"center\" className={classes.buttonRow}>\r\n        <Button className={classes.button} color=\"secondary\" minWidth={154} onClick={onClose}>\r\n          Close\r\n        </Button>\r\n        <Button\r\n          className={classes.button}\r\n          color=\"primary\"\r\n          minWidth={154}\r\n          onClick={() => {\r\n            setCameraBlocked(true)\r\n            setError(null)\r\n            setFileUploadModalOpen(false)\r\n          }}\r\n          variant=\"contained\"\r\n        >\r\n          Upload an image\r\n        </Button>\r\n      </Row>\r\n    </Modal>\r\n  )\r\n}\r\n","import { makeStyles } from '@material-ui/core/styles'\r\nimport { ReactElement, useState } from 'react'\r\n\r\nimport QRIcon from 'src/assets/icons/qrcode.svg'\r\nimport { ScanQRModal } from 'src/components/ScanQRModal'\r\nimport Img from 'src/components/layout/Img'\r\n\r\nconst useStyles = makeStyles({\r\n  qrCodeBtn: {\r\n    cursor: 'pointer',\r\n  },\r\n})\r\n\r\ntype Props = {\r\n  handleScan: (dataResult: string, closeQrModal: () => void) => void\r\n  testId?: string\r\n}\r\n\r\nexport const ScanQRWrapper = ({ handleScan, testId }: Props): ReactElement => {\r\n  const classes = useStyles()\r\n  const [qrModalOpen, setQrModalOpen] = useState(false)\r\n\r\n  const openQrModal = () => {\r\n    setQrModalOpen(true)\r\n  }\r\n\r\n  const closeQrModal = () => {\r\n    setQrModalOpen(false)\r\n  }\r\n\r\n  const onScanFinished = (value: string) => {\r\n    handleScan(value, closeQrModal)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Img\r\n        alt=\"Scan QR\"\r\n        className={classes.qrCodeBtn}\r\n        height={20}\r\n        onClick={() => openQrModal()}\r\n        role=\"button\"\r\n        src={QRIcon}\r\n        testId={testId || 'qr-icon'}\r\n      />\r\n      {qrModalOpen && <ScanQRModal isOpen={qrModalOpen} onClose={closeQrModal} onScan={onScanFinished} />}\r\n    </>\r\n  )\r\n}\r\n","import FormControl from '@material-ui/core/FormControl'\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport Select from '@material-ui/core/Select'\r\n\r\nconst style = {\r\n  minWidth: '100%',\r\n}\r\n\r\nconst SelectInput = ({\r\n  classes,\r\n  disableError,\r\n  formControlProps,\r\n  input: { name, onChange, value, ...restInput },\r\n  label,\r\n  meta,\r\n  renderValue,\r\n  ...rest\r\n}) => {\r\n  const showError = ((meta.submitError && !meta.dirtySinceLastSubmit) || meta.error) && meta.touched && !disableError\r\n  const inputProps = {\r\n    ...restInput,\r\n    name,\r\n  }\r\n\r\n  return (\r\n    <FormControl {...formControlProps} error={showError} style={style}>\r\n      <InputLabel htmlFor={name}>{label}</InputLabel>\r\n      <Select\r\n        classes={classes}\r\n        inputProps={inputProps}\r\n        onChange={onChange}\r\n        renderValue={renderValue}\r\n        value={value}\r\n        {...rest}\r\n      />\r\n      {showError && <FormHelperText>{meta.error || meta.submitError}</FormHelperText>}\r\n    </FormControl>\r\n  )\r\n}\r\n\r\nexport default SelectInput\r\n","import classNames from 'classnames/bind'\r\nimport * as React from 'react'\r\n\r\nimport styles from './index.module.scss'\r\n\r\nimport { capitalize } from 'src/utils/css'\r\n\r\nconst cx = classNames.bind(styles)\r\n\r\nconst Heading = (props) => {\r\n  const { align, children, className = '', color, margin, tag, testId, truncate, ...rest } = props\r\n\r\n  const classes = cx(className, 'heading', align, tag, margin ? capitalize(margin, 'margin') : undefined, color, {\r\n    truncate,\r\n  })\r\n\r\n  return React.createElement(tag, { ...rest, className: classes, 'data-testid': testId || '' }, children)\r\n}\r\n\r\nexport default Heading\r\n","import TableCell from '@material-ui/core/TableCell'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\r\nimport * as React from 'react'\r\n\r\ninterface CellWidth {\r\n  maxWidth: string\r\n}\r\n\r\nexport const cellWidth = (width?: string | number): CellWidth | undefined => {\r\n  if (!width) {\r\n    return undefined\r\n  }\r\n\r\n  return {\r\n    maxWidth: `${width}px`,\r\n  }\r\n}\r\n\r\nclass GnoTableHead extends React.PureComponent<any> {\r\n  changeSort =\r\n    (property: string, orderAttr: string): (() => void) =>\r\n    () => {\r\n      const { onSort } = this.props\r\n\r\n      onSort(property, orderAttr)\r\n    }\r\n\r\n  render(): React.ReactElement {\r\n    const { columns, order, orderBy } = this.props\r\n\r\n    return (\r\n      <TableHead>\r\n        <TableRow>\r\n          {columns.map((column) => (\r\n            <TableCell\r\n              align={column.align}\r\n              key={column.id}\r\n              padding={column.disablePadding ? 'none' : 'normal'}\r\n              sortDirection={orderBy === column.id ? order : false}\r\n            >\r\n              {column.static ? (\r\n                <div style={column.style}>{column.label}</div>\r\n              ) : (\r\n                <TableSortLabel\r\n                  active={orderBy === column.id}\r\n                  direction={order}\r\n                  onClick={this.changeSort(column.id, column.order)}\r\n                  style={column.style}\r\n                >\r\n                  {column.label}\r\n                </TableSortLabel>\r\n              )}\r\n            </TableCell>\r\n          ))}\r\n        </TableRow>\r\n      </TableHead>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GnoTableHead\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"Heading_heading__ZbcQo\",\"h1\":\"Heading_h1__-wMHl\",\"h2\":\"Heading_h2__3MQ2g\",\"h3\":\"Heading_h3__2Eii5\",\"h4\":\"Heading_h4__36iJN\",\"center\":\"Heading_center__Rnu47\",\"right\":\"Heading_right__nV1Cb\",\"truncate\":\"Heading_truncate__18Axc\",\"marginSm\":\"Heading_marginSm__3RRHh\",\"marginMd\":\"Heading_marginMd__2NmMz\",\"marginLg\":\"Heading_marginLg__2n10_\",\"marginXl\":\"Heading_marginXl__39Nag\",\"soft\":\"Heading_soft__3dfbK\",\"medium\":\"Heading_medium__XLAVh\",\"dark\":\"Heading_dark__36nFk\",\"fancy\":\"Heading_fancy__2yEZW\",\"warning\":\"Heading_warning__3tDQF\",\"primary\":\"Heading_primary__mUy5R\",\"secondary\":\"Heading_secondary__2YzXF\",\"disabled\":\"Heading_disabled__3ODVW\",\"error\":\"Heading_error__39ITf\",\"white\":\"Heading_white__2fXVW\"};","import { createElement, Component } from 'react';\nimport { Field } from 'react-final-form';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar ExternallyChangedState =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(ExternallyChangedState, _React$Component);\n\n  function ExternallyChangedState(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.state = {\n      previous: props.input.value,\n      externallyChanged: false\n    };\n    return _this;\n  }\n\n  var _proto = ExternallyChangedState.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    var _this$props = this.props,\n        value = _this$props.input.value,\n        active = _this$props.meta.active;\n    var previous = this.state.previous;\n\n    if (value !== previous) {\n      this.setState({\n        previous: value,\n        externallyChanged: !active\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    return this.props.children(this.state.externallyChanged);\n  };\n\n  return ExternallyChangedState;\n}(Component);\n\nvar ExternallyChanged = function ExternallyChanged(_ref) {\n  var name = _ref.name,\n      children = _ref.children;\n  return createElement(Field, {\n    name: name,\n    subscription: {\n      active: true,\n      value: true\n    },\n    allowNull: true,\n    render: function render(props) {\n      return createElement(ExternallyChangedState, _extends({}, props, {\n        children: children\n      }));\n    }\n  });\n};\n\nvar OnBlurState =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(OnBlurState, _React$Component);\n\n  function OnBlurState(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.state = {\n      previous: !!props.meta.active\n    };\n    return _this;\n  }\n\n  var _proto = OnBlurState.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        active = _this$props.meta.active;\n    var previous = this.state.previous;\n\n    if (previous && !active) {\n      children();\n    }\n\n    if (previous !== active) {\n      this.setState({\n        previous: active\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    return null;\n  };\n\n  return OnBlurState;\n}(Component);\n\nvar OnBlur = function OnBlur(_ref) {\n  var name = _ref.name,\n      children = _ref.children;\n  return createElement(Field, {\n    name: name,\n    subscription: {\n      active: true\n    },\n    render: function render(props) {\n      return createElement(OnBlurState, _extends({}, props, {\n        children: children\n      }));\n    }\n  });\n};\n\nvar OnChangeState =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(OnChangeState, _React$Component);\n\n  function OnChangeState(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.state = {\n      previous: props.input.value\n    };\n    return _this;\n  }\n\n  var _proto = OnChangeState.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        value = _this$props.input.value;\n    var previous = this.state.previous;\n\n    if (value !== previous) {\n      this.setState({\n        previous: value\n      });\n      children(value, previous);\n    }\n  };\n\n  _proto.render = function render() {\n    return null;\n  };\n\n  return OnChangeState;\n}(Component);\n\nvar OnChange = function OnChange(_ref) {\n  var name = _ref.name,\n      children = _ref.children;\n  return createElement(Field, {\n    name: name,\n    subscription: {\n      value: true\n    },\n    allowNull: true,\n    render: function render(props) {\n      return createElement(OnChangeState, _extends({}, props, {\n        children: children\n      }));\n    }\n  });\n};\n\nvar OnFocusState =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(OnFocusState, _React$Component);\n\n  function OnFocusState(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.state = {\n      previous: !!props.meta.active\n    };\n    return _this;\n  }\n\n  var _proto = OnFocusState.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        active = _this$props.meta.active;\n    var previous = this.state.previous;\n\n    if (active && !previous) {\n      this.setState({\n        previous: active\n      });\n      children();\n    } else if (!active && previous) {\n      this.setState({\n        previous: active\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    return null;\n  };\n\n  return OnFocusState;\n}(Component);\n\nvar OnFocus = function OnFocus(_ref) {\n  var name = _ref.name,\n      children = _ref.children;\n  return createElement(Field, {\n    name: name,\n    subscription: {\n      active: true\n    },\n    render: function render(props) {\n      return createElement(OnFocusState, _extends({}, props, {\n        children: children\n      }));\n    }\n  });\n};\n\nexport { ExternallyChanged, OnBlur, OnChange, OnFocus };\n","import { List } from 'immutable'\r\n\r\nexport const FIXED = 'fixed'\r\n\r\nexport const buildOrderFieldFrom = (attr: string): string => `${attr}Order`\r\n\r\nconst desc = (\r\n  a: string,\r\n  b: string,\r\n  orderBy: string,\r\n  orderProp: boolean,\r\n  format: (value: string | number) => string | number,\r\n): number => {\r\n  const order = orderProp ? buildOrderFieldFrom(orderBy) : orderBy\r\n\r\n  if (format(b[order]) < format(a[order])) {\r\n    return -1\r\n  }\r\n  if (format(b[order]) > format(a[order])) {\r\n    return 1\r\n  }\r\n\r\n  return 0\r\n}\r\n\r\n// eslint-disable-next-line\r\nexport const stableSort = (dataArray, cmp, fixed) => {\r\n  const fixedElems = fixed ? dataArray.filter((elem) => elem.fixed) : List([])\r\n  const data = fixed ? dataArray.filter((elem) => !elem[FIXED]) : dataArray\r\n  let stabilizedThis = data.map((el, index) => [el, index])\r\n\r\n  stabilizedThis = stabilizedThis.sort((a, b) => {\r\n    const order = cmp(a[0], b[0])\r\n\r\n    if (order !== 0) {\r\n      return order\r\n    }\r\n\r\n    return a[1] - b[1]\r\n  })\r\n\r\n  const sortedElems = stabilizedThis.map((el) => el[0])\r\n\r\n  return fixedElems.concat(sortedElems)\r\n}\r\n\r\nexport const getSorting = (\r\n  order: 'desc' | 'asc',\r\n  orderBy: string,\r\n  orderProp: boolean,\r\n  format: (value: string | number) => string | number = (value) => value,\r\n): ((a: string, b: string) => number) =>\r\n  order === 'desc'\r\n    ? (a, b) => desc(a, b, orderBy, orderProp, format)\r\n    : (a, b) => -desc(a, b, orderBy, orderProp, format)\r\n","import { Loader } from '@gnosis.pm/safe-react-components'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TablePagination from '@material-ui/core/TablePagination'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport * as React from 'react'\r\n\r\nimport TableHead from 'src/components/Table/TableHead'\r\nimport { getSorting, stableSort } from 'src/components/Table/sorting'\r\nimport Row from 'src/components/layout/Row'\r\nimport { sm, xxl } from 'src/theme/variables'\r\n\r\nconst styles = {\r\n  root: {\r\n    backgroundColor: 'white',\r\n    borderTopRightRadius: sm,\r\n    borderTopLeftRadius: sm,\r\n    boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\r\n  },\r\n  selectRoot: {\r\n    lineHeight: xxl,\r\n    backgroundColor: 'white',\r\n  },\r\n  white: {\r\n    backgroundColor: 'white',\r\n  },\r\n  paginationRoot: {\r\n    backgroundColor: 'white',\r\n    boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\r\n    marginBottom: '90px',\r\n    borderBottomRightRadius: sm,\r\n    borderBottomLeftRadius: sm,\r\n  },\r\n  loader: {\r\n    boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\r\n  },\r\n}\r\n\r\nconst FIXED_EMPTY_HEIGHT = 255\r\n\r\nconst backProps = {\r\n  'aria-label': 'Previous Page',\r\n}\r\n\r\nconst nextProps = {\r\n  'aria-label': 'Next Page',\r\n}\r\n\r\nclass GnoTable extends React.Component<any, any> {\r\n  static defaultProps = {\r\n    defaultOrder: 'asc',\r\n    disablePagination: false,\r\n    defaultRowsPerPage: 5,\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      page: 0,\r\n      order: undefined,\r\n      orderBy: undefined,\r\n      fixed: undefined,\r\n      orderProp: false,\r\n      rowsPerPage: undefined,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { columns, defaultOrderBy } = this.props\r\n\r\n    if (defaultOrderBy && columns) {\r\n      const defaultOrderCol = columns.find(({ id }) => id === defaultOrderBy)\r\n\r\n      if (defaultOrderCol.order) {\r\n        this.setState({\r\n          orderProp: true,\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  onSort = (newOrderBy, orderProp) => {\r\n    const { order, orderBy } = this.state\r\n    const { defaultOrder } = this.props\r\n    let newOrder = 'desc'\r\n\r\n    // if table was previously sorted by the user\r\n    if (order && orderBy === newOrderBy && order === 'desc') {\r\n      newOrder = 'asc'\r\n    } else if (!order && defaultOrder === 'desc') {\r\n      // if it was not sorted and defaultOrder is used\r\n      newOrder = 'asc'\r\n    }\r\n\r\n    this.setState(() => ({\r\n      order: newOrder,\r\n      orderBy: newOrderBy,\r\n      orderProp,\r\n      fixed: false,\r\n    }))\r\n  }\r\n\r\n  getEmptyStyle = () => ({\r\n    height: `calc(100vh - ${FIXED_EMPTY_HEIGHT}px)`,\r\n    borderTopRightRadius: sm,\r\n    borderTopLeftRadius: sm,\r\n    backgroundColor: 'white',\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  })\r\n\r\n  handleChangePage = (e, page) => {\r\n    this.setState({ page })\r\n  }\r\n\r\n  handleChangeRowsPerPage = (e) => {\r\n    const rowsPerPage = Number(e.target.value)\r\n    this.setState({ rowsPerPage })\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      children,\r\n      classes,\r\n      columns,\r\n      data,\r\n      defaultFixed,\r\n      defaultOrder,\r\n      defaultOrderBy,\r\n      defaultRowsPerPage,\r\n      disableLoadingOnEmptyTable,\r\n      disablePagination,\r\n      label,\r\n      noBorder,\r\n      size,\r\n    }: any = this.props\r\n    const { fixed, order, orderBy, orderProp, page, rowsPerPage } = this.state\r\n    const orderByParam = orderBy || defaultOrderBy\r\n    const orderParam = order || defaultOrder\r\n    const displayRows = rowsPerPage || defaultRowsPerPage\r\n    const fixedParam = typeof fixed !== 'undefined' ? fixed : !!defaultFixed\r\n    const paginationClasses = {\r\n      selectRoot: classes.selectRoot,\r\n      root: !noBorder && classes.paginationRoot,\r\n      input: classes.white,\r\n    }\r\n    const columnSort = columns.find((column) => column.id === orderByParam)\r\n    let sortedData = stableSort(\r\n      data,\r\n      getSorting(orderParam, orderByParam, orderProp, columnSort?.formatTypeSort),\r\n      fixedParam,\r\n    )\r\n\r\n    if (!disablePagination) {\r\n      sortedData = sortedData.slice(page * displayRows, page * displayRows + displayRows)\r\n    }\r\n\r\n    const isEmpty = size === 0 && !disableLoadingOnEmptyTable\r\n\r\n    return (\r\n      <>\r\n        {!isEmpty && (\r\n          <Table aria-labelledby={label} className={noBorder ? '' : classes.root}>\r\n            <TableHead columns={columns} onSort={this.onSort} order={order} orderBy={orderByParam} />\r\n            <TableBody>{children(sortedData)}</TableBody>\r\n          </Table>\r\n        )}\r\n        {isEmpty && (\r\n          <Row className={classes.loader} style={this.getEmptyStyle()}>\r\n            <Loader size=\"sm\" />\r\n          </Row>\r\n        )}\r\n        {!disablePagination && (\r\n          <TablePagination\r\n            backIconButtonProps={backProps}\r\n            classes={paginationClasses}\r\n            component=\"div\"\r\n            count={size}\r\n            nextIconButtonProps={nextProps}\r\n            onPageChange={this.handleChangePage}\r\n            onRowsPerPageChange={this.handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={displayRows}\r\n            rowsPerPageOptions={[5, 10, 25, 50, 100]}\r\n          />\r\n        )}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles as any)(GnoTable)\r\n","import { useCallback, useEffect, useMemo, useState } from 'react'\r\nimport { Field } from 'react-final-form'\r\nimport { OnChange } from 'react-final-form-listeners'\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\n\r\nimport TextField from 'src/components/forms/TextField'\r\nimport { Validator, composeValidators, mustBeEthereumAddress, required } from 'src/components/forms/validator'\r\nimport { trimSpaces } from 'src/utils/strings'\r\nimport { getAddressFromDomain } from 'src/logic/wallets/getWeb3'\r\nimport { isValidEnsName, isValidCryptoDomainName } from 'src/logic/wallets/ethAddresses'\r\nimport { checksumAddress } from 'src/utils/checksumAddress'\r\nimport { Errors, logError } from 'src/logic/exceptions/CodedException'\r\nimport { parsePrefixedAddress } from 'src/utils/prefixedAddress'\r\n\r\nexport interface AddressInputProps {\r\n  fieldMutator: (address: string) => void\r\n  name?: string\r\n  text?: string\r\n  placeholder?: string\r\n  inputAdornment?: { endAdornment: React.ReactElement } | undefined | false\r\n  testId: string\r\n  validators?: Validator[]\r\n  defaultValue?: string\r\n  disabled?: boolean\r\n  spellCheck?: boolean\r\n  className?: string\r\n}\r\n\r\nconst AddressInput = ({\r\n  className = '',\r\n  name = 'recipientAddress',\r\n  text = 'Recipient*',\r\n  placeholder = 'Recipient*',\r\n  fieldMutator,\r\n  testId,\r\n  inputAdornment,\r\n  validators = [],\r\n  defaultValue,\r\n  disabled,\r\n}: AddressInputProps): React.ReactElement => {\r\n  const [currentInput, setCurrentInput] = useState<string>('')\r\n  const [resolutions, setResolutions] = useState<Record<string, string | undefined>>({})\r\n  const resolvedAddress = resolutions[currentInput]\r\n  const isResolving = resolvedAddress === ''\r\n\r\n  // External validators must receive an unprefixed address\r\n  const sanitizedValidators = useCallback(\r\n    (val: string) => {\r\n      const parsed = parsePrefixedAddress(val)\r\n      return composeValidators(...validators)(parsed.address)\r\n    },\r\n    [validators],\r\n  )\r\n\r\n  // Internal validators + externally passed validators\r\n  const allValidators = useMemo(\r\n    () => composeValidators(required, mustBeEthereumAddress, sanitizedValidators),\r\n    [sanitizedValidators],\r\n  )\r\n\r\n  const onValueChange = useCallback(\r\n    (rawVal: string) => {\r\n      const address = trimSpaces(rawVal)\r\n\r\n      setCurrentInput(rawVal)\r\n\r\n      // A crypto domain name\r\n      if (isValidEnsName(address) || isValidCryptoDomainName(address)) {\r\n        setResolutions((prev) => ({ ...prev, [rawVal]: '' }))\r\n\r\n        getAddressFromDomain(address)\r\n          .then((resolverAddr) => {\r\n            const formattedAddress = checksumAddress(resolverAddr)\r\n            setResolutions((prev) => ({ ...prev, [rawVal]: formattedAddress }))\r\n          })\r\n          .catch((err) => {\r\n            setResolutions((prev) => ({ ...prev, [rawVal]: undefined }))\r\n            logError(Errors._101, err.message)\r\n          })\r\n      } else {\r\n        // A regular address hash\r\n        if (!mustBeEthereumAddress(address)) {\r\n          const parsed = parsePrefixedAddress(address)\r\n          const checkedAddress = checksumAddress(parsed.address) || parsed.address\r\n\r\n          // Field mutator (parent component) always gets an unprefixed address\r\n          fieldMutator(checkedAddress)\r\n        }\r\n      }\r\n    },\r\n    [setCurrentInput, setResolutions, fieldMutator],\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (resolvedAddress) {\r\n      onValueChange(resolvedAddress)\r\n    }\r\n  }, [resolvedAddress, onValueChange])\r\n\r\n  const adornment = isResolving\r\n    ? {\r\n        endAdornment: (\r\n          <InputAdornment position=\"end\">\r\n            <CircularProgress size=\"16px\" />\r\n          </InputAdornment>\r\n        ),\r\n      }\r\n    : inputAdornment\r\n\r\n  return (\r\n    <>\r\n      <Field\r\n        className={className}\r\n        component={TextField as any}\r\n        defaultValue={defaultValue}\r\n        disabled={disabled}\r\n        inputAdornment={adornment}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        text={text}\r\n        spellCheck={false}\r\n        validate={allValidators}\r\n        inputProps={{\r\n          'data-testid': testId,\r\n        }}\r\n      />\r\n\r\n      <OnChange name={name}>{onValueChange}</OnChange>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AddressInput\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `disableGutters={false}`. */\n    gutters: _defineProperty({\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2)\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `variant=\"regular\"`. */\n    regular: theme.mixins.toolbar,\n\n    /* Styles applied to the root element if `variant=\"dense\"`. */\n    dense: {\n      minHeight: 48\n    }\n  };\n};\nvar Toolbar = /*#__PURE__*/React.forwardRef(function Toolbar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'regular' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes[variant], className, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Toolbar.propTypes = {\n  /**\n   * Toolbar children, usually a mixture of `IconButton`, `Button` and `Typography`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, disables gutter padding.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['regular', 'dense'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiToolbar'\n})(Toolbar);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport useTheme from '../styles/useTheme';\nimport IconButton from '../IconButton';\n/**\n * @ignore - internal component.\n */\n\nvar _ref = /*#__PURE__*/React.createElement(KeyboardArrowRight, null);\n\nvar _ref2 = /*#__PURE__*/React.createElement(KeyboardArrowLeft, null);\n\nvar _ref3 = /*#__PURE__*/React.createElement(KeyboardArrowLeft, null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(KeyboardArrowRight, null);\n\nvar TablePaginationActions = /*#__PURE__*/React.forwardRef(function TablePaginationActions(props, ref) {\n  var backIconButtonProps = props.backIconButtonProps,\n      count = props.count,\n      nextIconButtonProps = props.nextIconButtonProps,\n      _props$onChangePage = props.onChangePage,\n      onChangePage = _props$onChangePage === void 0 ? function () {} : _props$onChangePage,\n      _props$onPageChange = props.onPageChange,\n      onPageChange = _props$onPageChange === void 0 ? function () {} : _props$onPageChange,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      other = _objectWithoutProperties(props, [\"backIconButtonProps\", \"count\", \"nextIconButtonProps\", \"onChangePage\", \"onPageChange\", \"page\", \"rowsPerPage\"]);\n\n  var theme = useTheme();\n\n  var handleBackButtonClick = function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n    onPageChange(event, page - 1);\n  };\n\n  var handleNextButtonClick = function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n    onPageChange(event, page + 1);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(IconButton, _extends({\n    onClick: handleBackButtonClick,\n    disabled: page === 0,\n    color: \"inherit\"\n  }, backIconButtonProps), theme.direction === 'rtl' ? _ref : _ref2), /*#__PURE__*/React.createElement(IconButton, _extends({\n    onClick: handleNextButtonClick,\n    disabled: count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false,\n    color: \"inherit\"\n  }, nextIconButtonProps), theme.direction === 'rtl' ? _ref3 : _ref4));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onChangePage: PropTypes.func,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired\n} : void 0;\nexport default TablePaginationActions;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@material-ui/utils';\nimport clsx from 'clsx';\nimport deprecatedPropType from '../utils/deprecatedPropType';\nimport withStyles from '../styles/withStyles';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport Typography from '../Typography';\nimport TablePaginationActions from './TablePaginationActions';\nimport useId from '../utils/unstable_useId';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.primary,\n      fontSize: theme.typography.pxToRem(14),\n      overflow: 'auto',\n      // Increase the specificity to override TableCell.\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the Toolbar component. */\n    toolbar: {\n      minHeight: 52,\n      paddingRight: 2\n    },\n\n    /* Styles applied to the spacer element. */\n    spacer: {\n      flex: '1 1 100%'\n    },\n\n    /* Styles applied to the caption Typography components if `variant=\"caption\"`. */\n    caption: {\n      flexShrink: 0\n    },\n    // TODO v5: `.selectRoot` should be merged with `.input`\n\n    /* Styles applied to the Select component root element. */\n    selectRoot: {\n      marginRight: 32,\n      marginLeft: 8\n    },\n\n    /* Styles applied to the Select component `select` class. */\n    select: {\n      paddingLeft: 8,\n      paddingRight: 24,\n      textAlign: 'right',\n      textAlignLast: 'right' // Align <select> on Chrome.\n\n    },\n    // TODO v5: remove\n\n    /* Styles applied to the Select component `icon` class. */\n    selectIcon: {},\n\n    /* Styles applied to the `InputBase` component. */\n    input: {\n      color: 'inherit',\n      fontSize: 'inherit',\n      flexShrink: 0\n    },\n\n    /* Styles applied to the MenuItem component. */\n    menuItem: {},\n\n    /* Styles applied to the internal `TablePaginationActions` component. */\n    actions: {\n      flexShrink: 0,\n      marginLeft: 20\n    }\n  };\n};\n\nvar defaultLabelDisplayedRows = function defaultLabelDisplayedRows(_ref) {\n  var from = _ref.from,\n      to = _ref.to,\n      count = _ref.count;\n  return \"\".concat(from, \"-\").concat(to, \" of \").concat(count !== -1 ? count : \"more than \".concat(to));\n};\n\nvar defaultRowsPerPageOptions = [10, 25, 50, 100];\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\n\nvar TablePagination = /*#__PURE__*/React.forwardRef(function TablePagination(props, ref) {\n  var _props$ActionsCompone = props.ActionsComponent,\n      ActionsComponent = _props$ActionsCompone === void 0 ? TablePaginationActions : _props$ActionsCompone,\n      backIconButtonProps = props.backIconButtonProps,\n      _props$backIconButton = props.backIconButtonText,\n      backIconButtonText = _props$backIconButton === void 0 ? 'Previous page' : _props$backIconButton,\n      classes = props.classes,\n      className = props.className,\n      colSpanProp = props.colSpan,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? TableCell : _props$component,\n      count = props.count,\n      _props$labelDisplayed = props.labelDisplayedRows,\n      labelDisplayedRows = _props$labelDisplayed === void 0 ? defaultLabelDisplayedRows : _props$labelDisplayed,\n      _props$labelRowsPerPa = props.labelRowsPerPage,\n      labelRowsPerPage = _props$labelRowsPerPa === void 0 ? 'Rows per page:' : _props$labelRowsPerPa,\n      nextIconButtonProps = props.nextIconButtonProps,\n      _props$nextIconButton = props.nextIconButtonText,\n      nextIconButtonText = _props$nextIconButton === void 0 ? 'Next page' : _props$nextIconButton,\n      onChangePage = props.onChangePage,\n      onPageChange = props.onPageChange,\n      onChangeRowsPerPageProp = props.onChangeRowsPerPage,\n      onRowsPerPageChangeProp = props.onRowsPerPageChange,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      _props$rowsPerPageOpt = props.rowsPerPageOptions,\n      rowsPerPageOptions = _props$rowsPerPageOpt === void 0 ? defaultRowsPerPageOptions : _props$rowsPerPageOpt,\n      _props$SelectProps = props.SelectProps,\n      SelectProps = _props$SelectProps === void 0 ? {} : _props$SelectProps,\n      other = _objectWithoutProperties(props, [\"ActionsComponent\", \"backIconButtonProps\", \"backIconButtonText\", \"classes\", \"className\", \"colSpan\", \"component\", \"count\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"nextIconButtonText\", \"onChangePage\", \"onPageChange\", \"onChangeRowsPerPage\", \"onRowsPerPageChange\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\"]);\n\n  var onChangeRowsPerPage = onChangeRowsPerPageProp || onRowsPerPageChangeProp;\n  var colSpan;\n\n  if (Component === TableCell || Component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  var selectId = useId();\n  var labelId = useId();\n  var MenuItemComponent = SelectProps.native ? 'option' : MenuItem;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    colSpan: colSpan,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.toolbar\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.spacer\n  }), rowsPerPageOptions.length > 1 && /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption,\n    id: labelId\n  }, labelRowsPerPage), rowsPerPageOptions.length > 1 && /*#__PURE__*/React.createElement(Select, _extends({\n    classes: {\n      select: classes.select,\n      icon: classes.selectIcon\n    },\n    input: /*#__PURE__*/React.createElement(InputBase, {\n      className: clsx(classes.input, classes.selectRoot)\n    }),\n    value: rowsPerPage,\n    onChange: onChangeRowsPerPage,\n    id: selectId,\n    labelId: labelId\n  }, SelectProps), rowsPerPageOptions.map(function (rowsPerPageOption) {\n    return /*#__PURE__*/React.createElement(MenuItemComponent, {\n      className: classes.menuItem,\n      key: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption,\n      value: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\n    }, rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption);\n  })), /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption\n  }, labelDisplayedRows({\n    from: count === 0 ? 0 : page * rowsPerPage + 1,\n    to: count !== -1 ? Math.min(count, (page + 1) * rowsPerPage) : (page + 1) * rowsPerPage,\n    count: count === -1 ? -1 : count,\n    page: page\n  })), /*#__PURE__*/React.createElement(ActionsComponent, {\n    className: classes.actions,\n    backIconButtonProps: _extends({\n      title: backIconButtonText,\n      'aria-label': backIconButtonText\n    }, backIconButtonProps),\n    count: count,\n    nextIconButtonProps: _extends({\n      title: nextIconButtonText,\n      'aria-label': nextIconButtonText\n    }, nextIconButtonProps),\n    onChangePage: onChangePage,\n    onPageChange: onPageChange,\n    page: page,\n    rowsPerPage: rowsPerPage\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes = {\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a HTML element or a component.\n   */\n  ActionsComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) component.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the back arrow icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  backIconButtonText: PropTypes.string,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The total number of rows.\n   *\n   * To enable server side pagination for an unknown number of items, provide -1.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`\n   * object.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  labelDisplayedRows: PropTypes.func,\n\n  /**\n   * Customize the rows per page label.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  labelRowsPerPage: PropTypes.node,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the next arrow icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  nextIconButtonText: PropTypes.string,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   * @deprecated Use the onPageChange prop instead.\n   */\n  onChangePage: deprecatedPropType(PropTypes.func, 'Use the `onPageChange` prop instead.'),\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @deprecated Use the onRowsPerPageChange prop instead.\n   */\n  onChangeRowsPerPage: deprecatedPropType(PropTypes.func, 'Use the `onRowsPerPageChange` prop instead.'),\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onRowsPerPageChange: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(PropTypes.number.isRequired, function (props) {\n    var count = props.count,\n        page = props.page,\n        rowsPerPage = props.rowsPerPage;\n\n    if (count === -1) {\n      return null;\n    }\n\n    var newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n\n    if (page < 0 || page > newLastPage) {\n      return new Error('Material-UI: The page prop of a TablePagination is out of range ' + \"(0 to \".concat(newLastPage, \", but page is \").concat(page, \").\"));\n    }\n\n    return null;\n  }),\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   */\n  rowsPerPageOptions: PropTypes.array,\n\n  /**\n   * Props applied to the rows per page [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTablePagination'\n})(TablePagination);","import { lg, md } from 'src/theme/variables'\r\nimport { createStyles } from '@material-ui/core'\r\n\r\nexport const styles = createStyles({\r\n  formContainer: {\r\n    padding: `${md} ${lg}`,\r\n    minHeight: '340px',\r\n  },\r\n  buttonRow: {\r\n    height: '84px',\r\n    justifyContent: 'center',\r\n    gap: '16px',\r\n  },\r\n})\r\n","import { makeStyles } from '@material-ui/core/styles'\r\nimport { Mutator } from 'final-form'\r\n\r\nimport { useSelector } from 'react-redux'\r\nimport { OnChange } from 'react-final-form-listeners'\r\n\r\nimport { styles } from './style'\r\n\r\nimport { ScanQRWrapper } from 'src/components/ScanQRModal/ScanQRWrapper'\r\nimport AddressInput from 'src/components/forms/AddressInput'\r\nimport Field from 'src/components/forms/Field'\r\nimport GnoForm from 'src/components/forms/GnoForm'\r\nimport TextField from 'src/components/forms/TextField'\r\nimport {\r\n  addressIsNotCurrentSafe,\r\n  composeValidators,\r\n  required,\r\n  uniqueAddress,\r\n  validAddressBookName,\r\n} from 'src/components/forms/validator'\r\nimport Block from 'src/components/layout/Block'\r\nimport Col from 'src/components/layout/Col'\r\nimport Hairline from 'src/components/layout/Hairline'\r\nimport Paragraph from 'src/components/layout/Paragraph'\r\nimport Row from 'src/components/layout/Row'\r\nimport { currentNetworkAddressBookAsMap } from 'src/logic/addressBook/store/selectors'\r\nimport { currentSafe } from 'src/logic/safe/store/selectors'\r\nimport { isValidAddress } from 'src/utils/isValidAddress'\r\n\r\nimport { OwnerValues } from '../..'\r\nimport { Modal } from 'src/components/Modal'\r\nimport { ModalHeader } from 'src/routes/safe/components/Balances/SendModal/screens/ModalHeader'\r\n\r\nexport const ADD_OWNER_NAME_INPUT_TEST_ID = 'add-owner-name-input'\r\nexport const ADD_OWNER_ADDRESS_INPUT_TEST_ID = 'add-owner-address-testid'\r\nexport const ADD_OWNER_NEXT_BTN_TEST_ID = 'add-owner-next-btn'\r\n\r\nconst formMutators: Record<\r\n  string,\r\n  Mutator<{ setOwnerAddress: { address: string }; setOwnerName: { name: string } }>\r\n> = {\r\n  setOwnerAddress: (args, state, utils) => {\r\n    utils.changeValue(state, 'ownerAddress', () => args[0])\r\n  },\r\n  setOwnerName: (args, state, utils) => {\r\n    utils.changeValue(state, 'ownerName', () => args[0])\r\n  },\r\n}\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\ntype OwnerFormProps = {\r\n  onClose: () => void\r\n  onSubmit: (values) => void\r\n  initialValues?: OwnerValues\r\n}\r\n\r\nexport const OwnerForm = ({ onClose, onSubmit, initialValues }: OwnerFormProps): React.ReactElement => {\r\n  const classes = useStyles()\r\n  const handleSubmit = (values) => {\r\n    onSubmit(values)\r\n  }\r\n  const addressBookMap = useSelector(currentNetworkAddressBookAsMap)\r\n  const { address: safeAddress = '', owners = [] } = useSelector(currentSafe) ?? {}\r\n  const ownerDoesntExist = uniqueAddress(owners)\r\n  const ownerAddressIsNotSafeAddress = addressIsNotCurrentSafe(safeAddress)\r\n\r\n  return (\r\n    <>\r\n      <ModalHeader onClose={onClose} title=\"Add new owner\" subTitle=\"1 of 3\" />\r\n      <Hairline />\r\n      <GnoForm\r\n        formMutators={formMutators}\r\n        initialValues={{\r\n          ownerName: initialValues?.ownerName,\r\n          ownerAddress: initialValues?.ownerAddress,\r\n        }}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {(...args) => {\r\n          const mutators = args[3]\r\n\r\n          const handleScan = (value, closeQrModal) => {\r\n            let scannedAddress = value\r\n\r\n            if (scannedAddress.startsWith('ethereum:')) {\r\n              scannedAddress = scannedAddress.replace('ethereum:', '')\r\n            }\r\n            mutators.setOwnerAddress(scannedAddress)\r\n            closeQrModal()\r\n          }\r\n\r\n          return (\r\n            <>\r\n              <Block className={classes.formContainer}>\r\n                <Row margin=\"md\">\r\n                  <Paragraph>Add a new owner to the active Safe</Paragraph>\r\n                </Row>\r\n                <Row margin=\"md\">\r\n                  <Col xs={8}>\r\n                    <Field\r\n                      component={TextField}\r\n                      name=\"ownerName\"\r\n                      placeholder=\"Owner name*\"\r\n                      testId={ADD_OWNER_NAME_INPUT_TEST_ID}\r\n                      text=\"Owner name*\"\r\n                      type=\"text\"\r\n                      validate={composeValidators(required, validAddressBookName)}\r\n                    />\r\n                    <OnChange name=\"ownerAddress\">\r\n                      {async (address: string) => {\r\n                        if (isValidAddress(address)) {\r\n                          const ownerName = addressBookMap[address]?.name\r\n                          if (ownerName) {\r\n                            mutators.setOwnerName(ownerName)\r\n                          }\r\n                        }\r\n                      }}\r\n                    </OnChange>\r\n                  </Col>\r\n                </Row>\r\n                <Row margin=\"md\">\r\n                  <Col xs={8}>\r\n                    <AddressInput\r\n                      fieldMutator={mutators.setOwnerAddress}\r\n                      name=\"ownerAddress\"\r\n                      placeholder=\"Owner address*\"\r\n                      testId={ADD_OWNER_ADDRESS_INPUT_TEST_ID}\r\n                      text=\"Owner address*\"\r\n                      validators={[ownerDoesntExist, ownerAddressIsNotSafeAddress]}\r\n                    />\r\n                  </Col>\r\n                  <Col center=\"xs\" className={classes} middle=\"xs\" xs={1}>\r\n                    <ScanQRWrapper handleScan={handleScan} />\r\n                  </Col>\r\n                </Row>\r\n              </Block>\r\n              <Hairline />\r\n              <Row align=\"center\" className={classes.buttonRow}>\r\n                <Modal.Footer.Buttons\r\n                  cancelButtonProps={{ onClick: onClose, text: 'Cancel' }}\r\n                  confirmButtonProps={{\r\n                    type: 'submit',\r\n                    text: 'Next',\r\n                    testId: ADD_OWNER_NEXT_BTN_TEST_ID,\r\n                  }}\r\n                />\r\n              </Row>\r\n            </>\r\n          )\r\n        }}\r\n      </GnoForm>\r\n    </>\r\n  )\r\n}\r\n","import { background, border, lg, sm } from 'src/theme/variables'\r\nimport { createStyles } from '@material-ui/core/styles'\r\n\r\nexport const styles = createStyles({\r\n  root: {\r\n    height: '372px',\r\n  },\r\n  info: {\r\n    backgroundColor: background,\r\n    padding: sm,\r\n    justifyContent: 'center',\r\n    textAlign: 'center',\r\n    flexDirection: 'column',\r\n  },\r\n  buttonRow: {\r\n    height: '84px',\r\n    justifyContent: 'center',\r\n    gap: '16px',\r\n  },\r\n  details: {\r\n    padding: lg,\r\n    borderRight: `solid 2px ${border}`,\r\n    height: '100%',\r\n  },\r\n  owners: {\r\n    overflow: 'auto',\r\n    height: '100%',\r\n  },\r\n  ownersTitle: {\r\n    padding: lg,\r\n  },\r\n  owner: {\r\n    padding: sm,\r\n    alignItems: 'center',\r\n  },\r\n  name: {\r\n    textOverflow: 'ellipsis',\r\n    overflow: 'hidden',\r\n  },\r\n  selectedOwner: {\r\n    padding: sm,\r\n    alignItems: 'center',\r\n    backgroundColor: '#f7f5f5',\r\n  },\r\n  open: {\r\n    paddingLeft: sm,\r\n    width: 'auto',\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n    },\r\n  },\r\n})\r\n","import { makeStyles } from '@material-ui/core/styles'\r\nimport { ReactElement, useEffect, useState, Fragment } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport { getExplorerInfo } from 'src/config'\r\nimport Block from 'src/components/layout/Block'\r\nimport Col from 'src/components/layout/Col'\r\nimport Hairline from 'src/components/layout/Hairline'\r\nimport Paragraph from 'src/components/layout/Paragraph'\r\nimport Row from 'src/components/layout/Row'\r\nimport { userAccountSelector } from 'src/logic/wallets/store/selectors'\r\nimport PrefixedEthHashInfo from 'src/components/PrefixedEthHashInfo'\r\nimport { useEstimationStatus } from 'src/logic/hooks/useEstimationStatus'\r\nimport { currentSafeWithNames } from 'src/logic/safe/store/selectors'\r\nimport { TxParametersDetail } from 'src/routes/safe/components/Transactions/helpers/TxParametersDetail'\r\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\r\nimport { EstimationStatus, useEstimateTransactionGas } from 'src/logic/hooks/useEstimateTransactionGas'\r\nimport { Modal } from 'src/components/Modal'\r\nimport { ReviewInfoText } from 'src/components/ReviewInfoText'\r\n\r\nimport { OwnerValues } from '../..'\r\nimport { styles } from './style'\r\nimport { EditableTxParameters } from 'src/routes/safe/components/Transactions/helpers/EditableTxParameters'\r\nimport { ModalHeader } from 'src/routes/safe/components/Balances/SendModal/screens/ModalHeader'\r\nimport { getSafeSDK } from 'src/logic/wallets/getWeb3'\r\nimport { Errors, logError } from 'src/logic/exceptions/CodedException'\r\n\r\nexport const ADD_OWNER_SUBMIT_BTN_TEST_ID = 'add-owner-submit-btn'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\ntype ReviewAddOwnerProps = {\r\n  onClickBack: () => void\r\n  onClose: () => void\r\n  onSubmit: (txParameters: TxParameters) => void\r\n  values: OwnerValues\r\n}\r\n\r\nexport const ReviewAddOwner = ({ onClickBack, onClose, onSubmit, values }: ReviewAddOwnerProps): ReactElement => {\r\n  const classes = useStyles()\r\n  const [data, setData] = useState('')\r\n  const {\r\n    address: safeAddress,\r\n    name: safeName,\r\n    owners,\r\n    currentVersion: safeVersion,\r\n  } = useSelector(currentSafeWithNames)\r\n  const connectedWalletAddress = useSelector(userAccountSelector)\r\n  const [manualSafeTxGas, setManualSafeTxGas] = useState('0')\r\n  const [manualGasPrice, setManualGasPrice] = useState<string | undefined>()\r\n  const [manualGasLimit, setManualGasLimit] = useState<string | undefined>()\r\n\r\n  const {\r\n    gasLimit,\r\n    gasEstimation,\r\n    gasCostFormatted,\r\n    gasPriceFormatted,\r\n    txEstimationExecutionStatus,\r\n    isExecution,\r\n    isOffChainSignature,\r\n    isCreation,\r\n  } = useEstimateTransactionGas({\r\n    txData: data,\r\n    txRecipient: safeAddress,\r\n    safeTxGas: manualSafeTxGas,\r\n    manualGasPrice,\r\n    manualGasLimit,\r\n  })\r\n\r\n  const [buttonStatus] = useEstimationStatus(txEstimationExecutionStatus)\r\n\r\n  useEffect(() => {\r\n    let isCurrent = true\r\n\r\n    const calculateAddOwnerData = async () => {\r\n      try {\r\n        const sdk = await getSafeSDK(connectedWalletAddress, safeAddress, safeVersion)\r\n        const safeTx = await sdk.getAddOwnerTx(\r\n          { ownerAddress: values.ownerAddress, threshold: +values.threshold },\r\n          { safeTxGas: 0 },\r\n        )\r\n        const txData = safeTx.data.data\r\n\r\n        if (isCurrent) {\r\n          setData(txData)\r\n        }\r\n      } catch (error) {\r\n        logError(Errors._811, error.message)\r\n      }\r\n    }\r\n    calculateAddOwnerData()\r\n\r\n    return () => {\r\n      isCurrent = false\r\n    }\r\n  }, [connectedWalletAddress, safeAddress, safeVersion, values.ownerAddress, values.threshold])\r\n\r\n  const closeEditModalCallback = (txParameters: TxParameters) => {\r\n    const oldGasPrice = gasPriceFormatted\r\n    const newGasPrice = txParameters.ethGasPrice\r\n    const oldSafeTxGas = gasEstimation\r\n    const newSafeTxGas = txParameters.safeTxGas\r\n\r\n    if (newGasPrice && oldGasPrice !== newGasPrice) {\r\n      setManualGasPrice(txParameters.ethGasPrice)\r\n    }\r\n\r\n    if (txParameters.ethGasLimit && gasLimit !== txParameters.ethGasLimit) {\r\n      setManualGasLimit(txParameters.ethGasLimit)\r\n    }\r\n\r\n    if (newSafeTxGas && oldSafeTxGas !== newSafeTxGas) {\r\n      setManualSafeTxGas(newSafeTxGas)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <EditableTxParameters\r\n      isOffChainSignature={isOffChainSignature}\r\n      isExecution={isExecution}\r\n      ethGasLimit={gasLimit}\r\n      ethGasPrice={gasPriceFormatted}\r\n      safeTxGas={gasEstimation}\r\n      closeEditModalCallback={closeEditModalCallback}\r\n    >\r\n      {(txParameters, toggleEditMode) => (\r\n        <>\r\n          <ModalHeader onClose={onClose} title=\"Add new owner\" subTitle=\"3 of 3\" />\r\n          <Hairline />\r\n          <Block>\r\n            <Row className={classes.root}>\r\n              <Col layout=\"column\" xs={4}>\r\n                <Block className={classes.details}>\r\n                  <Block margin=\"lg\">\r\n                    <Paragraph color=\"primary\" noMargin size=\"lg\">\r\n                      Details\r\n                    </Paragraph>\r\n                  </Block>\r\n                  <Block margin=\"lg\">\r\n                    <Paragraph color=\"disabled\" noMargin size=\"sm\">\r\n                      Safe name\r\n                    </Paragraph>\r\n                    <Paragraph className={classes.name} color=\"primary\" noMargin size=\"lg\" weight=\"bolder\">\r\n                      {safeName}\r\n                    </Paragraph>\r\n                  </Block>\r\n                  <Block margin=\"lg\">\r\n                    <Paragraph color=\"disabled\" noMargin size=\"sm\">\r\n                      Any transaction requires the confirmation of:\r\n                    </Paragraph>\r\n                    <Paragraph className={classes.name} color=\"primary\" noMargin size=\"lg\" weight=\"bolder\">\r\n                      {`${values.threshold} out of ${(owners?.length || 0) + 1} owner(s)`}\r\n                    </Paragraph>\r\n                  </Block>\r\n                </Block>\r\n              </Col>\r\n              <Col className={classes.owners} layout=\"column\" xs={8}>\r\n                <Row className={classes.ownersTitle}>\r\n                  <Paragraph color=\"primary\" noMargin size=\"lg\">\r\n                    {`${(owners?.length || 0) + 1} Safe owner(s)`}\r\n                  </Paragraph>\r\n                </Row>\r\n                <Hairline />\r\n                {owners?.map((owner) => (\r\n                  <Fragment key={owner.address}>\r\n                    <Row className={classes.owner}>\r\n                      <Col align=\"center\" xs={12}>\r\n                        <PrefixedEthHashInfo\r\n                          hash={owner.address}\r\n                          name={owner.name}\r\n                          showCopyBtn\r\n                          showAvatar\r\n                          explorerUrl={getExplorerInfo(owner.address)}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                    <Hairline />\r\n                  </Fragment>\r\n                ))}\r\n                <Row align=\"center\" className={classes.info}>\r\n                  <Paragraph color=\"primary\" noMargin size=\"md\" weight=\"bolder\">\r\n                    ADDING NEW OWNER &darr;\r\n                  </Paragraph>\r\n                </Row>\r\n                <Hairline />\r\n                <Row className={classes.selectedOwner} data-testid=\"add-owner-review\">\r\n                  <Col align=\"center\" xs={12}>\r\n                    <PrefixedEthHashInfo\r\n                      hash={values.ownerAddress}\r\n                      name={values.ownerName}\r\n                      showCopyBtn\r\n                      showAvatar\r\n                      explorerUrl={getExplorerInfo(values.ownerAddress)}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Hairline />\r\n              </Col>\r\n            </Row>\r\n          </Block>\r\n          <Hairline />\r\n\r\n          {/* Tx Parameters */}\r\n          <TxParametersDetail\r\n            txParameters={txParameters}\r\n            onEdit={toggleEditMode}\r\n            compact={false}\r\n            isTransactionCreation={isCreation}\r\n            isTransactionExecution={isExecution}\r\n            isOffChainSignature={isOffChainSignature}\r\n          />\r\n\r\n          <ReviewInfoText\r\n            gasCostFormatted={gasCostFormatted}\r\n            isCreation={isCreation}\r\n            isExecution={isExecution}\r\n            isOffChainSignature={isOffChainSignature}\r\n            safeNonce={txParameters.safeNonce}\r\n            txEstimationExecutionStatus={txEstimationExecutionStatus}\r\n          />\r\n          <Hairline />\r\n          <Row align=\"center\" className={classes.buttonRow}>\r\n            <Modal.Footer.Buttons\r\n              cancelButtonProps={{ onClick: onClickBack, text: 'Back' }}\r\n              confirmButtonProps={{\r\n                onClick: () => onSubmit(txParameters),\r\n                status: buttonStatus,\r\n                text: txEstimationExecutionStatus === EstimationStatus.LOADING ? 'Estimating' : undefined,\r\n                testId: ADD_OWNER_SUBMIT_BTN_TEST_ID,\r\n              }}\r\n            />\r\n          </Row>\r\n        </>\r\n      )}\r\n    </EditableTxParameters>\r\n  )\r\n}\r\n","import { lg, md, sm } from 'src/theme/variables'\r\nimport { createStyles } from '@material-ui/core'\r\n\r\nexport const styles = createStyles({\r\n  headingText: {\r\n    fontSize: md,\r\n  },\r\n  formContainer: {\r\n    padding: `${md} ${lg}`,\r\n    minHeight: '340px',\r\n  },\r\n  ownersText: {\r\n    marginLeft: sm,\r\n  },\r\n  buttonRow: {\r\n    height: '84px',\r\n    justifyContent: 'center',\r\n    gap: '16px',\r\n  },\r\n  inputRow: {\r\n    position: 'relative',\r\n  },\r\n  errorText: {\r\n    position: 'absolute',\r\n    bottom: '-25px',\r\n  },\r\n})\r\n","import MenuItem from '@material-ui/core/MenuItem'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { ReactElement } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport { styles } from './style'\r\n\r\nimport Field from 'src/components/forms/Field'\r\nimport GnoForm from 'src/components/forms/GnoForm'\r\nimport SelectField from 'src/components/forms/SelectField'\r\nimport { composeValidators, maxValue, minValue, mustBeInteger, required } from 'src/components/forms/validator'\r\nimport Block from 'src/components/layout/Block'\r\nimport Col from 'src/components/layout/Col'\r\nimport Hairline from 'src/components/layout/Hairline'\r\nimport Paragraph from 'src/components/layout/Paragraph'\r\nimport Row from 'src/components/layout/Row'\r\nimport { currentSafe } from 'src/logic/safe/store/selectors'\r\nimport { Modal } from 'src/components/Modal'\r\nimport { ModalHeader } from 'src/routes/safe/components/Balances/SendModal/screens/ModalHeader'\r\n\r\nexport const ADD_OWNER_THRESHOLD_NEXT_BTN_TEST_ID = 'add-owner-threshold-next-btn'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\ntype SubmitProps = {\r\n  threshold: number\r\n}\r\n\r\ntype ThresholdValues = {\r\n  threshold: string\r\n}\r\n\r\ntype Props = {\r\n  onClickBack: () => void\r\n  onClose: () => void\r\n  onSubmit: (values: SubmitProps) => void\r\n  initialValues: ThresholdValues\r\n}\r\n\r\nexport const ThresholdForm = ({ onClickBack, onClose, onSubmit, initialValues }: Props): ReactElement => {\r\n  const classes = useStyles()\r\n  const { owners, threshold = 1 } = useSelector(currentSafe) ?? {}\r\n  const numOptions = owners ? owners.length + 1 : 0\r\n\r\n  const handleSubmit = (values: SubmitProps) => {\r\n    onSubmit(values)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ModalHeader onClose={onClose} title=\"Add new owner\" subTitle=\"2 of 3\" />\r\n      <Hairline />\r\n      <GnoForm initialValues={{ threshold: initialValues.threshold || threshold.toString() }} onSubmit={handleSubmit}>\r\n        {() => (\r\n          <>\r\n            <Block className={classes.formContainer}>\r\n              <Row>\r\n                <Paragraph className={classes.headingText} weight=\"bolder\">\r\n                  Set the required owner confirmations:\r\n                </Paragraph>\r\n              </Row>\r\n              <Row>\r\n                <Paragraph weight=\"bolder\">Any transaction requires the confirmation of:</Paragraph>\r\n              </Row>\r\n              <Row align=\"center\" className={classes.inputRow} margin=\"xl\">\r\n                <Col xs={2}>\r\n                  <Field\r\n                    data-testid=\"threshold-select-input\"\r\n                    name=\"threshold\"\r\n                    render={(props) => (\r\n                      <>\r\n                        <SelectField {...props} disableError>\r\n                          {[...Array(Number(numOptions))].map((x, index) => (\r\n                            <MenuItem key={index} value={`${index + 1}`}>\r\n                              {index + 1}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </SelectField>\r\n                        {props.meta.error && props.meta.touched && (\r\n                          <Paragraph className={classes.errorText} color=\"error\" noMargin>\r\n                            {props.meta.error}\r\n                          </Paragraph>\r\n                        )}\r\n                      </>\r\n                    )}\r\n                    validate={composeValidators(required, mustBeInteger, minValue(1), maxValue(numOptions))}\r\n                  />\r\n                </Col>\r\n                <Col xs={10}>\r\n                  <Paragraph className={classes.ownersText} color=\"primary\" noMargin size=\"lg\">\r\n                    out of {numOptions} owner(s)\r\n                  </Paragraph>\r\n                </Col>\r\n              </Row>\r\n            </Block>\r\n            <Hairline />\r\n            <Row align=\"center\" className={classes.buttonRow}>\r\n              <Modal.Footer.Buttons\r\n                cancelButtonProps={{ onClick: onClickBack, text: 'Back' }}\r\n                confirmButtonProps={{\r\n                  type: 'submit',\r\n                  text: 'Review',\r\n                  testId: ADD_OWNER_THRESHOLD_NEXT_BTN_TEST_ID,\r\n                }}\r\n              />\r\n            </Row>\r\n          </>\r\n        )}\r\n      </GnoForm>\r\n    </>\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport Modal from 'src/components/Modal'\r\nimport { userAccountSelector } from 'src/logic/wallets/store/selectors'\r\nimport { addressBookAddOrUpdate } from 'src/logic/addressBook/store/actions'\r\nimport { TX_NOTIFICATION_TYPES } from 'src/logic/safe/transactions'\r\nimport { createTransaction } from 'src/logic/safe/store/actions/createTransaction'\r\nimport { checksumAddress } from 'src/utils/checksumAddress'\r\nimport { makeAddressBookEntry } from 'src/logic/addressBook/model/addressBook'\r\nimport { Dispatch } from 'src/logic/safe/store/actions/types.d'\r\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\r\nimport { extractSafeAddress } from 'src/routes/routes'\r\n\r\nimport { OwnerForm } from './screens/OwnerForm'\r\nimport { ReviewAddOwner } from './screens/Review'\r\nimport { ThresholdForm } from './screens/ThresholdForm'\r\nimport { getSafeSDK } from 'src/logic/wallets/getWeb3'\r\nimport { Errors, logError } from 'src/logic/exceptions/CodedException'\r\nimport { currentSafeCurrentVersion } from 'src/logic/safe/store/selectors'\r\nimport { currentChainId } from 'src/logic/config/store/selectors'\r\nimport { _getChainId } from 'src/config'\r\n\r\nexport type OwnerValues = {\r\n  ownerAddress: string\r\n  ownerName: string\r\n  threshold: string\r\n}\r\n\r\nexport const sendAddOwner = async (\r\n  values: OwnerValues,\r\n  safeAddress: string,\r\n  safeVersion: string,\r\n  txParameters: TxParameters,\r\n  dispatch: Dispatch,\r\n  connectedWalletAddress: string,\r\n): Promise<void> => {\r\n  const sdk = await getSafeSDK(connectedWalletAddress, safeAddress, safeVersion)\r\n  const safeTx = await sdk.getAddOwnerTx(\r\n    { ownerAddress: values.ownerAddress, threshold: +values.threshold },\r\n    { safeTxGas: 0 },\r\n  )\r\n  const txData = safeTx.data.data\r\n\r\n  const txHash = await dispatch(\r\n    createTransaction({\r\n      safeAddress,\r\n      to: safeAddress,\r\n      valueInWei: '0',\r\n      txData,\r\n      txNonce: txParameters.safeNonce,\r\n      safeTxGas: txParameters.safeTxGas,\r\n      ethParameters: txParameters,\r\n      notifiedTransaction: TX_NOTIFICATION_TYPES.SETTINGS_CHANGE_TX,\r\n    }),\r\n  )\r\n\r\n  if (txHash) {\r\n    dispatch(\r\n      addressBookAddOrUpdate(\r\n        makeAddressBookEntry({ address: values.ownerAddress, name: values.ownerName, chainId: _getChainId() }),\r\n      ),\r\n    )\r\n  }\r\n}\r\n\r\ntype Props = {\r\n  isOpen: boolean\r\n  onClose: () => void\r\n}\r\n\r\nexport const AddOwnerModal = ({ isOpen, onClose }: Props): React.ReactElement => {\r\n  const [activeScreen, setActiveScreen] = useState('selectOwner')\r\n  const [values, setValues] = useState<OwnerValues>({ ownerName: '', ownerAddress: '', threshold: '' })\r\n  const dispatch = useDispatch()\r\n  const safeAddress = extractSafeAddress()\r\n  const safeVersion = useSelector(currentSafeCurrentVersion)\r\n  const connectedWalletAddress = useSelector(userAccountSelector)\r\n  const chainId = useSelector(currentChainId)\r\n\r\n  useEffect(\r\n    () => () => {\r\n      setActiveScreen('selectOwner')\r\n      setValues({ ownerName: '', ownerAddress: '', threshold: '' })\r\n    },\r\n    [isOpen],\r\n  )\r\n\r\n  const onClickBack = () => {\r\n    if (activeScreen === 'reviewAddOwner') {\r\n      setActiveScreen('selectThreshold')\r\n    } else if (activeScreen === 'selectThreshold') {\r\n      setActiveScreen('selectOwner')\r\n    }\r\n  }\r\n\r\n  const ownerSubmitted = (newValues) => {\r\n    setValues((stateValues) => ({\r\n      ...stateValues,\r\n      ownerName: newValues.ownerName,\r\n      ownerAddress: checksumAddress(newValues.ownerAddress),\r\n    }))\r\n    setActiveScreen('selectThreshold')\r\n  }\r\n\r\n  const thresholdSubmitted = (newValues) => {\r\n    setValues((stateValues) => ({\r\n      ...stateValues,\r\n      threshold: newValues.threshold,\r\n    }))\r\n    setActiveScreen('reviewAddOwner')\r\n  }\r\n\r\n  const onAddOwner = async (txParameters: TxParameters) => {\r\n    onClose()\r\n\r\n    try {\r\n      await sendAddOwner(values, safeAddress, safeVersion, txParameters, dispatch, connectedWalletAddress)\r\n      dispatch(\r\n        addressBookAddOrUpdate(makeAddressBookEntry({ name: values.ownerName, address: values.ownerAddress, chainId })),\r\n      )\r\n    } catch (error) {\r\n      logError(Errors._808, error.message)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      description=\"Add owner to Safe\"\r\n      handleClose={onClose}\r\n      open={isOpen}\r\n      paperClassName=\"bigger-modal-window\"\r\n      title=\"Add owner to Safe\"\r\n    >\r\n      <>\r\n        {activeScreen === 'selectOwner' && (\r\n          <OwnerForm initialValues={values} onClose={onClose} onSubmit={ownerSubmitted} />\r\n        )}\r\n        {activeScreen === 'selectThreshold' && (\r\n          <ThresholdForm\r\n            onClickBack={onClickBack}\r\n            initialValues={{ threshold: values.threshold }}\r\n            onClose={onClose}\r\n            onSubmit={thresholdSubmitted}\r\n          />\r\n        )}\r\n        {activeScreen === 'reviewAddOwner' && (\r\n          <ReviewAddOwner onClickBack={onClickBack} onClose={onClose} onSubmit={onAddOwner} values={values} />\r\n        )}\r\n      </>\r\n    </Modal>\r\n  )\r\n}\r\n","import { createStyles, makeStyles } from '@material-ui/core'\r\n\r\nimport { lg, md } from 'src/theme/variables'\r\n\r\nexport const useStyles = makeStyles(\r\n  createStyles({\r\n    heading: {\r\n      padding: lg,\r\n      justifyContent: 'space-between',\r\n      boxSizing: 'border-box',\r\n      height: '74px',\r\n    },\r\n    manage: {\r\n      fontSize: lg,\r\n    },\r\n    container: {\r\n      padding: `${md} ${lg}`,\r\n      minHeight: '200px',\r\n    },\r\n    close: {\r\n      height: '35px',\r\n      width: '35px',\r\n    },\r\n  }),\r\n)\r\n","import { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { getExplorerInfo } from 'src/config'\r\nimport Field from 'src/components/forms/Field'\r\nimport GnoForm from 'src/components/forms/GnoForm'\r\nimport TextField from 'src/components/forms/TextField'\r\nimport { composeValidators, required, validAddressBookName } from 'src/components/forms/validator'\r\nimport Block from 'src/components/layout/Block'\r\nimport Hairline from 'src/components/layout/Hairline'\r\nimport Row from 'src/components/layout/Row'\r\nimport Modal, { Modal as GenericModal } from 'src/components/Modal'\r\nimport PrefixedEthHashInfo from 'src/components/PrefixedEthHashInfo'\r\nimport { makeAddressBookEntry } from 'src/logic/addressBook/model/addressBook'\r\nimport { addressBookAddOrUpdate } from 'src/logic/addressBook/store/actions'\r\nimport { NOTIFICATIONS } from 'src/logic/notifications'\r\nimport enqueueSnackbar from 'src/logic/notifications/store/actions/enqueueSnackbar'\r\nimport { ModalHeader } from 'src/routes/safe/components/Balances/SendModal/screens/ModalHeader'\r\nimport { OwnerData } from 'src/routes/safe/components/Settings/ManageOwners/dataFetcher'\r\n\r\nimport { useStyles } from './style'\r\nimport { currentChainId } from 'src/logic/config/store/selectors'\r\n\r\nexport const RENAME_OWNER_INPUT_TEST_ID = 'rename-owner-input'\r\nexport const SAVE_OWNER_CHANGES_BTN_TEST_ID = 'save-owner-changes-btn'\r\n\r\ntype OwnProps = {\r\n  isOpen: boolean\r\n  onClose: () => void\r\n  owner: OwnerData\r\n}\r\n\r\nexport const EditOwnerModal = ({ isOpen, onClose, owner }: OwnProps): React.ReactElement => {\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n  const chainId = useSelector(currentChainId)\r\n\r\n  const handleSubmit = ({ ownerName }: { ownerName: string }): void => {\r\n    // Update the value only if the ownerName really changed\r\n    if (ownerName !== owner.name) {\r\n      dispatch(addressBookAddOrUpdate(makeAddressBookEntry({ address: owner.address, name: ownerName, chainId })))\r\n      dispatch(enqueueSnackbar(NOTIFICATIONS.OWNER_NAME_CHANGE_EXECUTED_MSG))\r\n    }\r\n    onClose()\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      description=\"Edit owner from Safe\"\r\n      handleClose={onClose}\r\n      open={isOpen}\r\n      paperClassName=\"smaller-modal-window\"\r\n      title=\"Edit owner from Safe\"\r\n    >\r\n      <ModalHeader onClose={onClose} title=\"Edit owner name\" />\r\n      <Hairline />\r\n      <GnoForm onSubmit={handleSubmit} subscription={{ pristine: true }}>\r\n        {(...args) => {\r\n          const pristine = args[2].pristine\r\n          return (\r\n            <>\r\n              <Block className={classes.container}>\r\n                <Row margin=\"md\">\r\n                  <Field\r\n                    component={TextField}\r\n                    initialValue={owner.name}\r\n                    name=\"ownerName\"\r\n                    placeholder=\"Owner name*\"\r\n                    testId={RENAME_OWNER_INPUT_TEST_ID}\r\n                    text=\"Owner name*\"\r\n                    type=\"text\"\r\n                    validate={composeValidators(required, validAddressBookName)}\r\n                  />\r\n                </Row>\r\n                <Row>\r\n                  <Block justify=\"center\">\r\n                    <PrefixedEthHashInfo\r\n                      hash={owner.address}\r\n                      showCopyBtn\r\n                      showAvatar\r\n                      explorerUrl={getExplorerInfo(owner.address)}\r\n                    />\r\n                  </Block>\r\n                </Row>\r\n              </Block>\r\n              <GenericModal.Footer>\r\n                <GenericModal.Footer.Buttons\r\n                  cancelButtonProps={{ onClick: onClose }}\r\n                  confirmButtonProps={{ disabled: pristine, testId: SAVE_OWNER_CHANGES_BTN_TEST_ID, text: 'Save' }}\r\n                />\r\n              </GenericModal.Footer>\r\n            </>\r\n          )\r\n        }}\r\n      </GnoForm>\r\n    </Modal>\r\n  )\r\n}\r\n","import { createStyles, makeStyles } from '@material-ui/core'\r\n\r\nimport { lg, md } from 'src/theme/variables'\r\n\r\nexport const useStyles = makeStyles(\r\n  createStyles({\r\n    formContainer: {\r\n      padding: `${md} ${lg}`,\r\n      minHeight: '340px',\r\n    },\r\n  }),\r\n)\r\n","import { ReactElement } from 'react'\r\n\r\nimport { getExplorerInfo } from 'src/config'\r\nimport { Modal } from 'src/components/Modal'\r\nimport Block from 'src/components/layout/Block'\r\nimport Col from 'src/components/layout/Col'\r\nimport Hairline from 'src/components/layout/Hairline'\r\nimport Paragraph from 'src/components/layout/Paragraph'\r\nimport Row from 'src/components/layout/Row'\r\nimport PrefixedEthHashInfo from 'src/components/PrefixedEthHashInfo'\r\nimport { ModalHeader } from 'src/routes/safe/components/Balances/SendModal/screens/ModalHeader'\r\nimport { OwnerData } from 'src/routes/safe/components/Settings/ManageOwners/dataFetcher'\r\n\r\nimport { useStyles } from './style'\r\n\r\nexport const REMOVE_OWNER_MODAL_NEXT_BTN_TEST_ID = 'remove-owner-next-btn'\r\n\r\ninterface CheckOwnerProps {\r\n  onClose: () => void\r\n  onSubmit: () => void\r\n  owner: OwnerData\r\n}\r\n\r\nexport const CheckOwner = ({ onClose, onSubmit, owner }: CheckOwnerProps): ReactElement => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <>\r\n      <ModalHeader onClose={onClose} subTitle=\"1 of 3\" title=\"Remove owner\" />\r\n      <Hairline />\r\n      <Block className={classes.formContainer}>\r\n        <Row margin=\"md\">\r\n          <Paragraph size=\"lg\">Review the owner you want to remove from the active Safe:</Paragraph>\r\n        </Row>\r\n        <Row>\r\n          <Col align=\"center\" xs={12}>\r\n            <PrefixedEthHashInfo\r\n              hash={owner.address}\r\n              name={owner.name}\r\n              showCopyBtn\r\n              showAvatar\r\n              explorerUrl={getExplorerInfo(owner.address)}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Block>\r\n      <Modal.Footer>\r\n        <Modal.Footer.Buttons\r\n          cancelButtonProps={{ onClick: onClose }}\r\n          confirmButtonProps={{ onClick: onSubmit, testId: REMOVE_OWNER_MODAL_NEXT_BTN_TEST_ID, text: 'Next' }}\r\n        />\r\n      </Modal.Footer>\r\n    </>\r\n  )\r\n}\r\n","import { createStyles, makeStyles } from '@material-ui/core'\r\n\r\nimport { background, border, lg, sm } from 'src/theme/variables'\r\n\r\nexport const useStyles = makeStyles(\r\n  createStyles({\r\n    root: {\r\n      height: '372px',\r\n    },\r\n    info: {\r\n      backgroundColor: background,\r\n      padding: sm,\r\n      justifyContent: 'center',\r\n      textAlign: 'center',\r\n      flexDirection: 'column',\r\n    },\r\n    details: {\r\n      padding: lg,\r\n      borderRight: `solid 1px ${border}`,\r\n      height: '100%',\r\n    },\r\n    owners: {\r\n      overflow: 'auto',\r\n      height: '100%',\r\n    },\r\n    ownersTitle: {\r\n      padding: lg,\r\n    },\r\n    owner: {\r\n      padding: sm,\r\n      alignItems: 'center',\r\n    },\r\n    name: {\r\n      textOverflow: 'ellipsis',\r\n      overflow: 'hidden',\r\n    },\r\n    selectedOwner: {\r\n      padding: sm,\r\n      alignItems: 'center',\r\n      backgroundColor: '#ffe6ea',\r\n    },\r\n  }),\r\n)\r\n","import { useEffect, useState, Fragment } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport { getExplorerInfo } from 'src/config'\r\nimport Block from 'src/components/layout/Block'\r\nimport Col from 'src/components/layout/Col'\r\nimport Hairline from 'src/components/layout/Hairline'\r\nimport Paragraph from 'src/components/layout/Paragraph'\r\nimport Row from 'src/components/layout/Row'\r\nimport { userAccountSelector } from 'src/logic/wallets/store/selectors'\r\nimport PrefixedEthHashInfo from 'src/components/PrefixedEthHashInfo'\r\nimport { currentSafeWithNames } from 'src/logic/safe/store/selectors'\r\nimport { TxParametersDetail } from 'src/routes/safe/components/Transactions/helpers/TxParametersDetail'\r\nimport { EstimationStatus, useEstimateTransactionGas } from 'src/logic/hooks/useEstimateTransactionGas'\r\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\r\nimport { OwnerData } from 'src/routes/safe/components/Settings/ManageOwners/dataFetcher'\r\n\r\nimport { useStyles } from './style'\r\nimport { Modal } from 'src/components/Modal'\r\nimport { ReviewInfoText } from 'src/components/ReviewInfoText'\r\nimport { EditableTxParameters } from 'src/routes/safe/components/Transactions/helpers/EditableTxParameters'\r\nimport { useEstimationStatus } from 'src/logic/hooks/useEstimationStatus'\r\nimport { sameAddress } from 'src/logic/wallets/ethAddresses'\r\nimport { ModalHeader } from 'src/routes/safe/components/Balances/SendModal/screens/ModalHeader'\r\nimport { getSafeSDK } from 'src/logic/wallets/getWeb3'\r\nimport { logError } from 'src/logic/exceptions/CodedException'\r\nimport ErrorCodes from 'src/logic/exceptions/registry'\r\n\r\nexport const REMOVE_OWNER_REVIEW_BTN_TEST_ID = 'remove-owner-review-btn'\r\n\r\ntype ReviewRemoveOwnerProps = {\r\n  onClickBack: () => void\r\n  onClose: () => void\r\n  onSubmit: (txParameters: TxParameters) => void\r\n  owner: OwnerData\r\n  threshold?: number\r\n}\r\n\r\nexport const ReviewRemoveOwnerModal = ({\r\n  onClickBack,\r\n  onClose,\r\n  onSubmit,\r\n  owner,\r\n  threshold = 1,\r\n}: ReviewRemoveOwnerProps): React.ReactElement => {\r\n  const classes = useStyles()\r\n  const [data, setData] = useState('')\r\n  const {\r\n    address: safeAddress,\r\n    name: safeName,\r\n    owners,\r\n    currentVersion: safeVersion,\r\n  } = useSelector(currentSafeWithNames)\r\n  const connectedWalletAddress = useSelector(userAccountSelector)\r\n  const numOptions = owners ? owners.length - 1 : 0\r\n  const [manualSafeTxGas, setManualSafeTxGas] = useState('0')\r\n  const [manualGasPrice, setManualGasPrice] = useState<string | undefined>()\r\n  const [manualGasLimit, setManualGasLimit] = useState<string | undefined>()\r\n\r\n  const {\r\n    gasLimit,\r\n    gasEstimation,\r\n    gasPriceFormatted,\r\n    gasCostFormatted,\r\n    txEstimationExecutionStatus,\r\n    isExecution,\r\n    isCreation,\r\n    isOffChainSignature,\r\n  } = useEstimateTransactionGas({\r\n    txData: data,\r\n    txRecipient: safeAddress,\r\n    safeTxGas: manualSafeTxGas,\r\n    manualGasPrice,\r\n    manualGasLimit,\r\n  })\r\n\r\n  const [buttonStatus] = useEstimationStatus(txEstimationExecutionStatus)\r\n\r\n  useEffect(() => {\r\n    let isCurrent = true\r\n\r\n    if (!threshold) {\r\n      console.error(\"Threshold value was not define, tx can't be executed\")\r\n      return\r\n    }\r\n\r\n    const calculateRemoveOwnerData = async () => {\r\n      try {\r\n        const sdk = await getSafeSDK(connectedWalletAddress, safeAddress, safeVersion)\r\n        const safeTx = await sdk.getRemoveOwnerTx(\r\n          { ownerAddress: owner.address, threshold: +threshold },\r\n          { safeTxGas: 0 },\r\n        )\r\n        const txData = safeTx.data.data\r\n\r\n        if (isCurrent) {\r\n          setData(txData)\r\n        }\r\n      } catch (error) {\r\n        logError(ErrorCodes._812, error.message)\r\n      }\r\n    }\r\n    calculateRemoveOwnerData()\r\n\r\n    return () => {\r\n      isCurrent = false\r\n    }\r\n  }, [safeAddress, safeVersion, connectedWalletAddress, owner.address, threshold])\r\n\r\n  const closeEditModalCallback = (txParameters: TxParameters) => {\r\n    const oldGasPrice = gasPriceFormatted\r\n    const newGasPrice = txParameters.ethGasPrice\r\n    const oldSafeTxGas = gasEstimation\r\n    const newSafeTxGas = txParameters.safeTxGas\r\n\r\n    if (newGasPrice && oldGasPrice !== newGasPrice) {\r\n      setManualGasPrice(txParameters.ethGasPrice)\r\n    }\r\n\r\n    if (txParameters.ethGasLimit && gasLimit !== txParameters.ethGasLimit) {\r\n      setManualGasLimit(txParameters.ethGasLimit)\r\n    }\r\n\r\n    if (newSafeTxGas && oldSafeTxGas !== newSafeTxGas) {\r\n      setManualSafeTxGas(newSafeTxGas)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <EditableTxParameters\r\n      isOffChainSignature={isOffChainSignature}\r\n      isExecution={isExecution}\r\n      ethGasLimit={gasLimit}\r\n      ethGasPrice={gasPriceFormatted}\r\n      safeTxGas={gasEstimation}\r\n      closeEditModalCallback={closeEditModalCallback}\r\n    >\r\n      {(txParameters, toggleEditMode) => (\r\n        <>\r\n          <ModalHeader onClose={onClose} title=\"Remove owner\" subTitle=\"3 of 3\" />\r\n          <Hairline />\r\n          <Block>\r\n            <Row className={classes.root}>\r\n              {/* Details */}\r\n              <Col layout=\"column\" xs={4}>\r\n                <Block className={classes.details}>\r\n                  <Block margin=\"lg\">\r\n                    <Paragraph color=\"primary\" noMargin size=\"lg\">\r\n                      Details\r\n                    </Paragraph>\r\n                  </Block>\r\n                  <Block margin=\"lg\">\r\n                    <Paragraph color=\"disabled\" noMargin size=\"sm\">\r\n                      Safe name\r\n                    </Paragraph>\r\n                    <Paragraph className={classes.name} color=\"primary\" noMargin size=\"lg\" weight=\"bolder\">\r\n                      {safeName}\r\n                    </Paragraph>\r\n                  </Block>\r\n                  <Block margin=\"lg\">\r\n                    <Paragraph color=\"disabled\" noMargin size=\"sm\">\r\n                      Any transaction requires the confirmation of:\r\n                    </Paragraph>\r\n                    <Paragraph className={classes.name} color=\"primary\" noMargin size=\"lg\" weight=\"bolder\">\r\n                      {`${threshold} out of ${numOptions} owner(s)`}\r\n                    </Paragraph>\r\n                  </Block>\r\n                </Block>\r\n              </Col>\r\n              {/* Owners */}\r\n              <Col className={classes.owners} layout=\"column\" xs={8}>\r\n                <Row className={classes.ownersTitle}>\r\n                  <Paragraph color=\"primary\" noMargin size=\"lg\">\r\n                    {`${numOptions} Safe owner(s)`}\r\n                  </Paragraph>\r\n                </Row>\r\n                <Hairline />\r\n                {owners?.map(\r\n                  (safeOwner) =>\r\n                    !sameAddress(safeOwner.address, owner.address) && (\r\n                      <Fragment key={safeOwner.address}>\r\n                        <Row className={classes.owner}>\r\n                          <Col align=\"center\" xs={12}>\r\n                            <PrefixedEthHashInfo\r\n                              hash={safeOwner.address}\r\n                              name={safeOwner.name}\r\n                              showCopyBtn\r\n                              showAvatar\r\n                              explorerUrl={getExplorerInfo(safeOwner.address)}\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n                        <Hairline />\r\n                      </Fragment>\r\n                    ),\r\n                )}\r\n                <Row align=\"center\" className={classes.info}>\r\n                  <Paragraph color=\"primary\" noMargin size=\"md\" weight=\"bolder\">\r\n                    REMOVING OWNER &darr;\r\n                  </Paragraph>\r\n                </Row>\r\n                <Hairline />\r\n                <Row className={classes.selectedOwner} data-testid=\"remove-owner-review\">\r\n                  <Col align=\"center\" xs={12}>\r\n                    <PrefixedEthHashInfo\r\n                      hash={owner.address}\r\n                      name={owner.name}\r\n                      showCopyBtn\r\n                      showAvatar\r\n                      explorerUrl={getExplorerInfo(owner.address)}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Hairline />\r\n              </Col>\r\n            </Row>\r\n          </Block>\r\n          <Hairline />\r\n\r\n          {/* Tx Parameters */}\r\n          <TxParametersDetail\r\n            txParameters={txParameters}\r\n            onEdit={toggleEditMode}\r\n            compact={false}\r\n            isTransactionCreation={isCreation}\r\n            isTransactionExecution={isExecution}\r\n            isOffChainSignature={isOffChainSignature}\r\n          />\r\n\r\n          {txEstimationExecutionStatus === EstimationStatus.LOADING ? null : (\r\n            <ReviewInfoText\r\n              gasCostFormatted={gasCostFormatted}\r\n              isCreation={isCreation}\r\n              isExecution={isExecution}\r\n              isOffChainSignature={isOffChainSignature}\r\n              safeNonce={txParameters.safeNonce}\r\n              txEstimationExecutionStatus={txEstimationExecutionStatus}\r\n            />\r\n          )}\r\n          <Modal.Footer withoutBorder>\r\n            <Modal.Footer.Buttons\r\n              cancelButtonProps={{ onClick: onClickBack, text: 'Back' }}\r\n              confirmButtonProps={{\r\n                onClick: () => onSubmit(txParameters),\r\n                status: buttonStatus,\r\n                text: txEstimationExecutionStatus === EstimationStatus.LOADING ? 'Estimating' : undefined,\r\n                type: 'submit',\r\n                testId: REMOVE_OWNER_REVIEW_BTN_TEST_ID,\r\n              }}\r\n            />\r\n          </Modal.Footer>\r\n        </>\r\n      )}\r\n    </EditableTxParameters>\r\n  )\r\n}\r\n","import { createStyles, makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { lg, md, sm } from 'src/theme/variables'\r\n\r\nexport const useStyles = makeStyles(\r\n  createStyles({\r\n    headingText: {\r\n      fontSize: md,\r\n    },\r\n    formContainer: {\r\n      padding: `${md} ${lg}`,\r\n      minHeight: '340px',\r\n    },\r\n    ownersText: {\r\n      marginLeft: sm,\r\n    },\r\n    inputRow: {\r\n      position: 'relative',\r\n    },\r\n    errorText: {\r\n      position: 'absolute',\r\n      bottom: '-25px',\r\n    },\r\n  }),\r\n)\r\n","import MenuItem from '@material-ui/core/MenuItem'\r\nimport { ReactElement } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport { useStyles } from './style'\r\n\r\nimport Field from 'src/components/forms/Field'\r\nimport GnoForm from 'src/components/forms/GnoForm'\r\nimport SelectField from 'src/components/forms/SelectField'\r\nimport { composeValidators, maxValue, minValue, mustBeInteger, required } from 'src/components/forms/validator'\r\nimport Block from 'src/components/layout/Block'\r\nimport Col from 'src/components/layout/Col'\r\nimport Hairline from 'src/components/layout/Hairline'\r\nimport Paragraph from 'src/components/layout/Paragraph'\r\nimport Row from 'src/components/layout/Row'\r\nimport { Modal } from 'src/components/Modal'\r\nimport { currentSafe } from 'src/logic/safe/store/selectors'\r\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\r\nimport { ModalHeader } from 'src/routes/safe/components/Balances/SendModal/screens/ModalHeader'\r\n\r\nexport const REMOVE_OWNER_THRESHOLD_NEXT_BTN_TEST_ID = 'remove-owner-threshold-next-btn'\r\n\r\ntype ThresholdValues = {\r\n  threshold: string\r\n}\r\n\r\ntype Props = {\r\n  onClickBack: () => void\r\n  onClose: () => void\r\n  onSubmit: (txParameters: TxParameters) => void\r\n  initialValues: ThresholdValues\r\n}\r\n\r\nexport const ThresholdForm = ({ onClickBack, onClose, onSubmit, initialValues }: Props): ReactElement => {\r\n  const classes = useStyles()\r\n  const { owners, threshold = 1 } = useSelector(currentSafe) ?? {}\r\n  const ownersCount = owners?.length ?? 0\r\n  const handleSubmit = (values) => {\r\n    onSubmit(values)\r\n  }\r\n  const defaultThreshold = threshold > 1 && threshold === ownersCount ? threshold - 1 : threshold\r\n\r\n  return (\r\n    <>\r\n      <ModalHeader onClose={onClose} subTitle=\"2 of 3\" title=\"Remove owner\" />\r\n      <Hairline />\r\n      <GnoForm\r\n        initialValues={{ threshold: initialValues.threshold || defaultThreshold.toString() }}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {() => {\r\n          const numOptions = ownersCount > 1 ? ownersCount - 1 : 1\r\n\r\n          return (\r\n            <>\r\n              <Block className={classes.formContainer}>\r\n                <Row>\r\n                  <Paragraph className={classes.headingText} weight=\"bolder\">\r\n                    Set the required owner confirmations:\r\n                  </Paragraph>\r\n                </Row>\r\n                <Row>\r\n                  <Paragraph weight=\"bolder\">Any transaction requires the confirmation of:</Paragraph>\r\n                </Row>\r\n                <Row align=\"center\" className={classes.inputRow} margin=\"xl\">\r\n                  <Col xs={2}>\r\n                    <Field\r\n                      data-testid=\"threshold-select-input\"\r\n                      name=\"threshold\"\r\n                      render={(props) => (\r\n                        <>\r\n                          <SelectField {...props} disableError>\r\n                            {[...Array(Number(numOptions))].map((x, index) => (\r\n                              <MenuItem key={index} value={`${index + 1}`}>\r\n                                {index + 1}\r\n                              </MenuItem>\r\n                            ))}\r\n                          </SelectField>\r\n                          {props.meta.error && props.meta.touched && (\r\n                            <Paragraph className={classes.errorText} color=\"error\" noMargin>\r\n                              {props.meta.error}\r\n                            </Paragraph>\r\n                          )}\r\n                        </>\r\n                      )}\r\n                      validate={composeValidators(required, mustBeInteger, minValue(1), maxValue(numOptions))}\r\n                    />\r\n                  </Col>\r\n                  <Col xs={10}>\r\n                    <Paragraph className={classes.ownersText} color=\"primary\" noMargin size=\"lg\">\r\n                      out of {ownersCount ? ownersCount - 1 : 0} owner(s)\r\n                    </Paragraph>\r\n                  </Col>\r\n                </Row>\r\n              </Block>\r\n              <Modal.Footer>\r\n                <Modal.Footer.Buttons\r\n                  cancelButtonProps={{ onClick: onClickBack, text: 'Back' }}\r\n                  confirmButtonProps={{ testId: REMOVE_OWNER_THRESHOLD_NEXT_BTN_TEST_ID, text: 'Review' }}\r\n                />\r\n              </Modal.Footer>\r\n            </>\r\n          )\r\n        }}\r\n      </GnoForm>\r\n    </>\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { OwnerData } from 'src/routes/safe/components/Settings/ManageOwners/dataFetcher'\r\n\r\nimport { CheckOwner } from './screens/CheckOwner'\r\nimport { userAccountSelector } from 'src/logic/wallets/store/selectors'\r\nimport { ReviewRemoveOwnerModal } from './screens/Review'\r\nimport { ThresholdForm } from './screens/ThresholdForm'\r\n\r\nimport Modal from 'src/components/Modal'\r\nimport { TX_NOTIFICATION_TYPES } from 'src/logic/safe/transactions'\r\nimport { createTransaction } from 'src/logic/safe/store/actions/createTransaction'\r\nimport { Dispatch } from 'src/logic/safe/store/actions/types.d'\r\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\r\nimport { extractSafeAddress } from 'src/routes/routes'\r\nimport { getSafeSDK } from 'src/logic/wallets/getWeb3'\r\nimport { Errors, logError } from 'src/logic/exceptions/CodedException'\r\nimport { currentSafeCurrentVersion } from 'src/logic/safe/store/selectors'\r\n\r\ntype OwnerValues = OwnerData & {\r\n  threshold: string\r\n}\r\n\r\nexport const sendRemoveOwner = async (\r\n  values: OwnerValues,\r\n  safeAddress: string,\r\n  safeVersion: string,\r\n  ownerAddressToRemove: string,\r\n  dispatch: Dispatch,\r\n  txParameters: TxParameters,\r\n  connectedWalletAddress: string,\r\n): Promise<void> => {\r\n  const sdk = await getSafeSDK(connectedWalletAddress, safeAddress, safeVersion)\r\n  const safeTx = await sdk.getRemoveOwnerTx(\r\n    { ownerAddress: ownerAddressToRemove, threshold: +values.threshold },\r\n    { safeTxGas: 0 },\r\n  )\r\n  const txData = safeTx.data.data\r\n\r\n  dispatch(\r\n    createTransaction({\r\n      safeAddress,\r\n      to: safeAddress,\r\n      valueInWei: '0',\r\n      txData,\r\n      txNonce: txParameters.safeNonce,\r\n      safeTxGas: txParameters.safeTxGas,\r\n      ethParameters: txParameters,\r\n      notifiedTransaction: TX_NOTIFICATION_TYPES.SETTINGS_CHANGE_TX,\r\n    }),\r\n  )\r\n}\r\n\r\ntype RemoveOwnerProps = {\r\n  isOpen: boolean\r\n  onClose: () => void\r\n  owner: OwnerData\r\n}\r\n\r\nexport const RemoveOwnerModal = ({ isOpen, onClose, owner }: RemoveOwnerProps): React.ReactElement => {\r\n  const [activeScreen, setActiveScreen] = useState('checkOwner')\r\n  const [values, setValues] = useState<OwnerValues>({ ...owner, threshold: '' })\r\n  const dispatch = useDispatch()\r\n  const safeAddress = extractSafeAddress()\r\n  const safeVersion = useSelector(currentSafeCurrentVersion)\r\n  const connectedWalletAddress = useSelector(userAccountSelector)\r\n\r\n  useEffect(\r\n    () => () => {\r\n      setActiveScreen('checkOwner')\r\n    },\r\n    [isOpen],\r\n  )\r\n\r\n  const onClickBack = () => {\r\n    if (activeScreen === 'reviewRemoveOwner') {\r\n      setActiveScreen('selectThreshold')\r\n    } else if (activeScreen === 'selectThreshold') {\r\n      setActiveScreen('checkOwner')\r\n    }\r\n  }\r\n\r\n  const ownerSubmitted = () => {\r\n    setActiveScreen('selectThreshold')\r\n  }\r\n\r\n  const thresholdSubmitted = (newValues) => {\r\n    const cpValues = { ...values, threshold: newValues.threshold }\r\n    setValues(cpValues)\r\n    setActiveScreen('reviewRemoveOwner')\r\n  }\r\n\r\n  const onRemoveOwner = async (txParameters: TxParameters) => {\r\n    onClose()\r\n\r\n    try {\r\n      await sendRemoveOwner(\r\n        values,\r\n        safeAddress,\r\n        safeVersion,\r\n        owner.address,\r\n        dispatch,\r\n        txParameters,\r\n        connectedWalletAddress,\r\n      )\r\n    } catch (error) {\r\n      logError(Errors._809, error.message)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      description=\"Remove owner from Safe\"\r\n      handleClose={onClose}\r\n      open={isOpen}\r\n      paperClassName=\"bigger-modal-window\"\r\n      title=\"Remove owner from Safe\"\r\n    >\r\n      <>\r\n        {activeScreen === 'checkOwner' && <CheckOwner onClose={onClose} onSubmit={ownerSubmitted} owner={owner} />}\r\n        {activeScreen === 'selectThreshold' && (\r\n          <ThresholdForm\r\n            onClickBack={onClickBack}\r\n            initialValues={{ threshold: values.threshold }}\r\n            onClose={onClose}\r\n            onSubmit={thresholdSubmitted}\r\n          />\r\n        )}\r\n        {activeScreen === 'reviewRemoveOwner' && (\r\n          <ReviewRemoveOwnerModal\r\n            onClickBack={onClickBack}\r\n            onClose={onClose}\r\n            onSubmit={onRemoveOwner}\r\n            owner={owner}\r\n            threshold={Number(values.threshold)}\r\n          />\r\n        )}\r\n      </>\r\n    </Modal>\r\n  )\r\n}\r\n","import { lg, md, sm } from 'src/theme/variables'\r\nimport { createStyles, makeStyles } from '@material-ui/core'\r\n\r\nexport const useStyles = makeStyles(\r\n  createStyles({\r\n    formContainer: {\r\n      padding: `${md} ${lg}`,\r\n      minHeight: '340px',\r\n    },\r\n    owner: {\r\n      alignItems: 'center',\r\n    },\r\n    address: {\r\n      marginRight: sm,\r\n    },\r\n  }),\r\n)\r\n","import { Mutator } from 'final-form'\r\nimport { ReactElement } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { OnChange } from 'react-final-form-listeners'\r\n\r\nimport AddressInput from 'src/components/forms/AddressInput'\r\nimport Field from 'src/components/forms/Field'\r\nimport GnoForm from 'src/components/forms/GnoForm'\r\nimport TextField from 'src/components/forms/TextField'\r\nimport {\r\n  addressIsNotCurrentSafe,\r\n  composeValidators,\r\n  required,\r\n  uniqueAddress,\r\n  validAddressBookName,\r\n} from 'src/components/forms/validator'\r\nimport Block from 'src/components/layout/Block'\r\nimport Col from 'src/components/layout/Col'\r\nimport Hairline from 'src/components/layout/Hairline'\r\nimport Paragraph from 'src/components/layout/Paragraph'\r\nimport Row from 'src/components/layout/Row'\r\nimport PrefixedEthHashInfo from 'src/components/PrefixedEthHashInfo'\r\nimport { ScanQRWrapper } from 'src/components/ScanQRModal/ScanQRWrapper'\r\nimport { Modal } from 'src/components/Modal'\r\nimport { currentSafe } from 'src/logic/safe/store/selectors'\r\nimport { currentNetworkAddressBookAsMap } from 'src/logic/addressBook/store/selectors'\r\nimport { OwnerData } from 'src/routes/safe/components/Settings/ManageOwners/dataFetcher'\r\nimport { isValidAddress } from 'src/utils/isValidAddress'\r\n\r\nimport { useStyles } from './style'\r\nimport { getExplorerInfo } from 'src/config'\r\n\r\nexport const REPLACE_OWNER_NAME_INPUT_TEST_ID = 'replace-owner-name-input'\r\nexport const REPLACE_OWNER_ADDRESS_INPUT_TEST_ID = 'replace-owner-address-testid'\r\nexport const REPLACE_OWNER_NEXT_BTN_TEST_ID = 'replace-owner-next-btn'\r\n\r\nimport { OwnerValues } from '../..'\r\nimport { ModalHeader } from 'src/routes/safe/components/Balances/SendModal/screens/ModalHeader'\r\n\r\nconst formMutators: Record<\r\n  string,\r\n  Mutator<{ setOwnerAddress: { address: string }; setOwnerName: { name: string } }>\r\n> = {\r\n  setOwnerAddress: (args, state, utils) => {\r\n    utils.changeValue(state, 'ownerAddress', () => args[0])\r\n  },\r\n  setOwnerName: (args, state, utils) => {\r\n    utils.changeValue(state, 'ownerName', () => args[0])\r\n  },\r\n}\r\n\r\ntype NewOwnerProps = {\r\n  ownerAddress: string\r\n  ownerName: string\r\n}\r\n\r\ntype OwnerFormProps = {\r\n  onClose: () => void\r\n  onSubmit: (values: NewOwnerProps) => void\r\n  owner: OwnerData\r\n  initialValues?: OwnerValues\r\n}\r\n\r\nexport const OwnerForm = ({ onClose, onSubmit, owner, initialValues }: OwnerFormProps): ReactElement => {\r\n  const classes = useStyles()\r\n\r\n  const handleSubmit = (values: NewOwnerProps) => {\r\n    onSubmit(values)\r\n  }\r\n  const addressBookMap = useSelector(currentNetworkAddressBookAsMap)\r\n  const { address: safeAddress = '', owners } = useSelector(currentSafe) ?? {}\r\n  const ownerDoesntExist = uniqueAddress(owners)\r\n  const ownerAddressIsNotSafeAddress = addressIsNotCurrentSafe(safeAddress)\r\n\r\n  return (\r\n    <>\r\n      <ModalHeader onClose={onClose} title=\"Replace owner\" subTitle=\"1 of 2\" />\r\n      <Hairline />\r\n      <GnoForm\r\n        formMutators={formMutators}\r\n        onSubmit={handleSubmit}\r\n        initialValues={{\r\n          ownerName: initialValues?.name,\r\n          ownerAddress: initialValues?.address,\r\n        }}\r\n      >\r\n        {(...args) => {\r\n          const mutators = args[3]\r\n\r\n          const handleScan = (value, closeQrModal) => {\r\n            let scannedAddress = value\r\n\r\n            if (scannedAddress.startsWith('ethereum:')) {\r\n              scannedAddress = scannedAddress.replace('ethereum:', '')\r\n            }\r\n\r\n            mutators.setOwnerAddress(scannedAddress)\r\n            closeQrModal()\r\n          }\r\n\r\n          return (\r\n            <>\r\n              <Block className={classes.formContainer}>\r\n                <Row>\r\n                  <Paragraph>\r\n                    Review the owner you want to replace from the active Safe. Then specify the new owner you want to\r\n                    replace it with:\r\n                  </Paragraph>\r\n                </Row>\r\n                <Row>\r\n                  <Paragraph>Current owner</Paragraph>\r\n                </Row>\r\n                <Row className={classes.owner}>\r\n                  <Col align=\"center\" xs={12}>\r\n                    <PrefixedEthHashInfo\r\n                      hash={owner.address}\r\n                      name={owner.name}\r\n                      showCopyBtn\r\n                      showAvatar\r\n                      explorerUrl={getExplorerInfo(owner.address)}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Paragraph>New owner</Paragraph>\r\n                </Row>\r\n                <Row margin=\"md\">\r\n                  <Col xs={8}>\r\n                    <Field\r\n                      component={TextField}\r\n                      name=\"ownerName\"\r\n                      placeholder=\"Owner name*\"\r\n                      testId={REPLACE_OWNER_NAME_INPUT_TEST_ID}\r\n                      text=\"Owner name*\"\r\n                      type=\"text\"\r\n                      validate={composeValidators(required, validAddressBookName)}\r\n                    />\r\n                    <OnChange name=\"ownerAddress\">\r\n                      {async (address: string) => {\r\n                        if (isValidAddress(address)) {\r\n                          const ownerName = addressBookMap[address]?.name\r\n                          if (ownerName) {\r\n                            mutators.setOwnerName(ownerName)\r\n                          }\r\n                        }\r\n                      }}\r\n                    </OnChange>\r\n                  </Col>\r\n                </Row>\r\n                <Row margin=\"md\">\r\n                  <Col xs={8}>\r\n                    <AddressInput\r\n                      fieldMutator={mutators.setOwnerAddress}\r\n                      name=\"ownerAddress\"\r\n                      placeholder=\"Owner address*\"\r\n                      testId={REPLACE_OWNER_ADDRESS_INPUT_TEST_ID}\r\n                      text=\"Owner address*\"\r\n                      validators={[ownerDoesntExist, ownerAddressIsNotSafeAddress]}\r\n                    />\r\n                  </Col>\r\n                  <Col center=\"xs\" className={classes} middle=\"xs\" xs={1}>\r\n                    <ScanQRWrapper handleScan={handleScan} />\r\n                  </Col>\r\n                </Row>\r\n              </Block>\r\n              <Modal.Footer>\r\n                <Modal.Footer.Buttons\r\n                  cancelButtonProps={{ onClick: onClose }}\r\n                  confirmButtonProps={{ testId: REPLACE_OWNER_NEXT_BTN_TEST_ID, text: 'Next' }}\r\n                />\r\n              </Modal.Footer>\r\n            </>\r\n          )\r\n        }}\r\n      </GnoForm>\r\n    </>\r\n  )\r\n}\r\n","import { background, border, lg, sm } from 'src/theme/variables'\r\nimport { createStyles, makeStyles } from '@material-ui/core'\r\n\r\nexport const useStyles = makeStyles(\r\n  createStyles({\r\n    root: {\r\n      height: '372px',\r\n    },\r\n    info: {\r\n      backgroundColor: background,\r\n      padding: sm,\r\n      justifyContent: 'center',\r\n      textAlign: 'center',\r\n      flexDirection: 'column',\r\n    },\r\n    details: {\r\n      padding: lg,\r\n      borderRight: `solid 1px ${border}`,\r\n      height: '100%',\r\n    },\r\n    owners: {\r\n      overflow: 'auto',\r\n      height: '100%',\r\n    },\r\n    ownersTitle: {\r\n      padding: lg,\r\n    },\r\n    owner: {\r\n      padding: sm,\r\n      alignItems: 'center',\r\n    },\r\n    name: {\r\n      textOverflow: 'ellipsis',\r\n      overflow: 'hidden',\r\n    },\r\n    selectedOwnerRemoved: {\r\n      padding: sm,\r\n      alignItems: 'center',\r\n      backgroundColor: '#ffe6ea',\r\n    },\r\n    selectedOwnerAdded: {\r\n      padding: sm,\r\n      alignItems: 'center',\r\n      backgroundColor: '#f7f5f5',\r\n    },\r\n  }),\r\n)\r\n","import { useEffect, useState, Fragment } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport { getExplorerInfo } from 'src/config'\r\nimport Block from 'src/components/layout/Block'\r\nimport Col from 'src/components/layout/Col'\r\nimport Hairline from 'src/components/layout/Hairline'\r\nimport Paragraph from 'src/components/layout/Paragraph'\r\nimport Row from 'src/components/layout/Row'\r\nimport { userAccountSelector } from 'src/logic/wallets/store/selectors'\r\nimport PrefixedEthHashInfo from 'src/components/PrefixedEthHashInfo'\r\nimport { currentSafeWithNames } from 'src/logic/safe/store/selectors'\r\nimport { useEstimationStatus } from 'src/logic/hooks/useEstimationStatus'\r\nimport { TxParametersDetail } from 'src/routes/safe/components/Transactions/helpers/TxParametersDetail'\r\nimport { EstimationStatus, useEstimateTransactionGas } from 'src/logic/hooks/useEstimateTransactionGas'\r\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\r\nimport { Modal } from 'src/components/Modal'\r\nimport { ReviewInfoText } from 'src/components/ReviewInfoText'\r\nimport { EditableTxParameters } from 'src/routes/safe/components/Transactions/helpers/EditableTxParameters'\r\nimport { sameAddress } from 'src/logic/wallets/ethAddresses'\r\nimport { OwnerData } from 'src/routes/safe/components/Settings/ManageOwners/dataFetcher'\r\n\r\nimport { useStyles } from './style'\r\nimport { ModalHeader } from 'src/routes/safe/components/Balances/SendModal/screens/ModalHeader'\r\nimport { getSafeSDK } from 'src/logic/wallets/getWeb3'\r\nimport { Errors, logError } from 'src/logic/exceptions/CodedException'\r\n\r\nexport const REPLACE_OWNER_SUBMIT_BTN_TEST_ID = 'replace-owner-submit-btn'\r\n\r\ntype ReplaceOwnerProps = {\r\n  onClose: () => void\r\n  onClickBack: () => void\r\n  onSubmit: (txParameters: TxParameters) => void\r\n  owner: OwnerData\r\n  newOwner: {\r\n    address: string\r\n    name: string\r\n  }\r\n}\r\n\r\nexport const ReviewReplaceOwnerModal = ({\r\n  onClickBack,\r\n  onClose,\r\n  onSubmit,\r\n  owner,\r\n  newOwner,\r\n}: ReplaceOwnerProps): React.ReactElement => {\r\n  const classes = useStyles()\r\n  const [data, setData] = useState('')\r\n  const {\r\n    address: safeAddress,\r\n    name: safeName,\r\n    owners,\r\n    threshold = 1,\r\n    currentVersion: safeVersion,\r\n  } = useSelector(currentSafeWithNames)\r\n  const connectedWalletAddress = useSelector(userAccountSelector)\r\n  const [manualSafeTxGas, setManualSafeTxGas] = useState('0')\r\n  const [manualGasPrice, setManualGasPrice] = useState<string | undefined>()\r\n  const [manualGasLimit, setManualGasLimit] = useState<string | undefined>()\r\n\r\n  const {\r\n    gasLimit,\r\n    gasEstimation,\r\n    gasPriceFormatted,\r\n    gasCostFormatted,\r\n    txEstimationExecutionStatus,\r\n    isExecution,\r\n    isCreation,\r\n    isOffChainSignature,\r\n  } = useEstimateTransactionGas({\r\n    txData: data,\r\n    txRecipient: safeAddress,\r\n    safeTxGas: manualSafeTxGas,\r\n    manualGasPrice,\r\n    manualGasLimit,\r\n  })\r\n\r\n  const [buttonStatus] = useEstimationStatus(txEstimationExecutionStatus)\r\n\r\n  useEffect(() => {\r\n    let isCurrent = true\r\n\r\n    const calculateReplaceOwnerData = async () => {\r\n      try {\r\n        const sdk = await getSafeSDK(connectedWalletAddress, safeAddress, safeVersion)\r\n        const safeTx = await sdk.getSwapOwnerTx(\r\n          { oldOwnerAddress: owner.address, newOwnerAddress: newOwner.address },\r\n          { safeTxGas: 0 },\r\n        )\r\n        const txData = safeTx.data.data\r\n\r\n        if (isCurrent) {\r\n          setData(txData)\r\n        }\r\n      } catch (error) {\r\n        logError(Errors._813, error.message)\r\n      }\r\n    }\r\n    calculateReplaceOwnerData()\r\n\r\n    return () => {\r\n      isCurrent = false\r\n    }\r\n  }, [safeAddress, safeVersion, connectedWalletAddress, owner.address, newOwner.address])\r\n\r\n  const closeEditModalCallback = (txParameters: TxParameters) => {\r\n    const oldGasPrice = gasPriceFormatted\r\n    const newGasPrice = txParameters.ethGasPrice\r\n    const oldSafeTxGas = gasEstimation\r\n    const newSafeTxGas = txParameters.safeTxGas\r\n\r\n    if (newGasPrice && oldGasPrice !== newGasPrice) {\r\n      setManualGasPrice(txParameters.ethGasPrice)\r\n    }\r\n\r\n    if (txParameters.ethGasLimit && gasLimit !== txParameters.ethGasLimit) {\r\n      setManualGasLimit(txParameters.ethGasLimit)\r\n    }\r\n\r\n    if (newSafeTxGas && oldSafeTxGas !== newSafeTxGas) {\r\n      setManualSafeTxGas(newSafeTxGas)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <EditableTxParameters\r\n      isOffChainSignature={isOffChainSignature}\r\n      isExecution={isExecution}\r\n      ethGasLimit={gasLimit}\r\n      ethGasPrice={gasPriceFormatted}\r\n      safeTxGas={gasEstimation}\r\n      closeEditModalCallback={closeEditModalCallback}\r\n    >\r\n      {(txParameters, toggleEditMode) => (\r\n        <>\r\n          <ModalHeader onClose={onClose} title=\"Replace owner\" subTitle=\"2 of 2\" />\r\n          <Hairline />\r\n          <Block>\r\n            <Row className={classes.root}>\r\n              <Col layout=\"column\" xs={4}>\r\n                <Block className={classes.details}>\r\n                  <Block margin=\"lg\">\r\n                    <Paragraph color=\"primary\" noMargin size=\"lg\">\r\n                      Details\r\n                    </Paragraph>\r\n                  </Block>\r\n                  <Block margin=\"lg\">\r\n                    <Paragraph color=\"disabled\" noMargin size=\"sm\">\r\n                      Safe name\r\n                    </Paragraph>\r\n                    <Paragraph className={classes.name} color=\"primary\" noMargin size=\"lg\" weight=\"bolder\">\r\n                      {safeName}\r\n                    </Paragraph>\r\n                  </Block>\r\n                  <Block margin=\"lg\">\r\n                    <Paragraph color=\"disabled\" noMargin size=\"sm\">\r\n                      Any transaction requires the confirmation of:\r\n                    </Paragraph>\r\n                    <Paragraph className={classes.name} color=\"primary\" noMargin size=\"lg\" weight=\"bolder\">\r\n                      {`${threshold} out of ${owners?.length || 0} owner(s)`}\r\n                    </Paragraph>\r\n                  </Block>\r\n                </Block>\r\n              </Col>\r\n              <Col className={classes.owners} layout=\"column\" xs={8}>\r\n                <Row className={classes.ownersTitle}>\r\n                  <Paragraph color=\"primary\" noMargin size=\"lg\">\r\n                    {`${owners?.length || 0} Safe owner(s)`}\r\n                  </Paragraph>\r\n                </Row>\r\n                <Hairline />\r\n                {owners?.map(\r\n                  (safeOwner) =>\r\n                    !sameAddress(safeOwner.address, owner.address) && (\r\n                      <Fragment key={safeOwner.address}>\r\n                        <Row className={classes.owner}>\r\n                          <Col align=\"center\" xs={12}>\r\n                            <PrefixedEthHashInfo\r\n                              hash={safeOwner.address}\r\n                              name={safeOwner.name}\r\n                              showCopyBtn\r\n                              showAvatar\r\n                              explorerUrl={getExplorerInfo(safeOwner.address)}\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n                        <Hairline />\r\n                      </Fragment>\r\n                    ),\r\n                )}\r\n                <Row align=\"center\" className={classes.info}>\r\n                  <Paragraph color=\"primary\" noMargin size=\"md\" weight=\"bolder\">\r\n                    REMOVING OWNER &darr;\r\n                  </Paragraph>\r\n                </Row>\r\n                <Hairline />\r\n                <Row className={classes.selectedOwnerRemoved} data-testid=\"remove-owner-review\">\r\n                  <Col align=\"center\" xs={12}>\r\n                    <PrefixedEthHashInfo\r\n                      hash={owner.address}\r\n                      name={owner.name}\r\n                      showCopyBtn\r\n                      showAvatar\r\n                      explorerUrl={getExplorerInfo(owner.address)}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row align=\"center\" className={classes.info}>\r\n                  <Paragraph color=\"primary\" noMargin size=\"md\" weight=\"bolder\">\r\n                    ADDING NEW OWNER &darr;\r\n                  </Paragraph>\r\n                </Row>\r\n                <Hairline />\r\n                <Row className={classes.selectedOwnerAdded} data-testid=\"add-owner-review\">\r\n                  <Col align=\"center\" xs={12}>\r\n                    <PrefixedEthHashInfo\r\n                      hash={newOwner.address}\r\n                      name={newOwner.name}\r\n                      showCopyBtn\r\n                      showAvatar\r\n                      explorerUrl={getExplorerInfo(newOwner.address)}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Hairline />\r\n              </Col>\r\n            </Row>\r\n          </Block>\r\n          <Hairline />\r\n\r\n          {/* Tx Parameters */}\r\n          <TxParametersDetail\r\n            txParameters={txParameters}\r\n            onEdit={toggleEditMode}\r\n            compact={false}\r\n            isTransactionCreation={isCreation}\r\n            isTransactionExecution={isExecution}\r\n            isOffChainSignature={isOffChainSignature}\r\n          />\r\n\r\n          <ReviewInfoText\r\n            gasCostFormatted={gasCostFormatted}\r\n            isCreation={isCreation}\r\n            isExecution={isExecution}\r\n            isOffChainSignature={isOffChainSignature}\r\n            safeNonce={txParameters.safeNonce}\r\n            txEstimationExecutionStatus={txEstimationExecutionStatus}\r\n          />\r\n          <Modal.Footer withoutBorder>\r\n            <Modal.Footer.Buttons\r\n              cancelButtonProps={{ onClick: onClickBack, text: 'Back' }}\r\n              confirmButtonProps={{\r\n                onClick: () => onSubmit(txParameters),\r\n                status: buttonStatus,\r\n                text: txEstimationExecutionStatus === EstimationStatus.LOADING ? 'Estimating' : undefined,\r\n                type: 'submit',\r\n                testId: REPLACE_OWNER_SUBMIT_BTN_TEST_ID,\r\n              }}\r\n            />\r\n          </Modal.Footer>\r\n        </>\r\n      )}\r\n    </EditableTxParameters>\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport Modal from 'src/components/Modal'\r\nimport { userAccountSelector } from 'src/logic/wallets/store/selectors'\r\nimport { addressBookAddOrUpdate } from 'src/logic/addressBook/store/actions'\r\nimport { TX_NOTIFICATION_TYPES } from 'src/logic/safe/transactions'\r\nimport { createTransaction } from 'src/logic/safe/store/actions/createTransaction'\r\nimport { checksumAddress } from 'src/utils/checksumAddress'\r\nimport { makeAddressBookEntry } from 'src/logic/addressBook/model/addressBook'\r\nimport { Dispatch } from 'src/logic/safe/store/actions/types.d'\r\n\r\nimport { OwnerForm } from 'src/routes/safe/components/Settings/ManageOwners/ReplaceOwnerModal/screens/OwnerForm'\r\nimport { ReviewReplaceOwnerModal } from 'src/routes/safe/components/Settings/ManageOwners/ReplaceOwnerModal/screens/Review'\r\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\r\nimport { isValidAddress } from 'src/utils/isValidAddress'\r\nimport { OwnerData } from 'src/routes/safe/components/Settings/ManageOwners/dataFetcher'\r\nimport { extractSafeAddress } from 'src/routes/routes'\r\nimport { getSafeSDK } from 'src/logic/wallets/getWeb3'\r\nimport { Errors, logError } from 'src/logic/exceptions/CodedException'\r\nimport { currentSafeCurrentVersion } from 'src/logic/safe/store/selectors'\r\nimport { _getChainId } from 'src/config'\r\n\r\nexport type OwnerValues = {\r\n  address: string\r\n  name: string\r\n}\r\n\r\nexport const sendReplaceOwner = async (\r\n  newOwner: OwnerValues,\r\n  safeAddress: string,\r\n  safeVersion: string,\r\n  ownerAddressToRemove: string,\r\n  dispatch: Dispatch,\r\n  txParameters: TxParameters,\r\n  connectedWalletAddress: string,\r\n): Promise<void> => {\r\n  const sdk = await getSafeSDK(connectedWalletAddress, safeAddress, safeVersion)\r\n  const safeTx = await sdk.getSwapOwnerTx(\r\n    { oldOwnerAddress: ownerAddressToRemove, newOwnerAddress: newOwner.address },\r\n    { safeTxGas: 0 },\r\n  )\r\n  const txData = safeTx.data.data\r\n\r\n  const txHash = await dispatch(\r\n    createTransaction({\r\n      safeAddress,\r\n      to: safeAddress,\r\n      valueInWei: '0',\r\n      txData,\r\n      txNonce: txParameters.safeNonce,\r\n      safeTxGas: txParameters.safeTxGas,\r\n      ethParameters: txParameters,\r\n      notifiedTransaction: TX_NOTIFICATION_TYPES.SETTINGS_CHANGE_TX,\r\n    }),\r\n  )\r\n\r\n  if (txHash) {\r\n    // update the AB\r\n    dispatch(addressBookAddOrUpdate(makeAddressBookEntry({ ...newOwner, chainId: _getChainId() })))\r\n  }\r\n}\r\n\r\ntype ReplaceOwnerProps = {\r\n  isOpen: boolean\r\n  onClose: () => void\r\n  owner: OwnerData\r\n}\r\n\r\nexport const ReplaceOwnerModal = ({ isOpen, onClose, owner }: ReplaceOwnerProps): React.ReactElement => {\r\n  const [activeScreen, setActiveScreen] = useState('checkOwner')\r\n  const [newOwner, setNewOwner] = useState({ address: '', name: '' })\r\n  const dispatch = useDispatch()\r\n  const safeAddress = extractSafeAddress()\r\n  const safeVersion = useSelector(currentSafeCurrentVersion)\r\n  const connectedWalletAddress = useSelector(userAccountSelector)\r\n\r\n  useEffect(\r\n    () => () => {\r\n      setActiveScreen('checkOwner')\r\n      setNewOwner({ address: '', name: '' })\r\n    },\r\n    [isOpen],\r\n  )\r\n\r\n  const onClickBack = () => setActiveScreen('checkOwner')\r\n\r\n  const ownerSubmitted = (newValues) => {\r\n    const { ownerAddress, ownerName } = newValues\r\n\r\n    if (isValidAddress(ownerAddress)) {\r\n      const checksumAddr = checksumAddress(ownerAddress)\r\n      setNewOwner({ address: checksumAddr, name: ownerName })\r\n      setActiveScreen('reviewReplaceOwner')\r\n    }\r\n  }\r\n\r\n  const onReplaceOwner = async (txParameters: TxParameters) => {\r\n    onClose()\r\n\r\n    try {\r\n      await sendReplaceOwner(\r\n        newOwner,\r\n        safeAddress,\r\n        safeVersion,\r\n        owner.address,\r\n        dispatch,\r\n        txParameters,\r\n        connectedWalletAddress,\r\n      )\r\n      dispatch(addressBookAddOrUpdate(makeAddressBookEntry({ ...newOwner, chainId: _getChainId() })))\r\n    } catch (error) {\r\n      logError(Errors._810, error.message)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      description=\"Replace owner from Safe\"\r\n      handleClose={onClose}\r\n      open={isOpen}\r\n      paperClassName=\"bigger-modal-window\"\r\n      title=\"Replace owner from Safe\"\r\n    >\r\n      <>\r\n        {activeScreen === 'checkOwner' && (\r\n          <OwnerForm onClose={onClose} onSubmit={ownerSubmitted} initialValues={newOwner} owner={owner} />\r\n        )}\r\n        {activeScreen === 'reviewReplaceOwner' && (\r\n          <ReviewReplaceOwnerModal\r\n            onClickBack={onClickBack}\r\n            onClose={onClose}\r\n            onSubmit={onReplaceOwner}\r\n            owner={owner}\r\n            newOwner={newOwner}\r\n          />\r\n        )}\r\n      </>\r\n    </Modal>\r\n  )\r\n}\r\n","import { List } from 'immutable'\r\n\r\nimport { TableColumn } from 'src/components/Table/types.d'\r\nimport { AddressBookState } from 'src/logic/addressBook/model/addressBook'\r\n\r\nexport const OWNERS_TABLE_NAME_ID = 'name'\r\nexport const OWNERS_TABLE_ADDRESS_ID = 'address'\r\nexport const OWNERS_TABLE_ACTIONS_ID = 'actions'\r\n\r\nexport type OwnerData = { address: string; name: string }\r\n\r\nexport const getOwnerData = (owners: AddressBookState): OwnerData[] => {\r\n  return owners.map((owner) => ({\r\n    [OWNERS_TABLE_NAME_ID]: owner.name,\r\n    [OWNERS_TABLE_ADDRESS_ID]: owner.address,\r\n  }))\r\n}\r\n\r\nexport const generateColumns = (): List<TableColumn> => {\r\n  const nameColumn: TableColumn = {\r\n    id: OWNERS_TABLE_NAME_ID,\r\n    order: false,\r\n    formatTypeSort: (value: string) => value.toLowerCase(),\r\n    disablePadding: false,\r\n    label: 'Name',\r\n    width: 150,\r\n    custom: false,\r\n    align: 'left',\r\n  }\r\n\r\n  const addressColumn: TableColumn = {\r\n    id: OWNERS_TABLE_ADDRESS_ID,\r\n    order: false,\r\n    disablePadding: false,\r\n    label: 'Address',\r\n    custom: false,\r\n    align: 'left',\r\n  }\r\n\r\n  const actionsColumn: TableColumn = {\r\n    id: OWNERS_TABLE_ACTIONS_ID,\r\n    order: false,\r\n    disablePadding: false,\r\n    label: '',\r\n    custom: true,\r\n  }\r\n\r\n  return List([nameColumn, addressColumn, actionsColumn])\r\n}\r\n","import { createStyles, makeStyles } from '@material-ui/core'\r\n\r\nimport { lg, sm } from 'src/theme/variables'\r\n\r\nexport const useStyles = makeStyles(\r\n  createStyles({\r\n    formContainer: {\r\n      minHeight: '420px',\r\n    },\r\n    title: {\r\n      padding: lg,\r\n      paddingBottom: 0,\r\n    },\r\n    annotation: {\r\n      paddingLeft: lg,\r\n    },\r\n    hide: {\r\n      '&:hover': {\r\n        backgroundColor: '#f7f5f5',\r\n      },\r\n      '&:hover $actions': {\r\n        visibility: 'initial',\r\n      },\r\n    },\r\n    actions: {\r\n      justifyContent: 'flex-end',\r\n      visibility: 'hidden',\r\n      minWidth: '100px',\r\n      gap: '16px',\r\n    },\r\n    noBorderBottom: {\r\n      '& > td': {\r\n        borderBottom: 'none',\r\n      },\r\n    },\r\n    editOwnerIcon: {\r\n      cursor: 'pointer',\r\n    },\r\n    replaceOwnerIcon: {\r\n      marginLeft: lg,\r\n      cursor: 'pointer',\r\n    },\r\n    controlsRow: {\r\n      backgroundColor: 'white',\r\n      padding: lg,\r\n      borderRadius: sm,\r\n    },\r\n    removeOwnerIcon: {\r\n      marginLeft: lg,\r\n      cursor: 'pointer',\r\n    },\r\n  }),\r\n)\r\n","import { useState, useEffect, ReactElement } from 'react'\r\nimport { Icon } from '@gnosis.pm/safe-react-components'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport cn from 'classnames'\r\n\r\nimport { AddOwnerModal } from './AddOwnerModal'\r\nimport { EditOwnerModal } from './EditOwnerModal'\r\nimport { RemoveOwnerModal } from './RemoveOwnerModal'\r\nimport { ReplaceOwnerModal } from './ReplaceOwnerModal'\r\nimport { OWNERS_TABLE_ADDRESS_ID, generateColumns, getOwnerData, OwnerData } from './dataFetcher'\r\nimport { useStyles } from './style'\r\n\r\nimport { getExplorerInfo } from 'src/config'\r\nimport ButtonHelper from 'src/components/ButtonHelper'\r\nimport Table from 'src/components/Table'\r\nimport { cellWidth } from 'src/components/Table/TableHead'\r\nimport Block from 'src/components/layout/Block'\r\nimport Button from 'src/components/layout/Button'\r\nimport Col from 'src/components/layout/Col'\r\nimport Hairline from 'src/components/layout/Hairline'\r\nimport Heading from 'src/components/layout/Heading'\r\nimport Paragraph from 'src/components/layout/Paragraph/index'\r\nimport Row from 'src/components/layout/Row'\r\nimport PrefixedEthHashInfo from 'src/components/PrefixedEthHashInfo'\r\nimport { useAnalytics, SETTINGS_EVENTS } from 'src/utils/googleAnalytics'\r\nimport { AddressBookState } from 'src/logic/addressBook/model/addressBook'\r\n\r\nexport const RENAME_OWNER_BTN_TEST_ID = 'rename-owner-btn'\r\nexport const REMOVE_OWNER_BTN_TEST_ID = 'remove-owner-btn'\r\nexport const ADD_OWNER_BTN_TEST_ID = 'add-owner-btn'\r\nexport const REPLACE_OWNER_BTN_TEST_ID = 'replace-owner-btn'\r\nexport const OWNERS_ROW_TEST_ID = 'owners-row'\r\n\r\ntype Props = {\r\n  granted: boolean\r\n  owners: AddressBookState\r\n}\r\n\r\nconst ManageOwners = ({ granted, owners }: Props): ReactElement => {\r\n  const { trackEvent } = useAnalytics()\r\n  const classes = useStyles()\r\n\r\n  const [selectedOwner, setSelectedOwner] = useState<OwnerData | undefined>()\r\n  const [modalsStatus, setModalStatus] = useState({\r\n    showAddOwner: false,\r\n    showRemoveOwner: false,\r\n    showReplaceOwner: false,\r\n    showEditOwner: false,\r\n  })\r\n\r\n  const onShow = (action, row?: OwnerData) => () => {\r\n    setModalStatus((prevState) => ({\r\n      ...prevState,\r\n      [`show${action}`]: !prevState[`show${action}`],\r\n    }))\r\n    if (row) {\r\n      setSelectedOwner(row)\r\n    }\r\n  }\r\n\r\n  const onHide = (action) => () => {\r\n    setModalStatus((prevState) => ({\r\n      ...prevState,\r\n      [`show${action}`]: !Boolean(prevState[`show${action}`]),\r\n    }))\r\n    setSelectedOwner(undefined)\r\n  }\r\n\r\n  useEffect(() => {\r\n    trackEvent(SETTINGS_EVENTS.OWNERS)\r\n  }, [trackEvent])\r\n\r\n  const columns = generateColumns()\r\n  const autoColumns = columns.filter((c) => !c.custom)\r\n  const ownerData = getOwnerData(owners)\r\n\r\n  return (\r\n    <>\r\n      <Block className={classes.formContainer}>\r\n        <Heading className={classes.title} tag=\"h2\">\r\n          Manage Safe Owners\r\n        </Heading>\r\n        <Paragraph className={classes.annotation}>\r\n          Add, remove and replace owners or rename existing owners. Owner names are only stored locally and never shared\r\n          with Gnosis or any third parties.\r\n        </Paragraph>\r\n        <TableContainer>\r\n          <Table\r\n            columns={columns}\r\n            data={ownerData}\r\n            defaultFixed\r\n            defaultOrderBy={OWNERS_TABLE_ADDRESS_ID}\r\n            disablePagination\r\n            label=\"Owners\"\r\n            noBorder\r\n            size={ownerData.length}\r\n          >\r\n            {(sortedData) =>\r\n              sortedData.map((row, index) => (\r\n                <TableRow\r\n                  className={cn(classes.hide, index >= 3 && index === sortedData.size - 1 && classes.noBorderBottom)}\r\n                  data-testid={OWNERS_ROW_TEST_ID}\r\n                  key={index}\r\n                >\r\n                  {autoColumns.map((column: any) => (\r\n                    <TableCell align={column.align} component=\"td\" key={column.id} style={cellWidth(column.width)}>\r\n                      {column.id === OWNERS_TABLE_ADDRESS_ID ? (\r\n                        <Block justify=\"left\">\r\n                          <PrefixedEthHashInfo\r\n                            hash={row[column.id]}\r\n                            showCopyBtn\r\n                            showAvatar\r\n                            explorerUrl={getExplorerInfo(row[column.id])}\r\n                          />\r\n                        </Block>\r\n                      ) : (\r\n                        row[column.id]\r\n                      )}\r\n                    </TableCell>\r\n                  ))}\r\n                  <TableCell component=\"td\">\r\n                    <Row align=\"end\" className={classes.actions}>\r\n                      <ButtonHelper onClick={onShow('EditOwner', row)} dataTestId={RENAME_OWNER_BTN_TEST_ID}>\r\n                        <Icon size=\"sm\" type=\"edit\" color=\"icon\" tooltip=\"Edit owner\" />\r\n                      </ButtonHelper>\r\n                      {granted && (\r\n                        <>\r\n                          <ButtonHelper onClick={onShow('ReplaceOwner', row)} dataTestId={REPLACE_OWNER_BTN_TEST_ID}>\r\n                            <Icon size=\"sm\" type=\"replaceOwner\" color=\"icon\" tooltip=\"Replace owner\" />\r\n                          </ButtonHelper>\r\n                          {ownerData.length > 1 && (\r\n                            <ButtonHelper onClick={onShow('RemoveOwner', row)} dataTestId={REMOVE_OWNER_BTN_TEST_ID}>\r\n                              <Icon size=\"sm\" type=\"delete\" color=\"error\" tooltip=\"Remove owner\" />\r\n                            </ButtonHelper>\r\n                          )}\r\n                        </>\r\n                      )}\r\n                    </Row>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))\r\n            }\r\n          </Table>\r\n        </TableContainer>\r\n      </Block>\r\n      {granted && (\r\n        <>\r\n          <Hairline />\r\n          <Row align=\"end\" className={classes.controlsRow} grow>\r\n            <Col end=\"xs\">\r\n              <Button\r\n                color=\"primary\"\r\n                onClick={onShow('AddOwner')}\r\n                size=\"small\"\r\n                testId={ADD_OWNER_BTN_TEST_ID}\r\n                variant=\"contained\"\r\n              >\r\n                Add new owner\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n      <AddOwnerModal isOpen={modalsStatus.showAddOwner} onClose={onHide('AddOwner')} />\r\n      {selectedOwner && (\r\n        <>\r\n          <RemoveOwnerModal\r\n            isOpen={modalsStatus.showRemoveOwner}\r\n            onClose={onHide('RemoveOwner')}\r\n            owner={selectedOwner}\r\n          />\r\n          <ReplaceOwnerModal\r\n            isOpen={modalsStatus.showReplaceOwner}\r\n            onClose={onHide('ReplaceOwner')}\r\n            owner={selectedOwner}\r\n          />\r\n          <EditOwnerModal isOpen={modalsStatus.showEditOwner} onClose={onHide('EditOwner')} owner={selectedOwner} />\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ManageOwners\r\n"],"sourceRoot":""}