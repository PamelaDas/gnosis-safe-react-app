{"version":3,"sources":["components/layout/Page/index.tsx","components/layout/Page/index.module.scss","../node_modules/@material-ui/core/esm/Divider/Divider.js","routes/welcome/Welcome.tsx"],"names":["cx","classNames","bind","styles","Page","align","children","overflow","className","page","module","exports","Divider","React","props","ref","_props$absolute","absolute","classes","_props$component","component","Component","_props$flexItem","flexItem","_props$light","light","_props$orientation","orientation","_props$role","role","undefined","_props$variant","variant","other","_objectWithoutProperties","_extends","clsx","root","vertical","withStyles","theme","height","margin","border","flexShrink","backgroundColor","palette","divider","position","bottom","left","width","inset","marginLeft","alpha","middle","spacing","marginRight","alignSelf","name","Welcome","size","strong","CardsContainer","StyledCard","CardContentContainer","withoutMargin","CardDescriptionContainer","color","Link","to","OPEN_SAFE_ROUTE","iconType","iconSize","LOAD_SAFE_ROUTE","StyledButtonLabel","styled","div","Card","Text"],"mappings":"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","file":"static/js/60.0309ec17.chunk.js","sourcesContent":["import classNames from 'classnames/bind'\r\n\r\nimport styles from './index.module.scss'\r\n\r\nconst cx = classNames.bind(styles)\r\n\r\nconst Page = ({ align, children, overflow }: any) => (\r\n  <main className={cx(styles.page, align, { overflow })}>{children}</main>\r\n)\r\n\r\nexport default Page\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Page_page__2x8Y1\",\"center\":\"Page_center__3Bcyi\",\"overflow\":\"Page_overflow__2Mdkw\"};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { alpha } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      height: 1,\n      margin: 0,\n      // Reset browser default style.\n      border: 'none',\n      flexShrink: 0,\n      backgroundColor: theme.palette.divider\n    },\n\n    /* Styles applied to the root element if `absolute={true}`. */\n    absolute: {\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `variant=\"inset\"`. */\n    inset: {\n      marginLeft: 72\n    },\n\n    /* Styles applied to the root element if `light={true}`. */\n    light: {\n      backgroundColor: alpha(theme.palette.divider, 0.08)\n    },\n\n    /* Styles applied to the root element if `variant=\"middle\"`. */\n    middle: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      height: '100%',\n      width: 1\n    },\n\n    /* Styles applied to the root element if `flexItem={true}`. */\n    flexItem: {\n      alignSelf: 'stretch',\n      height: 'auto'\n    }\n  };\n};\nvar Divider = /*#__PURE__*/React.forwardRef(function Divider(props, ref) {\n  var _props$absolute = props.absolute,\n      absolute = _props$absolute === void 0 ? false : _props$absolute,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'hr' : _props$component,\n      _props$flexItem = props.flexItem,\n      flexItem = _props$flexItem === void 0 ? false : _props$flexItem,\n      _props$light = props.light,\n      light = _props$light === void 0 ? false : _props$light,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$role = props.role,\n      role = _props$role === void 0 ? Component !== 'hr' ? 'separator' : undefined : _props$role,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'fullWidth' : _props$variant,\n      other = _objectWithoutProperties(props, [\"absolute\", \"classes\", \"className\", \"component\", \"flexItem\", \"light\", \"orientation\", \"role\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'fullWidth' && classes[variant], absolute && classes.absolute, flexItem && classes.flexItem, light && classes.light, orientation === 'vertical' && classes.vertical),\n    role: role,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Absolutely position the element.\n   */\n  absolute: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, a vertical divider will have the correct height when used in flex container.\n   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)\n   */\n  flexItem: PropTypes.bool,\n\n  /**\n   * If `true`, the divider will have a lighter color.\n   */\n  light: PropTypes.bool,\n\n  /**\n   * The divider orientation.\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'inset', 'middle'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDivider'\n})(Divider);","import { ReactElement } from 'react'\r\nimport { Button, Card, Title, Text } from '@gnosis.pm/safe-react-components'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport styled from 'styled-components'\r\n\r\nimport Page from 'src/components/layout/Page'\r\nimport Block from 'src/components/layout/Block'\r\nimport Link from 'src/components/layout/Link'\r\nimport { LOAD_SAFE_ROUTE, OPEN_SAFE_ROUTE } from 'src/routes/routes'\r\n\r\nfunction Welcome(): ReactElement {\r\n  return (\r\n    <Page align=\"center\">\r\n      <Block>\r\n        <Title size=\"md\" strong>\r\n          Welcome to Gnosis Safe.\r\n        </Title>\r\n        <Title size=\"xs\">\r\n          Gnosis Safe is the most trusted platform to manage digital assets. <br /> Here is how to get started:\r\n        </Title>\r\n        <CardsContainer>\r\n          <StyledCard>\r\n            {/* Create Safe */}\r\n            <CardContentContainer>\r\n              <Title size=\"sm\" strong withoutMargin>\r\n                Create Safe\r\n              </Title>\r\n              <CardDescriptionContainer>\r\n                <Text size=\"xl\">Create a new Safe that is controlled by one or multiple owners.</Text>\r\n                <Text size=\"xl\">You will be required to pay a network fee for creating your new Safe.</Text>\r\n              </CardDescriptionContainer>\r\n              <Button size=\"lg\" color=\"primary\" variant=\"contained\" component={Link} to={OPEN_SAFE_ROUTE}>\r\n                <Text size=\"xl\" color=\"white\">\r\n                  + Create new Safe\r\n                </Text>\r\n              </Button>\r\n            </CardContentContainer>\r\n            <Divider orientation=\"vertical\" flexItem />\r\n            <CardContentContainer>\r\n              {/* Load Safe */}\r\n              <Title size=\"sm\" strong withoutMargin>\r\n                Load Existing Safe\r\n              </Title>\r\n              <CardDescriptionContainer>\r\n                <Text size=\"xl\">\r\n                  Already have a Safe or want to access it from a different device? Easily load your Safe using your\r\n                  Safe address.\r\n                </Text>\r\n              </CardDescriptionContainer>\r\n              <Button\r\n                variant=\"bordered\"\r\n                iconType=\"safe\"\r\n                iconSize=\"sm\"\r\n                size=\"lg\"\r\n                color=\"secondary\"\r\n                component={Link}\r\n                to={LOAD_SAFE_ROUTE}\r\n              >\r\n                <StyledButtonLabel size=\"xl\" color=\"secondary\">\r\n                  Add existing Safe\r\n                </StyledButtonLabel>\r\n              </Button>\r\n            </CardContentContainer>\r\n          </StyledCard>\r\n        </CardsContainer>\r\n      </Block>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Welcome\r\n\r\nconst CardsContainer = styled.div`\r\n  display: flex;\r\n  height: 300px;\r\n  max-width: 850px;\r\n`\r\n\r\nconst StyledCard = styled(Card)`\r\n  display: flex;\r\n  flex: 0 1 100%;\r\n  padding: 0;\r\n`\r\n\r\nconst CardContentContainer = styled.div`\r\n  flex: 1 1 50%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 24px;\r\n  align-items: flex-start;\r\n`\r\n\r\nconst StyledButtonLabel = styled(Text)`\r\n  min-width: 130px;\r\n`\r\n\r\nconst CardDescriptionContainer = styled.div`\r\n  margin-top: 16px;\r\n  margin-bottom: auto;\r\n`\r\n"],"sourceRoot":""}