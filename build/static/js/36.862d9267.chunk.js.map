{"version":3,"sources":["routes/safe/components/Balances/utils/setTokenImgToPlaceholder.ts","routes/safe/components/Balances/assets/token_placeholder.svg","assets/icons/qrcode.svg","components/ScanQRModal/style.ts","components/ScanQRModal/index.tsx","components/ScanQRModal/ScanQRWrapper/index.tsx","components/forms/SelectField/index.tsx","components/Table/TableHead.tsx","components/Table/sorting.ts","components/Table/index.tsx","routes/safe/components/Balances/SendModal/screens/AddressBookInput/style.ts","routes/safe/components/Balances/SendModal/screens/AddressBookInput/index.tsx","routes/safe/components/Settings/SpendingLimit/FormFields/ResetTime.tsx","routes/safe/components/Settings/SpendingLimit/style.ts","routes/safe/components/Settings/SpendingLimit/FormFields/Amount.tsx","routes/safe/components/Settings/SpendingLimit/InfoDisplay/AddressInfo.tsx","routes/safe/components/Settings/SpendingLimit/InfoDisplay/ResetTimeInfo.tsx","routes/safe/components/Settings/SpendingLimit/InfoDisplay/TokenInfo.tsx","../node_modules/@material-ui/core/esm/ListItemIcon/ListItemIcon.js","logic/safe/hooks/useTokenInfo.tsx","components/layout/Table/index.tsx","../node_modules/@material-ui/core/esm/Toolbar/Toolbar.js","../node_modules/@material-ui/core/esm/TablePagination/TablePaginationActions.js","../node_modules/@material-ui/core/esm/TablePagination/TablePagination.js","routes/safe/components/Balances/SendModal/screens/SendFunds/TokenSelectField/style.ts","routes/safe/components/Balances/SendModal/screens/SendFunds/TokenSelectField/index.tsx","routes/safe/components/Settings/SpendingLimit/RemoveLimitModal.tsx","routes/safe/components/Settings/SpendingLimit/LimitsTable/dataFetcher.ts","logic/hooks/useWindowDimensions.tsx","routes/safe/components/Settings/SpendingLimit/LimitsTable/SpentVsAmount.tsx","routes/safe/components/Settings/SpendingLimit/LimitsTable/index.tsx","routes/safe/components/Settings/SpendingLimit/FormFields/Beneficiary.tsx","routes/safe/components/Settings/SpendingLimit/FormFields/Token.tsx","routes/safe/components/Settings/SpendingLimit/NewLimitModal/Create.tsx","routes/safe/components/Settings/SpendingLimit/NewLimitModal/Review.tsx","routes/safe/components/Settings/SpendingLimit/NewLimitModal/index.tsx","routes/safe/components/Settings/SpendingLimit/assets/asset-amount.svg","routes/safe/components/Settings/SpendingLimit/assets/beneficiary.svg","routes/safe/components/Settings/SpendingLimit/assets/time.svg","routes/safe/components/Settings/SpendingLimit/NewLimitSteps.tsx","routes/safe/components/Settings/SpendingLimit/index.tsx"],"names":["setImageToPlaceholder","event","img","currentTarget","test","src","TokenPlaceholder","styles","createStyles","heading","padding","lg","justifyContent","maxHeight","boxSizing","loaderContainer","width","height","close","color","secondaryText","detailsContainer","backgroundColor","background","buttonRow","button","marginLeft","sm","useStyles","makeStyles","ScanQRModal","isOpen","onClose","onScan","classes","useState","fileUploadModalOpen","setFileUploadModalOpen","error","setError","cameraBlocked","setCameraBlocked","scannerRef","React","openImageDialog","current","useEffect","onFileScannedResolve","successData","console","name","Modal","description","handleClose","open","title","Row","align","className","grow","Paragraph","noMargin","size","IconButton","disableRipple","onClick","Hairline","Col","layout","middle","Block","margin","legacyMode","onError","err","data","ref","style","facingMode","Button","minWidth","variant","qrCodeBtn","cursor","ScanQRWrapper","handleScan","testId","qrModalOpen","setQrModalOpen","closeQrModal","Img","alt","role","QRIcon","value","SelectInput","disableError","formControlProps","input","onChange","restInput","label","meta","renderValue","rest","showError","submitError","dirtySinceLastSubmit","touched","inputProps","htmlFor","cellWidth","maxWidth","GnoTableHead","changeSort","property","orderAttr","onSort","props","this","columns","order","orderBy","map","column","disablePadding","sortDirection","id","static","active","direction","desc","a","b","orderProp","format","root","borderTopRightRadius","borderTopLeftRadius","boxShadow","selectRoot","lineHeight","xxl","white","paginationRoot","marginBottom","borderBottomRightRadius","borderBottomLeftRadius","loader","backProps","nextProps","GnoTable","newOrderBy","state","defaultOrder","newOrder","setState","fixed","getEmptyStyle","display","alignItems","handleChangePage","e","page","handleChangeRowsPerPage","rowsPerPage","Number","target","undefined","defaultOrderBy","find","children","defaultFixed","defaultRowsPerPage","disableLoadingOnEmptyTable","disablePagination","noBorder","orderByParam","orderParam","displayRows","fixedParam","paginationClasses","columnSort","sortedData","dataArray","cmp","fixedElems","filter","elem","List","stabilizedThis","el","index","sortedElems","sort","concat","stableSort","getSorting","formatTypeSort","slice","isEmpty","Table","TableHead","TableBody","TablePagination","backIconButtonProps","component","count","nextIconButtonProps","onPageChange","onRowsPerPageChange","rowsPerPageOptions","defaultProps","withStyles","useTextFieldLabelStyle","overflow","borderRadius","fontSize","useTextFieldInputStyle","BaseAddressBookInput","addressBookEntries","fieldMutator","setIsValidAddress","setSelectedEntry","setValidationText","validationText","networkId","useSelector","currentChainId","updateAddressInfo","addressEntry","address","validateAddress","fullAddress","addressErrorMessage","mustBeEthereumAddress","parsePrefixedAddress","checkedAddr","checksumAddress","filteredEntries","filterAddressEntries","inputValue","length","onInputChange","_","reason","normalizedValue","trimSpaces","hasFeature","FEATURES","DOMAIN_LOOKUP","isValidEnsName","isValidCryptoDomainName","getAddressFromDomain","logError","Errors","_101","message","validatedAddress","chainId","labelStyles","inputStyles","Autocomplete","closeIcon","openOnFocus","filterOptions","freeSolo","options","renderInput","params","autoFocus","fullWidth","InputLabelProps","shrink","required","InputProps","getOptionLabel","renderOption","PrefixedEthHashInfo","hash","showAvatar","flexGrow","AddressBookInput","currentNetworkAddressBook","errorMsg","ContractsAddressBookInput","setFilteredEntries","filterContractAddresses","filterContractAddressBookEntries","filteredADBK","onSetSelectedEntry","selectedEntry","mustBeEthereumContractAddress","contractAddressErrorMessage","SpendingLimitRadioButtons","styled","RadioButtons","theme","colors","primary","StyledSwitch","icon","hexToRgb","primaryLight","SafeRadioButtons","initialValue","groupName","onRadioChange","Switch","control","type","render","checked","ResetTimeLabel","div","ResetTimeToggle","ResetTimeOptions","RESET_TIME_OPTIONS","RINKEBY_RESET_TIME_OPTIONS","getResetTimeOptions","getChainName","toLowerCase","ResetTime","withResetTime","useField","subscription","resetTimeOptions","switchExplanation","paddingBottom","hide","visibility","actions","noBorderBottom","borderBottom","annotation","paddingLeft","ownersText","fontColor","container","actionButton","fontWeight","boldFont","marginRight","left","bottom","borderTop","border","modifyBtn","xl","smallFontSize","removeModuleIcon","modalHeading","modalContainer","minHeight","modalManage","modalClose","modalButtonRow","modalButtonRemove","modalName","textOverflow","modalUserName","whiteSpace","modalOwner","md","modalUser","modalDescription","modalOpen","amountInput","Field","GnoField","AmountInput","TextField","SRCTextField","Amount","tokenAddress","visited","selectedTokenRecord","extendedSafeTokensSelector","token","validate","composeValidators","mustBeFloat","minValue","endAdornment","symbol","AddressInfo","logoUri","addessBookName","addressBookEntryName","strong","sameString","ADDRESS_BOOK_DEFAULT_NAME","showCopyBtn","textSize","explorerUrl","getExplorerInfo","customAvatar","ResetTimeInfo","iconSize","iconType","text","StyledImage","StyledImageName","TokenInfo","amount","ListItemIcon","other","_objectWithoutProperties","context","ListContext","_extends","clsx","alignItemsFlexStart","palette","action","flexShrink","marginTop","useTokenInfo","tokens","safeKnownCoins","sameAddress","Toolbar","_props$component","Component","_props$disableGutters","disableGutters","_props$variant","gutters","position","_defineProperty","spacing","paddingRight","breakpoints","up","regular","mixins","toolbar","dense","_ref","KeyboardArrowRight","_ref2","KeyboardArrowLeft","_ref3","_ref4","TablePaginationActions","_props$onChangePage","onChangePage","_props$onPageChange","useTheme","disabled","Math","ceil","defaultLabelDisplayedRows","from","to","defaultRowsPerPageOptions","colSpan","_props$ActionsCompone","ActionsComponent","_props$backIconButton","backIconButtonText","colSpanProp","TableCell","_props$labelDisplayed","labelDisplayedRows","_props$labelRowsPerPa","labelRowsPerPage","_props$nextIconButton","nextIconButtonText","onChangeRowsPerPageProp","onChangeRowsPerPage","onRowsPerPageChangeProp","_props$rowsPerPageOpt","_props$SelectProps","SelectProps","selectId","useId","labelId","MenuItemComponent","native","MenuItem","spacer","Typography","caption","Select","select","selectIcon","InputBase","rowsPerPageOption","menuItem","key","min","typography","pxToRem","flex","textAlign","textAlignLast","useSelectedTokenStyles","tokenData","tokenImage","useSelectStyles","selectMenu","SelectedToken","ListItemText","secondary","formatAmount","balance","tokenBalance","toString","TokenSelectField","isValid","tokenClasses","SelectField","displayEmpty","RemoveLimitModal","spendingLimit","tokenInfo","spent","safeAddress","extractSafeAddress","txData","setTxData","dispatch","useDispatch","manualSafeTxGas","setManualSafeTxGas","manualGasPrice","setManualGasPrice","manualGasLimit","setManualGasLimit","beneficiary","getDeleteAllowanceTxData","useEstimateTransactionGas","txRecipient","SPENDING_LIMIT_MODULE_ADDRESS","txAmount","safeTxGas","gasCostFormatted","txEstimationExecutionStatus","isExecution","isOffChainSignature","isCreation","gasLimit","gasEstimation","gasPriceFormatted","useEstimationStatus","buttonStatus","resetTimeLabel","resetTime","resetTimeMin","confirmButtonText","ButtonStatus","LOADING","EstimationStatus","EditableTxParameters","ethGasLimit","ethGasPrice","closeEditModalCallback","txParameters","oldGasPrice","newGasPrice","oldSafeTxGas","newSafeTxGas","toggleEditMode","ModalHeader","Body","fromTokenUnit","decimals","TxParametersDetail","onEdit","isTransactionCreation","isTransactionExecution","ReviewInfoText","safeNonce","Footer","withoutBorder","Buttons","cancelButtonProps","confirmButtonProps","createTransaction","valueInWei","txNonce","ethParameters","notifiedTransaction","TX_NOTIFICATION_TYPES","REMOVE_SPENDING_LIMIT_TX","removeSelectedSpendingLimit","status","SPENDING_LIMIT_TABLE_BENEFICIARY_ID","SPENDING_LIMIT_TABLE_SPENT_ID","SPENDING_LIMIT_TABLE_RESET_TIME_ID","getWindowDimensions","window","innerWidth","innerHeight","SpentVsAmount","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useWindowDimensions","showIcon","useMemo","spentInfo","formattedSpent","useFormattedAmounts","LimitsTable","granted","grantedSelector","beneficiaryColumn","custom","spentColumn","resetColumn","actionsColumn","generateColumns","autoColumns","selectedRow","setSelectedRow","TableContainer","row","cn","tabIndex","columnId","rowElement","relativeTime","ButtonHelper","tooltip","BeneficiaryInput","BeneficiaryScan","Beneficiary","initialValues","useFormState","mutators","useForm","addressErrorMsg","setAddressErrorMsg","pristine","setPristine","setBeneficiary","addressBook","onKeyDown","scannedAddress","startsWith","replace","scannedName","TokenInput","Token","FormContainer","formMutators","args","utils","changeValue","canReview","invalid","submitting","dirtyFieldsSinceLastSubmit","values","Create","onCancel","onReview","subTitle","GnoForm","onSubmit","calculateSpendingLimitsTxData","safeVersion","spendingLimits","existentSpendingLimit","txToken","modules","transactions","isModuleEnabled","push","enableSpendingLimitModuleMultiSendTx","some","delegate","addSpendingLimitBeneficiaryMultiSendTx","getResetSpendingLimitTx","spendingLimitTxData","startTime","currentMinutes","spendingLimitArgs","spendingLimitInWei","toTokenUnit","resetBaseMin","setSpendingLimitTx","encodedTxForMultisend","setSpendingLimitMultiSendTx","spendingLimitMultiSendTx","ReviewSpendingLimits","onBack","currentSafe","currentVersion","currentDelegate","useExistentSpendingLimit","estimateGasArgs","setEstimateGasArgs","operation","gasPrice","safeModules","pair","previousResetTime","center","makeToken","step","CREATE","ethGasPriceInGWei","advancedOptionsTxParameters","handleSubmit","REVIEW","newLimitModalReducer","newState","NewLimitModal","initialStep","useReducer","create","useCallback","review","useNewLimitModal","handleReview","StepWrapper","Step","StepsLine","NewLimitSteps","AssetAmount","Time","InfoText","Text","SpendingLimit","allowances","currentSafeSpendingLimits","spendingLimitData","lastResetMin","showNewSpendingLimitModal","setShowNewSpendingLimitModal","withoutMargin","end"],"mappings":"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","file":"static/js/36.862d9267.chunk.js","sourcesContent":["import { SyntheticEvent } from 'react'\r\n\r\nimport TokenPlaceholder from 'src/routes/safe/components/Balances/assets/token_placeholder.svg'\r\n\r\nexport const setImageToPlaceholder = (event: SyntheticEvent<HTMLImageElement, Event>): void => {\r\n  const img = event.currentTarget\r\n  if (!/token_placeholder/.test(img.src)) {\r\n    img.src = TokenPlaceholder\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/token_placeholder.c1abe466.svg\";","export default __webpack_public_path__ + \"static/media/qrcode.f0b048aa.svg\";","import { background, lg, secondaryText, sm } from 'src/theme/variables'\r\nimport { createStyles } from '@material-ui/core'\r\n\r\nexport const styles = createStyles({\r\n  heading: {\r\n    padding: lg,\r\n    justifyContent: 'space-between',\r\n    maxHeight: '75px',\r\n    boxSizing: 'border-box',\r\n  },\r\n  loaderContainer: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  close: {\r\n    height: '25px',\r\n    width: '25px',\r\n    color: secondaryText,\r\n  },\r\n  detailsContainer: {\r\n    backgroundColor: background,\r\n    maxHeight: '450px',\r\n  },\r\n  buttonRow: {\r\n    height: '84px',\r\n    justifyContent: 'center',\r\n  },\r\n  button: {\r\n    '&:last-child': {\r\n      marginLeft: sm,\r\n    },\r\n  },\r\n})\r\n","import IconButton from '@material-ui/core/IconButton'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Close from '@material-ui/icons/Close'\r\nimport * as React from 'react'\r\nimport QrReader from 'react-qr-reader'\r\n\r\nimport { styles } from './style'\r\n\r\nimport Modal from 'src/components/Modal'\r\nimport Block from 'src/components/layout/Block'\r\nimport Button from 'src/components/layout/Button'\r\nimport Col from 'src/components/layout/Col'\r\nimport Hairline from 'src/components/layout/Hairline'\r\nimport Paragraph from 'src/components/layout/Paragraph'\r\nimport Row from 'src/components/layout/Row'\r\nimport { useEffect, useState } from 'react'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\ntype Props = {\r\n  isOpen: boolean\r\n  onClose: () => void\r\n  onScan: (value: string) => void\r\n}\r\n\r\nexport const ScanQRModal = ({ isOpen, onClose, onScan }: Props): React.ReactElement => {\r\n  const classes = useStyles()\r\n  const [fileUploadModalOpen, setFileUploadModalOpen] = useState<boolean>(false)\r\n  const [error, setError] = useState<string | null>(null)\r\n  const [cameraBlocked, setCameraBlocked] = useState<boolean>(false)\r\n  const scannerRef: any = React.createRef()\r\n  const openImageDialog = React.useCallback(() => {\r\n    scannerRef.current.openImageDialog()\r\n  }, [scannerRef])\r\n\r\n  useEffect(() => {\r\n    if (!fileUploadModalOpen && cameraBlocked && !error) {\r\n      setFileUploadModalOpen(true)\r\n      openImageDialog()\r\n    }\r\n  }, [cameraBlocked, openImageDialog, fileUploadModalOpen, setFileUploadModalOpen, error])\r\n\r\n  const onFileScannedResolve = (error: Error | null, successData: string | null) => {\r\n    if (error) {\r\n      console.error('QR code error', error)\r\n\r\n      if (error.name === 'NotAllowedError' || error.name === 'PermissionDismissedError') {\r\n        setCameraBlocked(true)\r\n        setFileUploadModalOpen(false)\r\n      } else {\r\n        setError('The QR could not be read')\r\n      }\r\n      return\r\n    }\r\n\r\n    if (successData) {\r\n      onScan(successData)\r\n    } else if (cameraBlocked) {\r\n      setError('The QR could not be read')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal description=\"Receive Tokens Form\" handleClose={onClose} open={isOpen} title=\"Receive Tokens\">\r\n      <Row align=\"center\" className={classes.heading} grow>\r\n        <Paragraph noMargin size=\"xl\">\r\n          Scan QR\r\n        </Paragraph>\r\n        <IconButton disableRipple onClick={onClose}>\r\n          <Close className={classes.close} />\r\n        </IconButton>\r\n      </Row>\r\n      <Hairline />\r\n      <Col className={classes.detailsContainer} layout=\"column\" middle=\"xs\">\r\n        {error && (\r\n          <Block padding=\"md\" margin=\"md\">\r\n            {error}\r\n          </Block>\r\n        )}\r\n        <QrReader\r\n          legacyMode={cameraBlocked}\r\n          onError={(err: Error) => onFileScannedResolve(err, null)}\r\n          onScan={(data: string) => onFileScannedResolve(null, data)}\r\n          ref={scannerRef}\r\n          style={{ width: '400px', height: '400px' }}\r\n          facingMode=\"user\"\r\n        />\r\n      </Col>\r\n      <Hairline />\r\n      <Row align=\"center\" className={classes.buttonRow}>\r\n        <Button className={classes.button} color=\"secondary\" minWidth={154} onClick={onClose}>\r\n          Close\r\n        </Button>\r\n        <Button\r\n          className={classes.button}\r\n          color=\"primary\"\r\n          minWidth={154}\r\n          onClick={() => {\r\n            setCameraBlocked(true)\r\n            setError(null)\r\n            setFileUploadModalOpen(false)\r\n          }}\r\n          variant=\"contained\"\r\n        >\r\n          Upload an image\r\n        </Button>\r\n      </Row>\r\n    </Modal>\r\n  )\r\n}\r\n","import { makeStyles } from '@material-ui/core/styles'\r\nimport { ReactElement, useState } from 'react'\r\n\r\nimport QRIcon from 'src/assets/icons/qrcode.svg'\r\nimport { ScanQRModal } from 'src/components/ScanQRModal'\r\nimport Img from 'src/components/layout/Img'\r\n\r\nconst useStyles = makeStyles({\r\n  qrCodeBtn: {\r\n    cursor: 'pointer',\r\n  },\r\n})\r\n\r\ntype Props = {\r\n  handleScan: (dataResult: string, closeQrModal: () => void) => void\r\n  testId?: string\r\n}\r\n\r\nexport const ScanQRWrapper = ({ handleScan, testId }: Props): ReactElement => {\r\n  const classes = useStyles()\r\n  const [qrModalOpen, setQrModalOpen] = useState(false)\r\n\r\n  const openQrModal = () => {\r\n    setQrModalOpen(true)\r\n  }\r\n\r\n  const closeQrModal = () => {\r\n    setQrModalOpen(false)\r\n  }\r\n\r\n  const onScanFinished = (value: string) => {\r\n    handleScan(value, closeQrModal)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Img\r\n        alt=\"Scan QR\"\r\n        className={classes.qrCodeBtn}\r\n        height={20}\r\n        onClick={() => openQrModal()}\r\n        role=\"button\"\r\n        src={QRIcon}\r\n        testId={testId || 'qr-icon'}\r\n      />\r\n      {qrModalOpen && <ScanQRModal isOpen={qrModalOpen} onClose={closeQrModal} onScan={onScanFinished} />}\r\n    </>\r\n  )\r\n}\r\n","import FormControl from '@material-ui/core/FormControl'\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport Select from '@material-ui/core/Select'\r\n\r\nconst style = {\r\n  minWidth: '100%',\r\n}\r\n\r\nconst SelectInput = ({\r\n  classes,\r\n  disableError,\r\n  formControlProps,\r\n  input: { name, onChange, value, ...restInput },\r\n  label,\r\n  meta,\r\n  renderValue,\r\n  ...rest\r\n}) => {\r\n  const showError = ((meta.submitError && !meta.dirtySinceLastSubmit) || meta.error) && meta.touched && !disableError\r\n  const inputProps = {\r\n    ...restInput,\r\n    name,\r\n  }\r\n\r\n  return (\r\n    <FormControl {...formControlProps} error={showError} style={style}>\r\n      <InputLabel htmlFor={name}>{label}</InputLabel>\r\n      <Select\r\n        classes={classes}\r\n        inputProps={inputProps}\r\n        onChange={onChange}\r\n        renderValue={renderValue}\r\n        value={value}\r\n        {...rest}\r\n      />\r\n      {showError && <FormHelperText>{meta.error || meta.submitError}</FormHelperText>}\r\n    </FormControl>\r\n  )\r\n}\r\n\r\nexport default SelectInput\r\n","import TableCell from '@material-ui/core/TableCell'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\r\nimport * as React from 'react'\r\n\r\ninterface CellWidth {\r\n  maxWidth: string\r\n}\r\n\r\nexport const cellWidth = (width?: string | number): CellWidth | undefined => {\r\n  if (!width) {\r\n    return undefined\r\n  }\r\n\r\n  return {\r\n    maxWidth: `${width}px`,\r\n  }\r\n}\r\n\r\nclass GnoTableHead extends React.PureComponent<any> {\r\n  changeSort =\r\n    (property: string, orderAttr: string): (() => void) =>\r\n    () => {\r\n      const { onSort } = this.props\r\n\r\n      onSort(property, orderAttr)\r\n    }\r\n\r\n  render(): React.ReactElement {\r\n    const { columns, order, orderBy } = this.props\r\n\r\n    return (\r\n      <TableHead>\r\n        <TableRow>\r\n          {columns.map((column) => (\r\n            <TableCell\r\n              align={column.align}\r\n              key={column.id}\r\n              padding={column.disablePadding ? 'none' : 'normal'}\r\n              sortDirection={orderBy === column.id ? order : false}\r\n            >\r\n              {column.static ? (\r\n                <div style={column.style}>{column.label}</div>\r\n              ) : (\r\n                <TableSortLabel\r\n                  active={orderBy === column.id}\r\n                  direction={order}\r\n                  onClick={this.changeSort(column.id, column.order)}\r\n                  style={column.style}\r\n                >\r\n                  {column.label}\r\n                </TableSortLabel>\r\n              )}\r\n            </TableCell>\r\n          ))}\r\n        </TableRow>\r\n      </TableHead>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GnoTableHead\r\n","import { List } from 'immutable'\r\n\r\nexport const FIXED = 'fixed'\r\n\r\nexport const buildOrderFieldFrom = (attr: string): string => `${attr}Order`\r\n\r\nconst desc = (\r\n  a: string,\r\n  b: string,\r\n  orderBy: string,\r\n  orderProp: boolean,\r\n  format: (value: string | number) => string | number,\r\n): number => {\r\n  const order = orderProp ? buildOrderFieldFrom(orderBy) : orderBy\r\n\r\n  if (format(b[order]) < format(a[order])) {\r\n    return -1\r\n  }\r\n  if (format(b[order]) > format(a[order])) {\r\n    return 1\r\n  }\r\n\r\n  return 0\r\n}\r\n\r\n// eslint-disable-next-line\r\nexport const stableSort = (dataArray, cmp, fixed) => {\r\n  const fixedElems = fixed ? dataArray.filter((elem) => elem.fixed) : List([])\r\n  const data = fixed ? dataArray.filter((elem) => !elem[FIXED]) : dataArray\r\n  let stabilizedThis = data.map((el, index) => [el, index])\r\n\r\n  stabilizedThis = stabilizedThis.sort((a, b) => {\r\n    const order = cmp(a[0], b[0])\r\n\r\n    if (order !== 0) {\r\n      return order\r\n    }\r\n\r\n    return a[1] - b[1]\r\n  })\r\n\r\n  const sortedElems = stabilizedThis.map((el) => el[0])\r\n\r\n  return fixedElems.concat(sortedElems)\r\n}\r\n\r\nexport const getSorting = (\r\n  order: 'desc' | 'asc',\r\n  orderBy: string,\r\n  orderProp: boolean,\r\n  format: (value: string | number) => string | number = (value) => value,\r\n): ((a: string, b: string) => number) =>\r\n  order === 'desc'\r\n    ? (a, b) => desc(a, b, orderBy, orderProp, format)\r\n    : (a, b) => -desc(a, b, orderBy, orderProp, format)\r\n","import { Loader } from '@gnosis.pm/safe-react-components'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TablePagination from '@material-ui/core/TablePagination'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport * as React from 'react'\r\n\r\nimport TableHead from 'src/components/Table/TableHead'\r\nimport { getSorting, stableSort } from 'src/components/Table/sorting'\r\nimport Row from 'src/components/layout/Row'\r\nimport { sm, xxl } from 'src/theme/variables'\r\n\r\nconst styles = {\r\n  root: {\r\n    backgroundColor: 'white',\r\n    borderTopRightRadius: sm,\r\n    borderTopLeftRadius: sm,\r\n    boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\r\n  },\r\n  selectRoot: {\r\n    lineHeight: xxl,\r\n    backgroundColor: 'white',\r\n  },\r\n  white: {\r\n    backgroundColor: 'white',\r\n  },\r\n  paginationRoot: {\r\n    backgroundColor: 'white',\r\n    boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\r\n    marginBottom: '90px',\r\n    borderBottomRightRadius: sm,\r\n    borderBottomLeftRadius: sm,\r\n  },\r\n  loader: {\r\n    boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\r\n  },\r\n}\r\n\r\nconst FIXED_EMPTY_HEIGHT = 255\r\n\r\nconst backProps = {\r\n  'aria-label': 'Previous Page',\r\n}\r\n\r\nconst nextProps = {\r\n  'aria-label': 'Next Page',\r\n}\r\n\r\nclass GnoTable extends React.Component<any, any> {\r\n  static defaultProps = {\r\n    defaultOrder: 'asc',\r\n    disablePagination: false,\r\n    defaultRowsPerPage: 5,\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      page: 0,\r\n      order: undefined,\r\n      orderBy: undefined,\r\n      fixed: undefined,\r\n      orderProp: false,\r\n      rowsPerPage: undefined,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { columns, defaultOrderBy } = this.props\r\n\r\n    if (defaultOrderBy && columns) {\r\n      const defaultOrderCol = columns.find(({ id }) => id === defaultOrderBy)\r\n\r\n      if (defaultOrderCol.order) {\r\n        this.setState({\r\n          orderProp: true,\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  onSort = (newOrderBy, orderProp) => {\r\n    const { order, orderBy } = this.state\r\n    const { defaultOrder } = this.props\r\n    let newOrder = 'desc'\r\n\r\n    // if table was previously sorted by the user\r\n    if (order && orderBy === newOrderBy && order === 'desc') {\r\n      newOrder = 'asc'\r\n    } else if (!order && defaultOrder === 'desc') {\r\n      // if it was not sorted and defaultOrder is used\r\n      newOrder = 'asc'\r\n    }\r\n\r\n    this.setState(() => ({\r\n      order: newOrder,\r\n      orderBy: newOrderBy,\r\n      orderProp,\r\n      fixed: false,\r\n    }))\r\n  }\r\n\r\n  getEmptyStyle = () => ({\r\n    height: `calc(100vh - ${FIXED_EMPTY_HEIGHT}px)`,\r\n    borderTopRightRadius: sm,\r\n    borderTopLeftRadius: sm,\r\n    backgroundColor: 'white',\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  })\r\n\r\n  handleChangePage = (e, page) => {\r\n    this.setState({ page })\r\n  }\r\n\r\n  handleChangeRowsPerPage = (e) => {\r\n    const rowsPerPage = Number(e.target.value)\r\n    this.setState({ rowsPerPage })\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      children,\r\n      classes,\r\n      columns,\r\n      data,\r\n      defaultFixed,\r\n      defaultOrder,\r\n      defaultOrderBy,\r\n      defaultRowsPerPage,\r\n      disableLoadingOnEmptyTable,\r\n      disablePagination,\r\n      label,\r\n      noBorder,\r\n      size,\r\n    }: any = this.props\r\n    const { fixed, order, orderBy, orderProp, page, rowsPerPage } = this.state\r\n    const orderByParam = orderBy || defaultOrderBy\r\n    const orderParam = order || defaultOrder\r\n    const displayRows = rowsPerPage || defaultRowsPerPage\r\n    const fixedParam = typeof fixed !== 'undefined' ? fixed : !!defaultFixed\r\n    const paginationClasses = {\r\n      selectRoot: classes.selectRoot,\r\n      root: !noBorder && classes.paginationRoot,\r\n      input: classes.white,\r\n    }\r\n    const columnSort = columns.find((column) => column.id === orderByParam)\r\n    let sortedData = stableSort(\r\n      data,\r\n      getSorting(orderParam, orderByParam, orderProp, columnSort?.formatTypeSort),\r\n      fixedParam,\r\n    )\r\n\r\n    if (!disablePagination) {\r\n      sortedData = sortedData.slice(page * displayRows, page * displayRows + displayRows)\r\n    }\r\n\r\n    const isEmpty = size === 0 && !disableLoadingOnEmptyTable\r\n\r\n    return (\r\n      <>\r\n        {!isEmpty && (\r\n          <Table aria-labelledby={label} className={noBorder ? '' : classes.root}>\r\n            <TableHead columns={columns} onSort={this.onSort} order={order} orderBy={orderByParam} />\r\n            <TableBody>{children(sortedData)}</TableBody>\r\n          </Table>\r\n        )}\r\n        {isEmpty && (\r\n          <Row className={classes.loader} style={this.getEmptyStyle()}>\r\n            <Loader size=\"sm\" />\r\n          </Row>\r\n        )}\r\n        {!disablePagination && (\r\n          <TablePagination\r\n            backIconButtonProps={backProps}\r\n            classes={paginationClasses}\r\n            component=\"div\"\r\n            count={size}\r\n            nextIconButtonProps={nextProps}\r\n            onPageChange={this.handleChangePage}\r\n            onRowsPerPageChange={this.handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={displayRows}\r\n            rowsPerPageOptions={[5, 10, 25, 50, 100]}\r\n          />\r\n        )}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles as any)(GnoTable)\r\n","import { createStyles, makeStyles } from '@material-ui/core'\r\n\r\nexport const useTextFieldLabelStyle = makeStyles(\r\n  createStyles({\r\n    root: {\r\n      overflow: 'hidden',\r\n      borderRadius: 4,\r\n      fontSize: '15px',\r\n      width: '500px',\r\n    },\r\n  }),\r\n)\r\n\r\nexport const useTextFieldInputStyle = makeStyles(\r\n  createStyles({\r\n    root: {\r\n      fontSize: '14px',\r\n      width: '420px',\r\n    },\r\n  }),\r\n)\r\n","import MuiTextField from '@material-ui/core/TextField'\r\nimport Autocomplete, { AutocompleteProps } from '@material-ui/lab/Autocomplete'\r\nimport { Dispatch, ReactElement, SetStateAction, useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport { mustBeEthereumAddress, mustBeEthereumContractAddress } from 'src/components/forms/validator'\r\nimport { AddressBookEntry } from 'src/logic/addressBook/model/addressBook'\r\nimport { currentNetworkAddressBook } from 'src/logic/addressBook/store/selectors'\r\nimport { filterContractAddressBookEntries, filterAddressEntries } from 'src/logic/addressBook/utils'\r\nimport { isValidEnsName, isValidCryptoDomainName } from 'src/logic/wallets/ethAddresses'\r\nimport { getAddressFromDomain } from 'src/logic/wallets/getWeb3'\r\nimport {\r\n  useTextFieldInputStyle,\r\n  useTextFieldLabelStyle,\r\n} from 'src/routes/safe/components/Balances/SendModal/screens/AddressBookInput/style'\r\nimport PrefixedEthHashInfo from 'src/components/PrefixedEthHashInfo'\r\nimport { trimSpaces } from 'src/utils/strings'\r\nimport { Errors, logError } from 'src/logic/exceptions/CodedException'\r\nimport { checksumAddress } from 'src/utils/checksumAddress'\r\nimport { currentChainId } from 'src/logic/config/store/selectors'\r\nimport { FEATURES } from '@gnosis.pm/safe-react-gateway-sdk'\r\nimport { parsePrefixedAddress } from 'src/utils/prefixedAddress'\r\nimport { hasFeature } from 'src/logic/safe/utils/safeVersion'\r\n\r\nexport interface AddressBookProps {\r\n  fieldMutator: (address: string) => void\r\n  label?: string\r\n  pristine?: boolean\r\n  recipientAddress?: string\r\n  errorMsg?: string\r\n  setIsValidAddress: (valid: boolean) => void\r\n  setSelectedEntry: Dispatch<SetStateAction<{ address: string; name: string }> | null>\r\n}\r\n\r\nexport interface BaseAddressBookInputProps extends AddressBookProps {\r\n  addressBookEntries: AddressBookEntry[]\r\n  setSelectedEntry: (args: { address: string; name: string } | null) => void\r\n  setValidationText: Dispatch<SetStateAction<string | undefined>>\r\n  validationText: string | undefined\r\n}\r\n\r\nconst BaseAddressBookInput = ({\r\n  addressBookEntries,\r\n  fieldMutator,\r\n  label = 'Recipient',\r\n  setIsValidAddress,\r\n  setSelectedEntry,\r\n  setValidationText,\r\n  validationText,\r\n}: BaseAddressBookInputProps): ReactElement => {\r\n  const networkId = useSelector(currentChainId)\r\n\r\n  const updateAddressInfo = (addressEntry: AddressBookEntry): void => {\r\n    setSelectedEntry(addressEntry)\r\n    fieldMutator(addressEntry.address)\r\n  }\r\n\r\n  const validateAddress = (fullAddress: string): AddressBookEntry | string | undefined => {\r\n    const addressErrorMessage = mustBeEthereumAddress(fullAddress)\r\n    setIsValidAddress(!addressErrorMessage)\r\n\r\n    if (addressErrorMessage) {\r\n      setValidationText(addressErrorMessage)\r\n      return\r\n    }\r\n\r\n    // Automatically checksum valid addresses\r\n    const { address } = parsePrefixedAddress(fullAddress)\r\n    const checkedAddr = checksumAddress(address) || address\r\n    const filteredEntries = filterAddressEntries(addressBookEntries, { inputValue: checkedAddr })\r\n    return filteredEntries.length === 1 ? filteredEntries[0] : checkedAddr\r\n  }\r\n\r\n  const onChange: AutocompleteProps<AddressBookEntry, false, false, true>['onChange'] = (_, value, reason) => {\r\n    switch (reason) {\r\n      case 'select-option': {\r\n        const { address, name, chainId } = value as AddressBookEntry\r\n        updateAddressInfo({ address, name, chainId })\r\n        break\r\n      }\r\n    }\r\n  }\r\n\r\n  const onInputChange: AutocompleteProps<AddressBookEntry, false, false, true>['onInputChange'] = async (\r\n    _,\r\n    value,\r\n    reason,\r\n  ) => {\r\n    switch (reason) {\r\n      case 'input': {\r\n        const normalizedValue = trimSpaces(value)\r\n\r\n        if (!normalizedValue) {\r\n          break\r\n        }\r\n\r\n        // ENS-enabled resolve/validation\r\n        if (\r\n          hasFeature(FEATURES.DOMAIN_LOOKUP) &&\r\n          (isValidEnsName(normalizedValue) || isValidCryptoDomainName(normalizedValue))\r\n        ) {\r\n          let address = ''\r\n          try {\r\n            address = await getAddressFromDomain(normalizedValue)\r\n          } catch (err) {\r\n            logError(Errors._101, err.message)\r\n          }\r\n\r\n          const validatedAddress = validateAddress(address)\r\n\r\n          if (!validatedAddress) {\r\n            fieldMutator('')\r\n            break\r\n          }\r\n\r\n          const newEntry =\r\n            typeof validatedAddress === 'string'\r\n              ? {\r\n                  address,\r\n                  name: normalizedValue,\r\n                  chainId: networkId,\r\n                }\r\n              : validatedAddress\r\n\r\n          updateAddressInfo(newEntry)\r\n          break\r\n        }\r\n\r\n        // ETH address validation\r\n        const validatedAddress = validateAddress(normalizedValue)\r\n\r\n        if (!validatedAddress) {\r\n          fieldMutator('')\r\n          break\r\n        }\r\n\r\n        const newEntry =\r\n          typeof validatedAddress === 'string'\r\n            ? {\r\n                address: validatedAddress,\r\n                name: '',\r\n                chainId: networkId,\r\n              }\r\n            : validatedAddress\r\n\r\n        updateAddressInfo(newEntry)\r\n\r\n        break\r\n      }\r\n    }\r\n  }\r\n\r\n  const labelStyles = useTextFieldLabelStyle()\r\n  const inputStyles = useTextFieldInputStyle()\r\n\r\n  return (\r\n    <Autocomplete<AddressBookEntry, false, false, true>\r\n      closeIcon={null}\r\n      openOnFocus={false}\r\n      filterOptions={filterAddressEntries}\r\n      freeSolo\r\n      onChange={onChange}\r\n      onInputChange={onInputChange}\r\n      options={addressBookEntries}\r\n      id=\"address-book-input\"\r\n      renderInput={(params) => (\r\n        <MuiTextField\r\n          {...params}\r\n          autoFocus={true}\r\n          error={!!validationText}\r\n          fullWidth\r\n          variant=\"filled\"\r\n          label={validationText ? validationText : label}\r\n          InputLabelProps={{ shrink: true, required: true, classes: labelStyles }}\r\n          InputProps={{ ...params.InputProps, classes: inputStyles }}\r\n          inputProps={{ ...params.inputProps, 'data-testid': 'address-book-input' }}\r\n        />\r\n      )}\r\n      getOptionLabel={({ address }) => address}\r\n      renderOption={({ address, name }) => <PrefixedEthHashInfo hash={address} name={name} showAvatar />}\r\n      role=\"listbox\"\r\n      style={{ display: 'flex', flexGrow: 1 }}\r\n    />\r\n  )\r\n}\r\n\r\nexport const AddressBookInput = (props: AddressBookProps): ReactElement => {\r\n  const addressBookEntries = useSelector(currentNetworkAddressBook)\r\n  const [validationText, setValidationText] = useState<string>('')\r\n\r\n  useEffect(() => {\r\n    if (props.errorMsg) {\r\n      setValidationText(props.errorMsg)\r\n    }\r\n  }, [props.errorMsg])\r\n\r\n  return (\r\n    <BaseAddressBookInput\r\n      addressBookEntries={addressBookEntries}\r\n      setValidationText={setValidationText}\r\n      validationText={validationText}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport const ContractsAddressBookInput = ({\r\n  setIsValidAddress,\r\n  setSelectedEntry,\r\n  ...props\r\n}: AddressBookProps): ReactElement => {\r\n  const addressBookEntries = useSelector(currentNetworkAddressBook)\r\n  const [filteredEntries, setFilteredEntries] = useState<AddressBookEntry[]>([])\r\n  const [validationText, setValidationText] = useState<string>('')\r\n\r\n  useEffect(() => {\r\n    const filterContractAddresses = async (): Promise<void> => {\r\n      const filteredADBK = await filterContractAddressBookEntries(addressBookEntries)\r\n      setFilteredEntries(filteredADBK)\r\n    }\r\n    filterContractAddresses()\r\n  }, [addressBookEntries])\r\n\r\n  const onSetSelectedEntry = async (selectedEntry) => {\r\n    if (selectedEntry?.address) {\r\n      // verify if `address` is a contract\r\n      const contractAddressErrorMessage = await mustBeEthereumContractAddress(selectedEntry.address)\r\n      setIsValidAddress(!contractAddressErrorMessage)\r\n      setValidationText(contractAddressErrorMessage ?? '')\r\n      setSelectedEntry(selectedEntry)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <BaseAddressBookInput\r\n      addressBookEntries={filteredEntries}\r\n      setIsValidAddress={setIsValidAddress}\r\n      setSelectedEntry={onSetSelectedEntry}\r\n      setValidationText={setValidationText}\r\n      validationText={validationText}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n","import { RadioButtons, Text } from '@gnosis.pm/safe-react-components'\r\nimport { FormControlLabel, hexToRgb, Switch as SwitchMui } from '@material-ui/core'\r\nimport { ReactElement } from 'react'\r\nimport { useField } from 'react-final-form'\r\nimport styled from 'styled-components'\r\n\r\nimport { getChainName } from 'src/config'\r\nimport { Field } from 'src/routes/safe/components/Settings/SpendingLimit/FormFields/Amount'\r\n\r\n// TODO: propose refactor in safe-react-components based on this requirements\r\nconst SpendingLimitRadioButtons = styled(RadioButtons)`\r\n  & .MuiRadio-colorPrimary.Mui-checked {\r\n    color: ${({ theme }) => theme.colors.primary};\r\n  }\r\n`\r\n\r\n// TODO: add `name` and `value` to SRC Switch, as they're required for a better RFF integration\r\nconst StyledSwitch = styled(({ ...rest }) => <SwitchMui {...rest} />)`\r\n  && {\r\n    .MuiIconButton-label,\r\n    .MuiSwitch-colorSecondary {\r\n      color: ${({ theme }) => theme.colors.icon};\r\n    }\r\n\r\n    .MuiSwitch-colorSecondary.Mui-checked .MuiIconButton-label {\r\n      color: ${({ theme }) => theme.colors.primary};\r\n    }\r\n\r\n    .MuiSwitch-colorSecondary.Mui-checked:hover {\r\n      background-color: ${({ theme }) => hexToRgb(`${theme.colors.primary}03`)};\r\n    }\r\n\r\n    .Mui-checked + .MuiSwitch-track {\r\n      background-color: ${({ theme }) => theme.colors.primaryLight};\r\n    }\r\n  }\r\n`\r\n\r\ninterface RadioButtonOption {\r\n  label: string\r\n  value: string\r\n}\r\n\r\ninterface RadioButtonProps {\r\n  options: RadioButtonOption[]\r\n  initialValue: string\r\n  groupName: string\r\n}\r\n\r\nconst SafeRadioButtons = ({ options, initialValue, groupName }: RadioButtonProps): ReactElement => (\r\n  <Field name={groupName} initialValue={initialValue}>\r\n    {({ input: { name, value, onChange } }) => (\r\n      <SpendingLimitRadioButtons name={name} value={value || initialValue} onRadioChange={onChange} options={options} />\r\n    )}\r\n  </Field>\r\n)\r\n\r\nconst Switch = ({ label, name }: { label: string; name: string }): ReactElement => (\r\n  <FormControlLabel\r\n    label={label}\r\n    control={\r\n      <Field\r\n        name={name}\r\n        type=\"checkbox\"\r\n        render={({ input: { checked, onChange, name, value } }) => (\r\n          <StyledSwitch checked={checked} onChange={onChange} name={name} value={value} />\r\n        )}\r\n      />\r\n    }\r\n  />\r\n)\r\n\r\nconst ResetTimeLabel = styled.div`\r\n  grid-area: resetTimeLabel;\r\n`\r\n\r\nconst ResetTimeToggle = styled.div`\r\n  grid-area: resetTimeToggle;\r\n`\r\n\r\nconst ResetTimeOptions = styled.div`\r\n  grid-area: resetTimeOption;\r\n`\r\n\r\nconst RESET_TIME_OPTIONS = [\r\n  { label: '1 day', value: '1440' }, // 1 day x 24h x 60min\r\n  { label: '1 week', value: '10080' }, // 7 days x 24h x 60min\r\n  { label: '1 month', value: '43200' }, // 30 days x 24h x 60min\r\n]\r\n\r\nconst RINKEBY_RESET_TIME_OPTIONS = [\r\n  { label: '5 minutes', value: '5' },\r\n  { label: '30 minutes', value: '30' },\r\n  { label: '1 hour', value: '60' },\r\n]\r\n\r\nexport const getResetTimeOptions = (): RadioButtonOption[] => {\r\n  const currentNetwork = getChainName().toLowerCase()\r\n  return currentNetwork !== 'rinkeby' ? RESET_TIME_OPTIONS : RINKEBY_RESET_TIME_OPTIONS\r\n}\r\n\r\nconst ResetTime = (): ReactElement => {\r\n  const {\r\n    input: { value: withResetTime },\r\n  } = useField('withResetTime', { subscription: { value: true } })\r\n\r\n  const resetTimeOptions = getResetTimeOptions()\r\n\r\n  const switchExplanation = withResetTime ? 'choose reset time period' : 'one time'\r\n\r\n  return (\r\n    <>\r\n      <ResetTimeLabel>\r\n        <Text size=\"xl\">Set a reset time so the allowance automatically refills after the defined time period.</Text>\r\n      </ResetTimeLabel>\r\n      <ResetTimeToggle>\r\n        <Switch label={`Reset time (${switchExplanation})`} name=\"withResetTime\" />\r\n      </ResetTimeToggle>\r\n      {withResetTime && (\r\n        <ResetTimeOptions>\r\n          <SafeRadioButtons groupName=\"resetTime\" initialValue={resetTimeOptions[0].value} options={resetTimeOptions} />\r\n        </ResetTimeOptions>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ResetTime\r\n","import { createStyles, makeStyles } from '@material-ui/core'\r\nimport {\r\n  background,\r\n  boldFont,\r\n  border,\r\n  error,\r\n  fontColor,\r\n  lg,\r\n  md,\r\n  secondaryText,\r\n  sm,\r\n  smallFontSize,\r\n  xl,\r\n} from 'src/theme/variables'\r\n\r\nexport const useStyles = makeStyles(\r\n  createStyles({\r\n    title: {\r\n      padding: lg,\r\n      paddingBottom: 0,\r\n    },\r\n    hide: {\r\n      '&:hover': {\r\n        backgroundColor: '#f7f5f5',\r\n      },\r\n      '&:hover $actions': {\r\n        visibility: 'initial',\r\n      },\r\n    },\r\n    actions: {\r\n      justifyContent: 'flex-end',\r\n      visibility: 'hidden',\r\n    },\r\n    noBorderBottom: {\r\n      '& > td': {\r\n        borderBottom: 'none',\r\n      },\r\n    },\r\n    annotation: {\r\n      paddingLeft: lg,\r\n    },\r\n    ownersText: {\r\n      color: secondaryText,\r\n      '& b': {\r\n        color: fontColor,\r\n      },\r\n    },\r\n    container: {\r\n      padding: lg,\r\n    },\r\n    actionButton: {\r\n      fontWeight: boldFont,\r\n      marginRight: sm,\r\n    },\r\n    buttonRow: {\r\n      padding: lg,\r\n      left: 0,\r\n      bottom: 0,\r\n      boxSizing: 'border-box',\r\n      width: '100%',\r\n      justifyContent: 'flex-end',\r\n      borderTop: `2px solid ${border}`,\r\n    },\r\n    modifyBtn: {\r\n      height: xl,\r\n      fontSize: smallFontSize,\r\n    },\r\n    removeModuleIcon: {\r\n      marginLeft: lg,\r\n      cursor: 'pointer',\r\n    },\r\n    modalHeading: {\r\n      boxSizing: 'border-box',\r\n      justifyContent: 'space-between',\r\n      height: '74px',\r\n      padding: `${sm} ${lg}`,\r\n    },\r\n    modalContainer: {\r\n      minHeight: '369px',\r\n    },\r\n    modalManage: {\r\n      fontSize: lg,\r\n    },\r\n    modalClose: {\r\n      height: '35px',\r\n      width: '35px',\r\n    },\r\n    modalButtonRow: {\r\n      height: '84px',\r\n      justifyContent: 'center',\r\n    },\r\n    modalButtonRemove: {\r\n      color: '#fff',\r\n      backgroundColor: error,\r\n      height: '42px',\r\n    },\r\n    modalName: {\r\n      textOverflow: 'ellipsis',\r\n      overflow: 'hidden',\r\n    },\r\n    modalUserName: {\r\n      whiteSpace: 'nowrap',\r\n    },\r\n    modalOwner: {\r\n      backgroundColor: background,\r\n      padding: md,\r\n      alignItems: 'center',\r\n    },\r\n    modalUser: {\r\n      justifyContent: 'left',\r\n    },\r\n    modalDescription: {\r\n      padding: md,\r\n    },\r\n    modalOpen: {\r\n      paddingLeft: sm,\r\n      width: 'auto',\r\n      '&:hover': {\r\n        cursor: 'pointer',\r\n      },\r\n    },\r\n    amountInput: {\r\n      width: '100% !important',\r\n    },\r\n  }),\r\n)\r\n","import { TextField as SRCTextField } from '@gnosis.pm/safe-react-components'\r\nimport { ReactElement } from 'react'\r\nimport { useField } from 'react-final-form'\r\nimport { useSelector } from 'react-redux'\r\nimport styled from 'styled-components'\r\n\r\nimport GnoField from 'src/components/forms/Field'\r\nimport { composeValidators, minValue, mustBeFloat, required } from 'src/components/forms/validator'\r\nimport { extendedSafeTokensSelector } from 'src/routes/safe/container/selector'\r\nimport { useStyles } from 'src/routes/safe/components/Settings/SpendingLimit/style'\r\n\r\nexport const Field = styled(GnoField)`\r\n  margin: 8px 0;\r\n  width: 100%;\r\n`\r\n\r\nconst AmountInput = styled.div`\r\n  grid-area: amountInput;\r\n`\r\n\r\nconst TextField = styled(SRCTextField)`\r\n  margin: 0;\r\n`\r\n\r\nconst Amount = (): ReactElement => {\r\n  const classes = useStyles()\r\n\r\n  const {\r\n    input: { value: tokenAddress },\r\n  } = useField('token', { subscription: { value: true } })\r\n  const {\r\n    meta: { touched, visited },\r\n  } = useField('amount', { subscription: { touched: true, visited: true } })\r\n\r\n  const tokens = useSelector(extendedSafeTokensSelector)\r\n\r\n  const selectedTokenRecord = tokens.find((token) => token.address === tokenAddress)\r\n\r\n  const validate = (touched || visited) && composeValidators(required, mustBeFloat, minValue(0, false))\r\n\r\n  return (\r\n    <AmountInput>\r\n      <Field\r\n        component={TextField}\r\n        label=\"Amount*\"\r\n        name=\"amount\"\r\n        type=\"text\"\r\n        data-testid=\"amount-input\"\r\n        endAdornment={selectedTokenRecord?.symbol}\r\n        className={classes.amountInput}\r\n        validate={validate}\r\n      />\r\n    </AmountInput>\r\n  )\r\n}\r\n\r\nexport default Amount\r\n","import { Text } from '@gnosis.pm/safe-react-components'\r\nimport { ReactElement } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport PrefixedEthHashInfo from 'src/components/PrefixedEthHashInfo'\r\nimport { getExplorerInfo } from 'src/config'\r\nimport { addressBookEntryName } from 'src/logic/addressBook/store/selectors'\r\nimport { ADDRESS_BOOK_DEFAULT_NAME } from 'src/logic/addressBook/model/addressBook'\r\nimport { sameString } from 'src/utils/strings'\r\n\r\ninterface AddressInfoProps {\r\n  address: string\r\n  title?: string\r\n  name?: string\r\n  logoUri?: string\r\n}\r\n\r\nconst AddressInfo = ({ address, title, name, logoUri }: AddressInfoProps): ReactElement => {\r\n  const addessBookName = useSelector((state) => addressBookEntryName(state, { address }))\r\n\r\n  return (\r\n    <>\r\n      {title && (\r\n        <Text size=\"xl\" strong>\r\n          {title}\r\n        </Text>\r\n      )}\r\n      <PrefixedEthHashInfo\r\n        hash={address}\r\n        name={sameString(addessBookName, ADDRESS_BOOK_DEFAULT_NAME) ? name : addessBookName}\r\n        showCopyBtn\r\n        showAvatar\r\n        textSize=\"lg\"\r\n        explorerUrl={getExplorerInfo(address)}\r\n        customAvatar={logoUri || undefined}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AddressInfo\r\n","import { IconText, Text } from '@gnosis.pm/safe-react-components'\r\nimport { ReactElement } from 'react'\r\n\r\nimport Row from 'src/components/layout/Row'\r\n\r\ninterface ResetTimeInfoProps {\r\n  title?: string\r\n  label?: string\r\n}\r\n\r\nconst ResetTimeInfo = ({ title, label }: ResetTimeInfoProps): ReactElement => (\r\n  <>\r\n    <Text size=\"xl\" strong>\r\n      {title}\r\n    </Text>\r\n    {label ? (\r\n      <Row align=\"center\" margin=\"md\">\r\n        <IconText iconSize=\"md\" iconType=\"fuelIndicator\" text={label} textSize=\"lg\" />\r\n      </Row>\r\n    ) : (\r\n      <Row align=\"center\" margin=\"md\">\r\n        <Text size=\"lg\">One-time spending limit</Text>\r\n      </Row>\r\n    )}\r\n  </>\r\n)\r\n\r\nexport default ResetTimeInfo\r\n","import { Text } from '@gnosis.pm/safe-react-components'\r\nimport { ReactElement } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport { Token } from 'src/logic/tokens/store/model/token'\r\nimport { setImageToPlaceholder } from 'src/routes/safe/components/Balances/utils'\r\n\r\nconst StyledImage = styled.img`\r\n  width: 32px;\r\n  height: 32px;\r\n  object-fit: contain;\r\n  margin: 0 8px 0 0;\r\n`\r\nconst StyledImageName = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\ninterface TokenInfoProps {\r\n  amount: string\r\n  title?: string\r\n  token: Token\r\n}\r\n\r\nconst TokenInfo = ({ amount, title, token }: TokenInfoProps): ReactElement => (\r\n  <>\r\n    <Text size=\"xl\" strong>\r\n      {title}\r\n    </Text>\r\n    <StyledImageName>\r\n      <StyledImage alt={token.name} onError={setImageToPlaceholder} src={token.logoUri || ''} />\r\n      <Text size=\"lg\">\r\n        {amount} {token.symbol}\r\n      </Text>\r\n    </StyledImageName>\r\n  </>\r\n)\r\n\r\nexport default TokenInfo\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      minWidth: 56,\n      color: theme.palette.action.active,\n      flexShrink: 0,\n      display: 'inline-flex'\n    },\n\n    /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      marginTop: 8\n    }\n  };\n};\n/**\n * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\n */\n\nvar ListItemIcon = /*#__PURE__*/React.forwardRef(function ListItemIcon(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `Icon`, `SvgIcon`,\n   * or a `@material-ui/icons` SVG icon element.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemIcon'\n})(ListItemIcon);","import { useSelector } from 'react-redux'\r\n\r\nimport { Token } from 'src/logic/tokens/store/model/token'\r\nimport { sameAddress } from 'src/logic/wallets/ethAddresses'\r\nimport { safeKnownCoins } from 'src/routes/safe/container/selector'\r\n\r\nconst useTokenInfo = (address: string): Token | undefined => {\r\n  const tokens = useSelector(safeKnownCoins)\r\n\r\n  if (tokens) {\r\n    return tokens.find((token) => sameAddress(token.address, address))\r\n  }\r\n}\r\n\r\nexport default useTokenInfo\r\n","import Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport { ReactElement } from 'react'\r\n\r\nexport { TableBody, TableCell, TableHead, TableRow }\r\n\r\nconst buildWidthFrom = (size) => ({\r\n  minWidth: `${size}px`,\r\n})\r\n\r\nconst overflowStyle: any = {\r\n  overflowX: 'auto',\r\n}\r\n\r\n// see: https://css-tricks.com/responsive-data-tables/\r\nconst GnoTable = ({ children, size }): ReactElement => {\r\n  const style = size ? buildWidthFrom(size) : undefined\r\n\r\n  return (\r\n    <div style={overflowStyle}>\r\n      <Table style={style}>{children}</Table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GnoTable\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `disableGutters={false}`. */\n    gutters: _defineProperty({\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2)\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `variant=\"regular\"`. */\n    regular: theme.mixins.toolbar,\n\n    /* Styles applied to the root element if `variant=\"dense\"`. */\n    dense: {\n      minHeight: 48\n    }\n  };\n};\nvar Toolbar = /*#__PURE__*/React.forwardRef(function Toolbar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'regular' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes[variant], className, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Toolbar.propTypes = {\n  /**\n   * Toolbar children, usually a mixture of `IconButton`, `Button` and `Typography`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, disables gutter padding.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['regular', 'dense'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiToolbar'\n})(Toolbar);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport useTheme from '../styles/useTheme';\nimport IconButton from '../IconButton';\n/**\n * @ignore - internal component.\n */\n\nvar _ref = /*#__PURE__*/React.createElement(KeyboardArrowRight, null);\n\nvar _ref2 = /*#__PURE__*/React.createElement(KeyboardArrowLeft, null);\n\nvar _ref3 = /*#__PURE__*/React.createElement(KeyboardArrowLeft, null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(KeyboardArrowRight, null);\n\nvar TablePaginationActions = /*#__PURE__*/React.forwardRef(function TablePaginationActions(props, ref) {\n  var backIconButtonProps = props.backIconButtonProps,\n      count = props.count,\n      nextIconButtonProps = props.nextIconButtonProps,\n      _props$onChangePage = props.onChangePage,\n      onChangePage = _props$onChangePage === void 0 ? function () {} : _props$onChangePage,\n      _props$onPageChange = props.onPageChange,\n      onPageChange = _props$onPageChange === void 0 ? function () {} : _props$onPageChange,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      other = _objectWithoutProperties(props, [\"backIconButtonProps\", \"count\", \"nextIconButtonProps\", \"onChangePage\", \"onPageChange\", \"page\", \"rowsPerPage\"]);\n\n  var theme = useTheme();\n\n  var handleBackButtonClick = function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n    onPageChange(event, page - 1);\n  };\n\n  var handleNextButtonClick = function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n    onPageChange(event, page + 1);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(IconButton, _extends({\n    onClick: handleBackButtonClick,\n    disabled: page === 0,\n    color: \"inherit\"\n  }, backIconButtonProps), theme.direction === 'rtl' ? _ref : _ref2), /*#__PURE__*/React.createElement(IconButton, _extends({\n    onClick: handleNextButtonClick,\n    disabled: count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false,\n    color: \"inherit\"\n  }, nextIconButtonProps), theme.direction === 'rtl' ? _ref3 : _ref4));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onChangePage: PropTypes.func,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired\n} : void 0;\nexport default TablePaginationActions;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@material-ui/utils';\nimport clsx from 'clsx';\nimport deprecatedPropType from '../utils/deprecatedPropType';\nimport withStyles from '../styles/withStyles';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport Typography from '../Typography';\nimport TablePaginationActions from './TablePaginationActions';\nimport useId from '../utils/unstable_useId';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.primary,\n      fontSize: theme.typography.pxToRem(14),\n      overflow: 'auto',\n      // Increase the specificity to override TableCell.\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the Toolbar component. */\n    toolbar: {\n      minHeight: 52,\n      paddingRight: 2\n    },\n\n    /* Styles applied to the spacer element. */\n    spacer: {\n      flex: '1 1 100%'\n    },\n\n    /* Styles applied to the caption Typography components if `variant=\"caption\"`. */\n    caption: {\n      flexShrink: 0\n    },\n    // TODO v5: `.selectRoot` should be merged with `.input`\n\n    /* Styles applied to the Select component root element. */\n    selectRoot: {\n      marginRight: 32,\n      marginLeft: 8\n    },\n\n    /* Styles applied to the Select component `select` class. */\n    select: {\n      paddingLeft: 8,\n      paddingRight: 24,\n      textAlign: 'right',\n      textAlignLast: 'right' // Align <select> on Chrome.\n\n    },\n    // TODO v5: remove\n\n    /* Styles applied to the Select component `icon` class. */\n    selectIcon: {},\n\n    /* Styles applied to the `InputBase` component. */\n    input: {\n      color: 'inherit',\n      fontSize: 'inherit',\n      flexShrink: 0\n    },\n\n    /* Styles applied to the MenuItem component. */\n    menuItem: {},\n\n    /* Styles applied to the internal `TablePaginationActions` component. */\n    actions: {\n      flexShrink: 0,\n      marginLeft: 20\n    }\n  };\n};\n\nvar defaultLabelDisplayedRows = function defaultLabelDisplayedRows(_ref) {\n  var from = _ref.from,\n      to = _ref.to,\n      count = _ref.count;\n  return \"\".concat(from, \"-\").concat(to, \" of \").concat(count !== -1 ? count : \"more than \".concat(to));\n};\n\nvar defaultRowsPerPageOptions = [10, 25, 50, 100];\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\n\nvar TablePagination = /*#__PURE__*/React.forwardRef(function TablePagination(props, ref) {\n  var _props$ActionsCompone = props.ActionsComponent,\n      ActionsComponent = _props$ActionsCompone === void 0 ? TablePaginationActions : _props$ActionsCompone,\n      backIconButtonProps = props.backIconButtonProps,\n      _props$backIconButton = props.backIconButtonText,\n      backIconButtonText = _props$backIconButton === void 0 ? 'Previous page' : _props$backIconButton,\n      classes = props.classes,\n      className = props.className,\n      colSpanProp = props.colSpan,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? TableCell : _props$component,\n      count = props.count,\n      _props$labelDisplayed = props.labelDisplayedRows,\n      labelDisplayedRows = _props$labelDisplayed === void 0 ? defaultLabelDisplayedRows : _props$labelDisplayed,\n      _props$labelRowsPerPa = props.labelRowsPerPage,\n      labelRowsPerPage = _props$labelRowsPerPa === void 0 ? 'Rows per page:' : _props$labelRowsPerPa,\n      nextIconButtonProps = props.nextIconButtonProps,\n      _props$nextIconButton = props.nextIconButtonText,\n      nextIconButtonText = _props$nextIconButton === void 0 ? 'Next page' : _props$nextIconButton,\n      onChangePage = props.onChangePage,\n      onPageChange = props.onPageChange,\n      onChangeRowsPerPageProp = props.onChangeRowsPerPage,\n      onRowsPerPageChangeProp = props.onRowsPerPageChange,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      _props$rowsPerPageOpt = props.rowsPerPageOptions,\n      rowsPerPageOptions = _props$rowsPerPageOpt === void 0 ? defaultRowsPerPageOptions : _props$rowsPerPageOpt,\n      _props$SelectProps = props.SelectProps,\n      SelectProps = _props$SelectProps === void 0 ? {} : _props$SelectProps,\n      other = _objectWithoutProperties(props, [\"ActionsComponent\", \"backIconButtonProps\", \"backIconButtonText\", \"classes\", \"className\", \"colSpan\", \"component\", \"count\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"nextIconButtonText\", \"onChangePage\", \"onPageChange\", \"onChangeRowsPerPage\", \"onRowsPerPageChange\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\"]);\n\n  var onChangeRowsPerPage = onChangeRowsPerPageProp || onRowsPerPageChangeProp;\n  var colSpan;\n\n  if (Component === TableCell || Component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  var selectId = useId();\n  var labelId = useId();\n  var MenuItemComponent = SelectProps.native ? 'option' : MenuItem;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    colSpan: colSpan,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.toolbar\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.spacer\n  }), rowsPerPageOptions.length > 1 && /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption,\n    id: labelId\n  }, labelRowsPerPage), rowsPerPageOptions.length > 1 && /*#__PURE__*/React.createElement(Select, _extends({\n    classes: {\n      select: classes.select,\n      icon: classes.selectIcon\n    },\n    input: /*#__PURE__*/React.createElement(InputBase, {\n      className: clsx(classes.input, classes.selectRoot)\n    }),\n    value: rowsPerPage,\n    onChange: onChangeRowsPerPage,\n    id: selectId,\n    labelId: labelId\n  }, SelectProps), rowsPerPageOptions.map(function (rowsPerPageOption) {\n    return /*#__PURE__*/React.createElement(MenuItemComponent, {\n      className: classes.menuItem,\n      key: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption,\n      value: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\n    }, rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption);\n  })), /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption\n  }, labelDisplayedRows({\n    from: count === 0 ? 0 : page * rowsPerPage + 1,\n    to: count !== -1 ? Math.min(count, (page + 1) * rowsPerPage) : (page + 1) * rowsPerPage,\n    count: count === -1 ? -1 : count,\n    page: page\n  })), /*#__PURE__*/React.createElement(ActionsComponent, {\n    className: classes.actions,\n    backIconButtonProps: _extends({\n      title: backIconButtonText,\n      'aria-label': backIconButtonText\n    }, backIconButtonProps),\n    count: count,\n    nextIconButtonProps: _extends({\n      title: nextIconButtonText,\n      'aria-label': nextIconButtonText\n    }, nextIconButtonProps),\n    onChangePage: onChangePage,\n    onPageChange: onPageChange,\n    page: page,\n    rowsPerPage: rowsPerPage\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes = {\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a HTML element or a component.\n   */\n  ActionsComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) component.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the back arrow icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  backIconButtonText: PropTypes.string,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The total number of rows.\n   *\n   * To enable server side pagination for an unknown number of items, provide -1.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`\n   * object.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  labelDisplayedRows: PropTypes.func,\n\n  /**\n   * Customize the rows per page label.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  labelRowsPerPage: PropTypes.node,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the next arrow icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  nextIconButtonText: PropTypes.string,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   * @deprecated Use the onPageChange prop instead.\n   */\n  onChangePage: deprecatedPropType(PropTypes.func, 'Use the `onPageChange` prop instead.'),\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @deprecated Use the onRowsPerPageChange prop instead.\n   */\n  onChangeRowsPerPage: deprecatedPropType(PropTypes.func, 'Use the `onRowsPerPageChange` prop instead.'),\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onRowsPerPageChange: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(PropTypes.number.isRequired, function (props) {\n    var count = props.count,\n        page = props.page,\n        rowsPerPage = props.rowsPerPage;\n\n    if (count === -1) {\n      return null;\n    }\n\n    var newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n\n    if (page < 0 || page > newLastPage) {\n      return new Error('Material-UI: The page prop of a TablePagination is out of range ' + \"(0 to \".concat(newLastPage, \", but page is \").concat(page, \").\"));\n    }\n\n    return null;\n  }),\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   */\n  rowsPerPageOptions: PropTypes.array,\n\n  /**\n   * Props applied to the rows per page [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTablePagination'\n})(TablePagination);","import { createStyles, makeStyles } from '@material-ui/core'\r\n\r\nimport { sm } from 'src/theme/variables'\r\n\r\nexport const useSelectedTokenStyles = makeStyles(\r\n  createStyles({\r\n    container: {\r\n      minHeight: '55px',\r\n      padding: 0,\r\n      width: '100%',\r\n    },\r\n    tokenData: {\r\n      padding: 0,\r\n      margin: 0,\r\n      lineHeight: '14px',\r\n    },\r\n    tokenImage: {\r\n      display: 'block',\r\n      marginRight: sm,\r\n      height: 28,\r\n      width: 'auto',\r\n    },\r\n  }),\r\n)\r\n\r\nexport const useSelectStyles = makeStyles(\r\n  createStyles({\r\n    selectMenu: {\r\n      paddingRight: 0,\r\n    },\r\n  }),\r\n)\r\n","import { Text } from '@gnosis.pm/safe-react-components'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport { List } from 'immutable'\r\nimport { ReactElement } from 'react'\r\n\r\nimport Field from 'src/components/forms/Field'\r\nimport SelectField from 'src/components/forms/SelectField'\r\nimport { required } from 'src/components/forms/validator'\r\nimport Img from 'src/components/layout/Img'\r\nimport { formatAmount } from 'src/logic/tokens/utils/formatAmount'\r\nimport { setImageToPlaceholder } from 'src/routes/safe/components/Balances/utils'\r\nimport { Token } from 'src/logic/tokens/store/model/token'\r\n\r\nimport { useSelectStyles, useSelectedTokenStyles } from './style'\r\n\r\ninterface SelectTokenProps {\r\n  tokenAddress: string\r\n  tokens: List<Token>\r\n}\r\n\r\nconst SelectedToken = ({ tokenAddress, tokens }: SelectTokenProps): ReactElement => {\r\n  const classes = useSelectedTokenStyles()\r\n  const token = tokens.find(({ address }) => address === tokenAddress)\r\n\r\n  return (\r\n    <MenuItem className={classes.container}>\r\n      {token ? (\r\n        <>\r\n          <ListItemIcon>\r\n            <Img\r\n              className={classes.tokenImage}\r\n              alt={token.name}\r\n              onError={setImageToPlaceholder}\r\n              src={token.logoUri || ''}\r\n            />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            className={classes.tokenData}\r\n            primary={token.name}\r\n            secondary={`${formatAmount(token.balance?.tokenBalance.toString() ?? '0')} ${token.symbol}`}\r\n          />\r\n        </>\r\n      ) : (\r\n        <Text color=\"placeHolder\" size=\"xl\">\r\n          Select an asset*\r\n        </Text>\r\n      )}\r\n    </MenuItem>\r\n  )\r\n}\r\n\r\ninterface TokenSelectFieldProps {\r\n  initialValue?: string\r\n  isValid?: boolean\r\n  tokens: List<Token>\r\n}\r\n\r\nconst TokenSelectField = ({ initialValue, isValid = true, tokens }: TokenSelectFieldProps): ReactElement => {\r\n  const classes = useSelectStyles()\r\n  const tokenClasses = useSelectedTokenStyles()\r\n\r\n  return (\r\n    <Field\r\n      classes={{ selectMenu: classes.selectMenu }}\r\n      className={isValid ? 'isValid' : 'isInvalid'}\r\n      component={SelectField}\r\n      displayEmpty\r\n      initialValue={initialValue}\r\n      name=\"token\"\r\n      renderValue={(tokenAddress) => <SelectedToken tokenAddress={tokenAddress} tokens={tokens} />}\r\n      validate={required}\r\n    >\r\n      {tokens.map((token) => (\r\n        <MenuItem key={token.address} value={token.address}>\r\n          <ListItemIcon>\r\n            <Img\r\n              className={tokenClasses.tokenImage}\r\n              alt={token.name}\r\n              onError={setImageToPlaceholder}\r\n              src={token.logoUri || ''}\r\n            />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary={token.name}\r\n            secondary={`${formatAmount(token.balance?.tokenBalance.toString() ?? '0')} ${token.symbol}`}\r\n            data-testid={`select-token-${token.name}`}\r\n          />\r\n        </MenuItem>\r\n      ))}\r\n    </Field>\r\n  )\r\n}\r\n\r\nexport default TokenSelectField\r\n","import { ReactElement, useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport Col from 'src/components/layout/Col'\r\nimport Row from 'src/components/layout/Row'\r\nimport Hairline from 'src/components/layout/Hairline'\r\nimport { ButtonStatus, Modal } from 'src/components/Modal'\r\nimport { ReviewInfoText } from 'src/components/ReviewInfoText'\r\nimport { ModalHeader } from 'src/routes/safe/components/Balances/SendModal/screens/ModalHeader'\r\nimport { useEstimationStatus } from 'src/logic/hooks/useEstimationStatus'\r\nimport { EstimationStatus, useEstimateTransactionGas } from 'src/logic/hooks/useEstimateTransactionGas'\r\nimport useTokenInfo from 'src/logic/safe/hooks/useTokenInfo'\r\nimport { createTransaction } from 'src/logic/safe/store/actions/createTransaction'\r\nimport { TX_NOTIFICATION_TYPES } from 'src/logic/safe/transactions'\r\nimport { getDeleteAllowanceTxData } from 'src/logic/safe/utils/spendingLimits'\r\nimport { fromTokenUnit } from 'src/logic/tokens/utils/humanReadableValue'\r\nimport { EditableTxParameters } from 'src/routes/safe/components/Transactions/helpers/EditableTxParameters'\r\nimport { TxParametersDetail } from 'src/routes/safe/components/Transactions/helpers/TxParametersDetail'\r\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\r\nimport { SPENDING_LIMIT_MODULE_ADDRESS } from 'src/utils/constants'\r\nimport { getResetTimeOptions } from './FormFields/ResetTime'\r\nimport { AddressInfo, ResetTimeInfo, TokenInfo } from './InfoDisplay'\r\nimport { SpendingLimitTable } from './LimitsTable/dataFetcher'\r\nimport { useStyles } from './style'\r\nimport { extractSafeAddress } from 'src/routes/routes'\r\n\r\ninterface RemoveSpendingLimitModalProps {\r\n  onClose: () => void\r\n  spendingLimit: SpendingLimitTable\r\n  open: boolean\r\n}\r\n\r\nexport const RemoveLimitModal = ({ onClose, spendingLimit, open }: RemoveSpendingLimitModalProps): ReactElement => {\r\n  const classes = useStyles()\r\n\r\n  const tokenInfo = useTokenInfo(spendingLimit.spent.tokenAddress)\r\n\r\n  const safeAddress = extractSafeAddress()\r\n  const [txData, setTxData] = useState('')\r\n  const dispatch = useDispatch()\r\n  const [manualSafeTxGas, setManualSafeTxGas] = useState('0')\r\n  const [manualGasPrice, setManualGasPrice] = useState<string | undefined>()\r\n  const [manualGasLimit, setManualGasLimit] = useState<string | undefined>()\r\n\r\n  useEffect(() => {\r\n    const {\r\n      beneficiary,\r\n      spent: { tokenAddress },\r\n    } = spendingLimit\r\n    const txData = getDeleteAllowanceTxData({ beneficiary, tokenAddress })\r\n    setTxData(txData)\r\n  }, [spendingLimit])\r\n\r\n  const {\r\n    gasCostFormatted,\r\n    txEstimationExecutionStatus,\r\n    isExecution,\r\n    isOffChainSignature,\r\n    isCreation,\r\n    gasLimit,\r\n    gasEstimation,\r\n    gasPriceFormatted,\r\n  } = useEstimateTransactionGas({\r\n    txData,\r\n    txRecipient: SPENDING_LIMIT_MODULE_ADDRESS,\r\n    txAmount: '0',\r\n    safeTxGas: manualSafeTxGas,\r\n    manualGasPrice,\r\n    manualGasLimit,\r\n  })\r\n\r\n  const [buttonStatus] = useEstimationStatus(txEstimationExecutionStatus)\r\n\r\n  const removeSelectedSpendingLimit = (txParameters: TxParameters) => {\r\n    try {\r\n      dispatch(\r\n        createTransaction({\r\n          safeAddress,\r\n          to: SPENDING_LIMIT_MODULE_ADDRESS,\r\n          valueInWei: '0',\r\n          txData,\r\n          txNonce: txParameters.safeNonce,\r\n          safeTxGas: txParameters.safeTxGas,\r\n          ethParameters: txParameters,\r\n          notifiedTransaction: TX_NOTIFICATION_TYPES.REMOVE_SPENDING_LIMIT_TX,\r\n        }),\r\n      )\r\n    } catch (e) {\r\n      console.error(\r\n        `failed to remove spending limit ${spendingLimit.beneficiary} -> ${spendingLimit.spent.tokenAddress}`,\r\n        e.message,\r\n      )\r\n    }\r\n  }\r\n\r\n  const resetTimeLabel =\r\n    getResetTimeOptions().find(({ value }) => +value === +spendingLimit.resetTime.resetTimeMin)?.label ?? ''\r\n\r\n  const closeEditModalCallback = (txParameters: TxParameters) => {\r\n    const oldGasPrice = gasPriceFormatted\r\n    const newGasPrice = txParameters.ethGasPrice\r\n    const oldSafeTxGas = gasEstimation\r\n    const newSafeTxGas = txParameters.safeTxGas\r\n\r\n    if (newGasPrice && oldGasPrice !== newGasPrice) {\r\n      setManualGasPrice(txParameters.ethGasPrice)\r\n    }\r\n\r\n    if (txParameters.ethGasLimit && gasLimit !== txParameters.ethGasLimit) {\r\n      setManualGasLimit(txParameters.ethGasLimit)\r\n    }\r\n\r\n    if (newSafeTxGas && oldSafeTxGas !== newSafeTxGas) {\r\n      setManualSafeTxGas(newSafeTxGas)\r\n    }\r\n  }\r\n\r\n  let confirmButtonText = 'Remove'\r\n  if (ButtonStatus.LOADING === buttonStatus) {\r\n    confirmButtonText = txEstimationExecutionStatus === EstimationStatus.LOADING ? 'Estimating' : 'Removing'\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      handleClose={onClose}\r\n      open={open}\r\n      title=\"Remove spending limit\"\r\n      description=\"Remove the selected spending limit\"\r\n    >\r\n      <EditableTxParameters\r\n        isOffChainSignature={isOffChainSignature}\r\n        isExecution={isExecution}\r\n        ethGasLimit={gasLimit}\r\n        ethGasPrice={gasPriceFormatted}\r\n        safeTxGas={gasEstimation}\r\n        closeEditModalCallback={closeEditModalCallback}\r\n      >\r\n        {(txParameters, toggleEditMode) => {\r\n          return (\r\n            <>\r\n              <ModalHeader onClose={onClose} title=\"Remove spending limit\" />\r\n              <Hairline />\r\n\r\n              <Modal.Body>\r\n                <Col margin=\"lg\">\r\n                  <AddressInfo title=\"Beneficiary\" address={spendingLimit.beneficiary} />\r\n                </Col>\r\n                <Col margin=\"lg\">\r\n                  {tokenInfo && (\r\n                    <TokenInfo\r\n                      amount={fromTokenUnit(spendingLimit.spent.amount, tokenInfo.decimals)}\r\n                      title=\"Amount\"\r\n                      token={tokenInfo}\r\n                    />\r\n                  )}\r\n                </Col>\r\n                <Col margin=\"lg\">\r\n                  <ResetTimeInfo title=\"Reset Time\" label={resetTimeLabel} />\r\n                </Col>\r\n                {/* Tx Parameters */}\r\n                <TxParametersDetail\r\n                  txParameters={txParameters}\r\n                  onEdit={toggleEditMode}\r\n                  isTransactionCreation={isCreation}\r\n                  isTransactionExecution={isExecution}\r\n                  isOffChainSignature={isOffChainSignature}\r\n                />\r\n              </Modal.Body>\r\n\r\n              <Row className={classes.modalDescription}>\r\n                <ReviewInfoText\r\n                  gasCostFormatted={gasCostFormatted}\r\n                  isCreation={isCreation}\r\n                  isExecution={isExecution}\r\n                  isOffChainSignature={isOffChainSignature}\r\n                  safeNonce={txParameters.safeNonce}\r\n                  txEstimationExecutionStatus={txEstimationExecutionStatus}\r\n                />\r\n              </Row>\r\n\r\n              <Modal.Footer withoutBorder={buttonStatus !== ButtonStatus.LOADING}>\r\n                <Modal.Footer.Buttons\r\n                  cancelButtonProps={{ onClick: onClose }}\r\n                  confirmButtonProps={{\r\n                    color: 'error',\r\n                    onClick: () => removeSelectedSpendingLimit(txParameters),\r\n                    status: buttonStatus,\r\n                    text: confirmButtonText,\r\n                  }}\r\n                />\r\n              </Modal.Footer>\r\n            </>\r\n          )\r\n        }}\r\n      </EditableTxParameters>\r\n    </Modal>\r\n  )\r\n}\r\n","import { List } from 'immutable'\r\n\r\nimport { TableColumn } from 'src/components/Table/types.d'\r\nimport { SpendingLimitRow } from 'src/logic/safe/utils/spendingLimits'\r\nimport { relativeTime } from 'src/utils/date'\r\n\r\nexport const SPENDING_LIMIT_TABLE_BENEFICIARY_ID = 'beneficiary'\r\nexport const SPENDING_LIMIT_TABLE_SPENT_ID = 'spent'\r\nexport const SPENDING_LIMIT_TABLE_RESET_TIME_ID = 'resetTime'\r\nexport const SPENDING_LIMIT_TABLE_ACTION_ID = 'action'\r\n\r\nexport type SpendingLimitTable = {\r\n  [SPENDING_LIMIT_TABLE_BENEFICIARY_ID]: string\r\n  [SPENDING_LIMIT_TABLE_SPENT_ID]: {\r\n    spent: string\r\n    amount: string\r\n    tokenAddress: string\r\n  }\r\n  [SPENDING_LIMIT_TABLE_RESET_TIME_ID]: {\r\n    relativeTime: string\r\n    lastResetMin: string\r\n    resetTimeMin: string\r\n  }\r\n}\r\n\r\nexport const getSpendingLimitData = (spendingLimits?: SpendingLimitRow[] | null): SpendingLimitTable[] | undefined =>\r\n  spendingLimits?.map((spendingLimit) => ({\r\n    [SPENDING_LIMIT_TABLE_BENEFICIARY_ID]: spendingLimit.delegate,\r\n    [SPENDING_LIMIT_TABLE_SPENT_ID]: {\r\n      spent: spendingLimit.spent,\r\n      amount: spendingLimit.amount,\r\n      tokenAddress: spendingLimit.token,\r\n    },\r\n    [SPENDING_LIMIT_TABLE_RESET_TIME_ID]: {\r\n      relativeTime: relativeTime(spendingLimit.lastResetMin, spendingLimit.resetTimeMin),\r\n      lastResetMin: spendingLimit.lastResetMin,\r\n      resetTimeMin: spendingLimit.resetTimeMin,\r\n    },\r\n  }))\r\n\r\nexport const generateColumns = (): List<TableColumn> => {\r\n  const beneficiaryColumn: TableColumn = {\r\n    align: 'left',\r\n    custom: false,\r\n    disablePadding: false,\r\n    id: SPENDING_LIMIT_TABLE_BENEFICIARY_ID,\r\n    label: 'Beneficiary',\r\n    order: false,\r\n  }\r\n\r\n  const spentColumn: TableColumn = {\r\n    align: 'left',\r\n    custom: false,\r\n    disablePadding: false,\r\n    id: SPENDING_LIMIT_TABLE_SPENT_ID,\r\n    label: 'Spent',\r\n    order: false,\r\n    static: true,\r\n  }\r\n\r\n  const resetColumn: TableColumn = {\r\n    align: 'left',\r\n    custom: false,\r\n    disablePadding: false,\r\n    id: SPENDING_LIMIT_TABLE_RESET_TIME_ID,\r\n    label: 'Reset Time',\r\n    order: false,\r\n    static: true,\r\n  }\r\n\r\n  const actionsColumn: TableColumn = {\r\n    custom: true,\r\n    disablePadding: false,\r\n    id: SPENDING_LIMIT_TABLE_ACTION_ID,\r\n    label: '',\r\n    order: false,\r\n  }\r\n\r\n  return List([beneficiaryColumn, spentColumn, resetColumn, actionsColumn])\r\n}\r\n","import { useState, useEffect } from 'react'\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window\r\n  return {\r\n    width,\r\n    height,\r\n  }\r\n}\r\n\r\nexport const useWindowDimensions = (): { width: number; height: number } => {\r\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions())\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions())\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize)\r\n    return () => window.removeEventListener('resize', handleResize)\r\n  }, [])\r\n\r\n  return windowDimensions\r\n}\r\n","import { Text } from '@gnosis.pm/safe-react-components'\r\nimport { ReactElement, useMemo } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport { Token } from 'src/logic/tokens/store/model/token'\r\nimport { formatAmount } from 'src/logic/tokens/utils/formatAmount'\r\nimport { setImageToPlaceholder } from 'src/routes/safe/components/Balances/utils'\r\nimport useTokenInfo from 'src/logic/safe/hooks/useTokenInfo'\r\nimport { fromTokenUnit } from 'src/logic/tokens/utils/humanReadableValue'\r\nimport { useWindowDimensions } from 'src/logic/hooks/useWindowDimensions'\r\n\r\nconst StyledImage = styled.img`\r\n  width: 32px;\r\n  height: 32px;\r\n  object-fit: contain;\r\n  margin: 0 8px 0 0;\r\n`\r\n\r\nconst StyledImageName = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\ntype FormattedAmountsProps = { amount: string; spent: string; tokenInfo?: Token }\r\n\r\ntype FormattedAmounts = { amount: string; spent: string }\r\n\r\nconst useFormattedAmounts = ({ amount, spent, tokenInfo }: FormattedAmountsProps): FormattedAmounts | undefined => {\r\n  return useMemo(() => {\r\n    if (tokenInfo) {\r\n      const formattedSpent = formatAmount(fromTokenUnit(spent, tokenInfo.decimals)).toString()\r\n      const formattedAmount = formatAmount(fromTokenUnit(amount, tokenInfo.decimals)).toString()\r\n      return { amount: formattedAmount, spent: formattedSpent }\r\n    }\r\n  }, [amount, spent, tokenInfo])\r\n}\r\n\r\ninterface SpentVsAmountProps {\r\n  amount: string\r\n  spent: string\r\n  tokenAddress: string\r\n}\r\n\r\nexport const SpentVsAmount = ({ amount, spent, tokenAddress }: SpentVsAmountProps): ReactElement | null => {\r\n  const { width } = useWindowDimensions()\r\n  const showIcon = useMemo(() => width > 1024, [width])\r\n\r\n  const tokenInfo = useTokenInfo(tokenAddress)\r\n  const spentInfo = useFormattedAmounts({ amount, spent, tokenInfo })\r\n\r\n  return spentInfo && tokenInfo ? (\r\n    <StyledImageName>\r\n      {showIcon && <StyledImage alt={tokenInfo.name} onError={setImageToPlaceholder} src={tokenInfo.logoUri || ''} />}\r\n      <Text size=\"lg\">{`${spentInfo.spent} of ${spentInfo.amount} ${tokenInfo.symbol}`}</Text>\r\n    </StyledImageName>\r\n  ) : null\r\n}\r\n","import { Text, Icon } from '@gnosis.pm/safe-react-components'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\nimport cn from 'classnames'\r\nimport { ReactElement, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport ButtonHelper from 'src/components/ButtonHelper'\r\nimport Row from 'src/components/layout/Row'\r\nimport { TableCell, TableRow } from 'src/components/layout/Table'\r\nimport Table from 'src/components/Table'\r\nimport { AddressInfo } from 'src/routes/safe/components/Settings/SpendingLimit/InfoDisplay'\r\nimport { RemoveLimitModal } from 'src/routes/safe/components/Settings/SpendingLimit/RemoveLimitModal'\r\nimport { useStyles } from 'src/routes/safe/components/Settings/SpendingLimit/style'\r\nimport { grantedSelector } from 'src/routes/safe/container/selector'\r\n\r\nimport {\r\n  generateColumns,\r\n  SPENDING_LIMIT_TABLE_BENEFICIARY_ID,\r\n  SPENDING_LIMIT_TABLE_RESET_TIME_ID,\r\n  SPENDING_LIMIT_TABLE_SPENT_ID,\r\n  SpendingLimitTable,\r\n} from './dataFetcher'\r\nimport { SpentVsAmount } from './SpentVsAmount'\r\n\r\ninterface SpendingLimitTableProps {\r\n  data?: SpendingLimitTable[]\r\n}\r\n\r\nexport const LimitsTable = ({ data }: SpendingLimitTableProps): ReactElement => {\r\n  const classes = useStyles()\r\n  const granted = useSelector(grantedSelector)\r\n\r\n  const columns = generateColumns()\r\n  const autoColumns = columns.filter(({ custom }) => !custom)\r\n\r\n  const [selectedRow, setSelectedRow] = useState<SpendingLimitTable>()\r\n\r\n  return (\r\n    <>\r\n      <TableContainer style={{ minHeight: '440px' }}>\r\n        <Table\r\n          columns={columns}\r\n          data={data}\r\n          defaultFixed\r\n          defaultOrderBy={SPENDING_LIMIT_TABLE_BENEFICIARY_ID}\r\n          defaultRowsPerPage={5}\r\n          label=\"Spending limits\"\r\n          noBorder\r\n          size={data?.length}\r\n        >\r\n          {(sortedData) =>\r\n            sortedData.map((row, index) => (\r\n              <TableRow\r\n                className={cn(classes.hide, index >= 3 && index === sortedData.size - 1 && classes.noBorderBottom)}\r\n                data-testid=\"spending-limit-table-row\"\r\n                key={index}\r\n                tabIndex={-1}\r\n              >\r\n                {autoColumns.map((column, index) => {\r\n                  const columnId = column.id\r\n                  const rowElement = row[columnId]\r\n\r\n                  return (\r\n                    <TableCell align={column.align} component=\"td\" key={`${columnId}-${index}`}>\r\n                      {columnId === SPENDING_LIMIT_TABLE_BENEFICIARY_ID && <AddressInfo address={rowElement} />}\r\n                      {columnId === SPENDING_LIMIT_TABLE_SPENT_ID && <SpentVsAmount {...rowElement} />}\r\n                      {columnId === SPENDING_LIMIT_TABLE_RESET_TIME_ID && (\r\n                        <Text size=\"lg\">{rowElement.relativeTime}</Text>\r\n                      )}\r\n                    </TableCell>\r\n                  )\r\n                })}\r\n                <TableCell component=\"td\">\r\n                  <Row align=\"end\" className={classes.actions}>\r\n                    {granted && (\r\n                      <ButtonHelper onClick={() => setSelectedRow(row)} data-testid=\"remove-limit-btn\">\r\n                        <Icon size=\"sm\" type=\"delete\" color=\"error\" tooltip=\"Remove limit\" />\r\n                      </ButtonHelper>\r\n                    )}\r\n                  </Row>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))\r\n          }\r\n        </Table>\r\n      </TableContainer>\r\n      {selectedRow && (\r\n        <RemoveLimitModal onClose={() => setSelectedRow(undefined)} spendingLimit={selectedRow} open={true} />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import { KeyboardEvent, ReactElement, useEffect, useState } from 'react'\r\nimport { useForm, useFormState } from 'react-final-form'\r\nimport { useSelector } from 'react-redux'\r\nimport styled from 'styled-components'\r\n\r\nimport { ScanQRWrapper } from 'src/components/ScanQRModal/ScanQRWrapper'\r\nimport PrefixedEthHashInfo from 'src/components/PrefixedEthHashInfo'\r\nimport { getExplorerInfo } from 'src/config'\r\nimport { currentNetworkAddressBook } from 'src/logic/addressBook/store/selectors'\r\nimport { AddressBookInput } from 'src/routes/safe/components/Balances/SendModal/screens/AddressBookInput'\r\nimport { sameString } from 'src/utils/strings'\r\nimport { sameAddress } from 'src/logic/wallets/ethAddresses'\r\nimport { mustBeEthereumAddress } from 'src/components/forms/validator'\r\n\r\nconst BeneficiaryInput = styled.div`\r\n  grid-area: beneficiaryInput;\r\n`\r\n\r\nconst BeneficiaryScan = styled.div`\r\n  grid-area: beneficiaryScan;\r\n`\r\n\r\nconst Beneficiary = (): ReactElement => {\r\n  const { initialValues } = useFormState()\r\n  const { mutators } = useForm()\r\n  const [addressErrorMsg, setAddressErrorMsg] = useState('')\r\n\r\n  const [selectedEntry, setSelectedEntry] = useState<{ address?: string; name?: string } | null>({\r\n    address: initialValues?.beneficiary || '',\r\n    name: '',\r\n  })\r\n\r\n  const [pristine, setPristine] = useState<boolean>(!initialValues?.beneficiary)\r\n\r\n  useEffect(() => {\r\n    if (selectedEntry === null) {\r\n      mutators?.setBeneficiary?.('')\r\n\r\n      if (pristine) {\r\n        setPristine(false)\r\n      }\r\n    }\r\n  }, [mutators, pristine, selectedEntry])\r\n\r\n  const addressBook = useSelector(currentNetworkAddressBook)\r\n\r\n  const handleScan = (value: string, closeQrModal: () => void) => {\r\n    const scannedAddress = value.startsWith('ethereum:') ? value.replace('ethereum:', '') : value\r\n    const scannedName = addressBook.find(({ address }) => {\r\n      return sameAddress(scannedAddress, address)\r\n    })?.name\r\n\r\n    const addressErrorMessage = mustBeEthereumAddress(scannedAddress)\r\n    if (!addressErrorMessage) {\r\n      mutators?.setBeneficiary?.(scannedAddress)\r\n\r\n      setSelectedEntry({\r\n        name: scannedName,\r\n        address: scannedAddress,\r\n      })\r\n      setAddressErrorMsg('')\r\n    } else setAddressErrorMsg(addressErrorMessage)\r\n\r\n    closeQrModal()\r\n  }\r\n\r\n  const handleOnKeyDown = (e: KeyboardEvent<HTMLElement>): void => {\r\n    if (sameString(e.key, 'Tab')) {\r\n      return\r\n    }\r\n    setSelectedEntry(null)\r\n  }\r\n\r\n  const handleOnClick = () => {\r\n    setSelectedEntry(null)\r\n  }\r\n\r\n  return selectedEntry?.address ? (\r\n    <BeneficiaryInput\r\n      role=\"button\"\r\n      aria-pressed=\"false\"\r\n      tabIndex={0}\r\n      onKeyDown={handleOnKeyDown}\r\n      onClick={handleOnClick}\r\n    >\r\n      <PrefixedEthHashInfo\r\n        hash={selectedEntry.address}\r\n        name={selectedEntry.name}\r\n        showCopyBtn\r\n        showAvatar\r\n        textSize=\"lg\"\r\n        explorerUrl={getExplorerInfo(selectedEntry.address)}\r\n      />\r\n    </BeneficiaryInput>\r\n  ) : (\r\n    <>\r\n      <BeneficiaryInput>\r\n        <AddressBookInput\r\n          fieldMutator={mutators?.setBeneficiary}\r\n          pristine={pristine}\r\n          errorMsg={addressErrorMsg}\r\n          setSelectedEntry={setSelectedEntry}\r\n          setIsValidAddress={() => {}}\r\n          label=\"Beneficiary\"\r\n        />\r\n      </BeneficiaryInput>\r\n      <BeneficiaryScan>\r\n        <ScanQRWrapper handleScan={handleScan} />\r\n      </BeneficiaryScan>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Beneficiary\r\n","import { ReactElement } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport styled from 'styled-components'\r\n\r\nimport TokenSelectField from 'src/routes/safe/components/Balances/SendModal/screens/SendFunds/TokenSelectField'\r\nimport { extendedSafeTokensSelector } from 'src/routes/safe/container/selector'\r\n\r\nconst TokenInput = styled.div`\r\n  grid-area: tokenInput;\r\n`\r\n\r\nconst Token = (): ReactElement => {\r\n  const tokens = useSelector(extendedSafeTokensSelector)\r\n\r\n  return (\r\n    <TokenInput>\r\n      <TokenSelectField tokens={tokens} />\r\n    </TokenInput>\r\n  )\r\n}\r\n\r\nexport default Token\r\n","import { FormState, Mutator } from 'final-form'\r\nimport { ReactElement } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport GnoForm from 'src/components/forms/GnoForm'\r\nimport { Modal } from 'src/components/Modal'\r\nimport { Amount, Beneficiary, ResetTime, Token } from 'src/routes/safe/components/Settings/SpendingLimit/FormFields'\r\nimport { ModalHeader } from 'src/routes/safe/components/Balances/SendModal/screens/ModalHeader'\r\nimport Hairline from 'src/components/layout/Hairline'\r\n\r\nconst FormContainer = styled.div`\r\n  padding: 24px 8px 24px 24px;\r\n  align-items: center;\r\n  display: grid;\r\n  grid-template-columns: 4fr 1fr;\r\n  grid-template-rows: 6fr;\r\n  gap: 16px 8px;\r\n  grid-template-areas:\r\n    'beneficiaryInput beneficiaryScan'\r\n    'tokenInput .'\r\n    'amountInput .'\r\n    'resetTimeLabel resetTimeLabel'\r\n    'resetTimeToggle resetTimeToggle'\r\n    'resetTimeOption resetTimeOption';\r\n`\r\n\r\nconst formMutators: Record<string, Mutator<{ beneficiary: { name: string } }>> = {\r\n  setBeneficiary: (args, state, utils) => {\r\n    utils.changeValue(state, 'beneficiary', () => args[0])\r\n  },\r\n}\r\n\r\ninterface NewSpendingLimitProps {\r\n  initialValues?: Record<string, string>\r\n  onCancel: () => void\r\n  onReview: (values) => void\r\n}\r\n\r\nconst canReview = ({\r\n  invalid,\r\n  submitting,\r\n  dirtyFieldsSinceLastSubmit,\r\n  values: { beneficiary, token, amount },\r\n}: FormState<{ beneficiary: string; token: string; amount: string }>): boolean =>\r\n  !(submitting || invalid || !beneficiary || !token || !amount || !dirtyFieldsSinceLastSubmit)\r\n\r\nconst Create = ({ initialValues, onCancel, onReview }: NewSpendingLimitProps): ReactElement => {\r\n  return (\r\n    <>\r\n      <ModalHeader onClose={onCancel} title=\"New spending limit\" subTitle=\"1 of 2\" />\r\n      <Hairline />\r\n      <GnoForm formMutators={formMutators} onSubmit={onReview} initialValues={initialValues}>\r\n        {(...args) => {\r\n          return (\r\n            <>\r\n              <FormContainer>\r\n                <Beneficiary />\r\n                <Token />\r\n                <Amount />\r\n                <ResetTime />\r\n              </FormContainer>\r\n\r\n              <Modal.Footer>\r\n                <Modal.Footer.Buttons\r\n                  cancelButtonProps={{ onClick: onCancel }}\r\n                  confirmButtonProps={{ disabled: !canReview(args[2]), text: 'Review' }}\r\n                />\r\n              </Modal.Footer>\r\n            </>\r\n          )\r\n        }}\r\n      </GnoForm>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Create\r\n","import { Text } from '@gnosis.pm/safe-react-components'\r\nimport { ReactElement, useEffect, useMemo, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport Col from 'src/components/layout/Col'\r\nimport Row from 'src/components/layout/Row'\r\nimport { ButtonStatus, Modal } from 'src/components/Modal'\r\nimport { ReviewInfoText } from 'src/components/ReviewInfoText'\r\nimport { createTransaction, CreateTransactionArgs } from 'src/logic/safe/store/actions/createTransaction'\r\nimport { SafeRecordProps, SpendingLimit } from 'src/logic/safe/store/models/safe'\r\nimport {\r\n  addSpendingLimitBeneficiaryMultiSendTx,\r\n  currentMinutes,\r\n  enableSpendingLimitModuleMultiSendTx,\r\n  getResetSpendingLimitTx,\r\n  setSpendingLimitMultiSendTx,\r\n  setSpendingLimitTx,\r\n  spendingLimitMultiSendTx,\r\n  SpendingLimitRow,\r\n} from 'src/logic/safe/utils/spendingLimits'\r\nimport { MultiSendTx } from 'src/logic/safe/transactions/multisend'\r\nimport { makeToken, Token } from 'src/logic/tokens/store/model/token'\r\nimport { fromTokenUnit, toTokenUnit } from 'src/logic/tokens/utils/humanReadableValue'\r\nimport { sameAddress } from 'src/logic/wallets/ethAddresses'\r\nimport { getResetTimeOptions } from 'src/routes/safe/components/Settings/SpendingLimit/FormFields/ResetTime'\r\nimport { AddressInfo, ResetTimeInfo, TokenInfo } from 'src/routes/safe/components/Settings/SpendingLimit/InfoDisplay'\r\nimport { currentSafe } from 'src/logic/safe/store/selectors'\r\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\r\nimport { TxParametersDetail } from 'src/routes/safe/components/Transactions/helpers/TxParametersDetail'\r\nimport { EditableTxParameters } from 'src/routes/safe/components/Transactions/helpers/EditableTxParameters'\r\nimport Hairline from 'src/components/layout/Hairline'\r\nimport { EstimationStatus, useEstimateTransactionGas } from 'src/logic/hooks/useEstimateTransactionGas'\r\nimport { useEstimationStatus } from 'src/logic/hooks/useEstimationStatus'\r\nimport { isModuleEnabled } from 'src/logic/safe/utils/modules'\r\nimport { SPENDING_LIMIT_MODULE_ADDRESS } from 'src/utils/constants'\r\nimport { ModalHeader } from 'src/routes/safe/components/Balances/SendModal/screens/ModalHeader'\r\n\r\nimport { ActionCallback, CREATE } from '.'\r\n\r\nconst useExistentSpendingLimit = ({\r\n  spendingLimits,\r\n  txToken,\r\n  values,\r\n}: {\r\n  spendingLimits?: SafeRecordProps['spendingLimits']\r\n  txToken: Token\r\n  values: ReviewSpendingLimitProps['values']\r\n}) => {\r\n  // undefined: before setting a value\r\n  // null: if no previous value\r\n  // SpendingLimit: if previous value exists\r\n  return useMemo<SpendingLimit | null>(() => {\r\n    // if `delegate` already exist, check what tokens were delegated to the _beneficiary_ `getTokens(safe, delegate)`\r\n    const currentDelegate = spendingLimits?.find(\r\n      ({ delegate, token }) => sameAddress(delegate, values.beneficiary) && sameAddress(token, values.token),\r\n    )\r\n\r\n    // let the user know that is about to replace an existent allowance\r\n    if (currentDelegate !== undefined) {\r\n      return {\r\n        ...currentDelegate,\r\n        amount: fromTokenUnit(currentDelegate.amount, txToken.decimals),\r\n      }\r\n    } else {\r\n      return null\r\n    }\r\n  }, [spendingLimits, txToken.decimals, values.beneficiary, values.token])\r\n}\r\n\r\nconst calculateSpendingLimitsTxData = (\r\n  safeAddress: string,\r\n  safeVersion: string,\r\n  spendingLimits: SpendingLimit[] | null | undefined,\r\n  existentSpendingLimit: SpendingLimit | null,\r\n  txToken: Token,\r\n  values: Record<string, string>,\r\n  modules: string[],\r\n  txParameters?: TxParameters,\r\n): {\r\n  spendingLimitTxData: CreateTransactionArgs\r\n  transactions: MultiSendTx[]\r\n  spendingLimitArgs: {\r\n    beneficiary: string\r\n    token: string\r\n    spendingLimitInWei: string\r\n    resetTimeMin: number\r\n    resetBaseMin: number\r\n  }\r\n} => {\r\n  const isSpendingLimitEnabled = isModuleEnabled(modules, SPENDING_LIMIT_MODULE_ADDRESS)\r\n  const transactions: MultiSendTx[] = []\r\n\r\n  // is spendingLimit module enabled? -> if not, create the tx to enable it, and encode it\r\n  if (!isSpendingLimitEnabled && safeAddress) {\r\n    transactions.push(enableSpendingLimitModuleMultiSendTx(safeAddress, safeVersion))\r\n  }\r\n\r\n  // does `delegate` already exist? (`getDelegates`, previously queried to build the table with allowances (??))\r\n  //                                  ^ - shall we rely on this or query the list of delegates once again?\r\n  const isDelegateAlreadyAdded =\r\n    spendingLimits?.some(({ delegate }) => sameAddress(delegate, values?.beneficiary)) ?? false\r\n\r\n  // if `delegate` does not exist, add it by calling `addDelegate(beneficiary)`\r\n  if (!isDelegateAlreadyAdded && values?.beneficiary) {\r\n    transactions.push(addSpendingLimitBeneficiaryMultiSendTx(values.beneficiary))\r\n  }\r\n\r\n  if (existentSpendingLimit && existentSpendingLimit.spent !== '0') {\r\n    transactions.push(getResetSpendingLimitTx(existentSpendingLimit.delegate, txToken.address))\r\n  }\r\n\r\n  // prepare the setAllowance tx\r\n  const startTime = currentMinutes() - 30\r\n  const spendingLimitArgs = {\r\n    beneficiary: values.beneficiary,\r\n    token: values.token,\r\n    spendingLimitInWei: toTokenUnit(values.amount, txToken.decimals),\r\n    resetTimeMin: values.withResetTime ? +values.resetTime : 0,\r\n    resetBaseMin: values.withResetTime ? startTime : 0,\r\n  }\r\n\r\n  let spendingLimitTxData\r\n  if (safeAddress) {\r\n    // if there's no tx for enable module or adding a delegate, then we avoid using multiSend Tx\r\n    if (transactions.length === 0) {\r\n      spendingLimitTxData = setSpendingLimitTx({ spendingLimitArgs, safeAddress })\r\n    } else {\r\n      const encodedTxForMultisend = setSpendingLimitMultiSendTx({ spendingLimitArgs, safeAddress })\r\n      transactions.push(encodedTxForMultisend)\r\n      spendingLimitTxData = spendingLimitMultiSendTx({ transactions, safeAddress })\r\n    }\r\n\r\n    if (txParameters) {\r\n      spendingLimitTxData.txNonce = txParameters.safeNonce\r\n      spendingLimitTxData.safeTxGas = txParameters.safeTxGas ? txParameters.safeTxGas : undefined\r\n      spendingLimitTxData.ethParameters = txParameters\r\n    }\r\n  }\r\n  return {\r\n    spendingLimitTxData,\r\n    transactions,\r\n    spendingLimitArgs,\r\n  }\r\n}\r\n\r\ninterface ReviewSpendingLimitProps {\r\n  onBack: ActionCallback\r\n  onClose: () => void\r\n  txToken: Token\r\n  values: Record<string, string>\r\n  existentSpendingLimit?: SpendingLimitRow\r\n}\r\n\r\nexport const ReviewSpendingLimits = ({ onBack, onClose, txToken, values }: ReviewSpendingLimitProps): ReactElement => {\r\n  const dispatch = useDispatch()\r\n\r\n  const {\r\n    address: safeAddress = '',\r\n    spendingLimits,\r\n    currentVersion: safeVersion = '',\r\n    modules,\r\n  } = useSelector(currentSafe) ?? {}\r\n  const existentSpendingLimit = useExistentSpendingLimit({ spendingLimits, txToken, values })\r\n  const [estimateGasArgs, setEstimateGasArgs] = useState<Partial<CreateTransactionArgs>>({\r\n    to: '',\r\n    txData: '',\r\n  })\r\n  const [manualSafeTxGas, setManualSafeTxGas] = useState('0')\r\n  const [manualGasPrice, setManualGasPrice] = useState<string | undefined>()\r\n  const [manualGasLimit, setManualGasLimit] = useState<string | undefined>()\r\n\r\n  const {\r\n    gasCostFormatted,\r\n    txEstimationExecutionStatus,\r\n    isExecution,\r\n    isCreation,\r\n    isOffChainSignature,\r\n    gasPrice,\r\n    gasPriceFormatted,\r\n    gasLimit,\r\n    gasEstimation,\r\n  } = useEstimateTransactionGas({\r\n    txData: estimateGasArgs.txData as string,\r\n    txRecipient: estimateGasArgs.to as string,\r\n    operation: estimateGasArgs.operation,\r\n    safeTxGas: manualSafeTxGas,\r\n    manualGasPrice,\r\n    manualGasLimit,\r\n  })\r\n\r\n  const [buttonStatus] = useEstimationStatus(txEstimationExecutionStatus)\r\n\r\n  const safeModules = useMemo(() => modules?.map((pair) => pair[1]) || [], [modules])\r\n\r\n  useEffect(() => {\r\n    const { spendingLimitTxData } = calculateSpendingLimitsTxData(\r\n      safeAddress,\r\n      safeVersion,\r\n      spendingLimits,\r\n      existentSpendingLimit,\r\n      txToken,\r\n      values,\r\n      safeModules,\r\n    )\r\n    setEstimateGasArgs(spendingLimitTxData)\r\n  }, [safeAddress, safeVersion, spendingLimits, existentSpendingLimit, txToken, values, safeModules])\r\n\r\n  const handleSubmit = (txParameters: TxParameters): void => {\r\n    const { ethGasPrice, ethGasLimit, ethGasPriceInGWei } = txParameters\r\n    const advancedOptionsTxParameters = {\r\n      ...txParameters,\r\n      ethGasPrice: ethGasPrice || gasPrice,\r\n      ethGasPriceInGWei: ethGasPriceInGWei || gasPriceFormatted,\r\n      ethGasLimit: ethGasLimit || gasLimit,\r\n    }\r\n\r\n    if (safeAddress) {\r\n      const { spendingLimitTxData } = calculateSpendingLimitsTxData(\r\n        safeAddress,\r\n        safeVersion,\r\n        spendingLimits,\r\n        existentSpendingLimit,\r\n        txToken,\r\n        values,\r\n        safeModules,\r\n        advancedOptionsTxParameters,\r\n      )\r\n\r\n      dispatch(createTransaction(spendingLimitTxData))\r\n    }\r\n  }\r\n\r\n  const resetTimeLabel = useMemo(\r\n    () => (values.withResetTime ? getResetTimeOptions().find(({ value }) => value === values.resetTime)?.label : ''),\r\n    [values.resetTime, values.withResetTime],\r\n  )\r\n\r\n  const previousResetTime = (existentSpendingLimit: SpendingLimit) =>\r\n    getResetTimeOptions().find(({ value }) => value === (+existentSpendingLimit.resetTimeMin).toString())?.label ??\r\n    'One-time spending limit'\r\n\r\n  const closeEditModalCallback = (txParameters: TxParameters) => {\r\n    const oldGasPrice = gasPriceFormatted\r\n    const newGasPrice = txParameters.ethGasPrice\r\n    const oldSafeTxGas = gasEstimation\r\n    const newSafeTxGas = txParameters.safeTxGas\r\n\r\n    if (newGasPrice && oldGasPrice !== newGasPrice) {\r\n      setManualGasPrice(txParameters.ethGasPrice)\r\n    }\r\n\r\n    if (txParameters.ethGasLimit && gasLimit !== txParameters.ethGasLimit) {\r\n      setManualGasLimit(txParameters.ethGasLimit)\r\n    }\r\n\r\n    if (newSafeTxGas && oldSafeTxGas !== newSafeTxGas) {\r\n      setManualSafeTxGas(newSafeTxGas)\r\n    }\r\n  }\r\n\r\n  let confirmButtonText = 'Submit'\r\n  if (ButtonStatus.LOADING === buttonStatus) {\r\n    confirmButtonText = txEstimationExecutionStatus === EstimationStatus.LOADING ? 'Estimating' : 'Submitting'\r\n  }\r\n\r\n  return (\r\n    <EditableTxParameters\r\n      isOffChainSignature={isOffChainSignature}\r\n      isExecution={isExecution}\r\n      ethGasLimit={gasLimit}\r\n      ethGasPrice={gasPriceFormatted}\r\n      safeTxGas={gasEstimation}\r\n      closeEditModalCallback={closeEditModalCallback}\r\n    >\r\n      {(txParameters, toggleEditMode) => (\r\n        <>\r\n          <ModalHeader onClose={onClose} title=\"New spending limit\" subTitle=\"2 of 2\" />\r\n          <Hairline />\r\n\r\n          <Modal.Body>\r\n            <Col margin=\"lg\">\r\n              <AddressInfo address={values.beneficiary} title=\"Beneficiary\" />\r\n            </Col>\r\n            <Col margin=\"lg\">\r\n              <TokenInfo\r\n                amount={fromTokenUnit(toTokenUnit(values.amount, txToken.decimals), txToken.decimals)}\r\n                title=\"Amount\"\r\n                token={txToken}\r\n              />\r\n              {existentSpendingLimit && (\r\n                <Text size=\"lg\" color=\"error\">\r\n                  Previous Amount: {existentSpendingLimit.amount}\r\n                </Text>\r\n              )}\r\n            </Col>\r\n            <Col margin=\"lg\">\r\n              <ResetTimeInfo title=\"Reset Time\" label={resetTimeLabel} />\r\n              {existentSpendingLimit && (\r\n                <Row align=\"center\" margin=\"md\">\r\n                  <Text size=\"lg\" color=\"error\">\r\n                    Previous Reset Time: {previousResetTime(existentSpendingLimit)}\r\n                  </Text>\r\n                </Row>\r\n              )}\r\n            </Col>\r\n\r\n            {existentSpendingLimit && (\r\n              <Col margin=\"md\">\r\n                <Text size=\"xl\" color=\"error\" center strong>\r\n                  You are about to replace an existent spending limit\r\n                </Text>\r\n              </Col>\r\n            )}\r\n            {/* Tx Parameters */}\r\n            <TxParametersDetail\r\n              txParameters={txParameters}\r\n              onEdit={toggleEditMode}\r\n              isTransactionCreation={isCreation}\r\n              isTransactionExecution={isExecution}\r\n              isOffChainSignature={isOffChainSignature}\r\n            />\r\n          </Modal.Body>\r\n          <ReviewInfoText\r\n            gasCostFormatted={gasCostFormatted}\r\n            isCreation={isCreation}\r\n            isExecution={isExecution}\r\n            isOffChainSignature={isOffChainSignature}\r\n            safeNonce={txParameters.safeNonce}\r\n            txEstimationExecutionStatus={txEstimationExecutionStatus}\r\n          />\r\n\r\n          <Modal.Footer withoutBorder={buttonStatus !== ButtonStatus.LOADING}>\r\n            <Modal.Footer.Buttons\r\n              cancelButtonProps={{\r\n                onClick: () => onBack({ values: {}, txToken: makeToken(), step: CREATE }),\r\n                text: 'Back',\r\n              }}\r\n              confirmButtonProps={{\r\n                onClick: () => handleSubmit(txParameters),\r\n                disabled: existentSpendingLimit === undefined,\r\n                status: buttonStatus,\r\n                text: confirmButtonText,\r\n              }}\r\n            />\r\n          </Modal.Footer>\r\n        </>\r\n      )}\r\n    </EditableTxParameters>\r\n  )\r\n}\r\n","import { List } from 'immutable'\r\nimport { ReactElement, Reducer, useCallback, useReducer } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport { Modal } from 'src/components/Modal'\r\nimport { makeToken, Token } from 'src/logic/tokens/store/model/token'\r\nimport { sameAddress } from 'src/logic/wallets/ethAddresses'\r\nimport { extendedSafeTokensSelector } from 'src/routes/safe/container/selector'\r\n\r\nimport Create from './Create'\r\nimport { ReviewSpendingLimits } from './Review'\r\n\r\nexport const CREATE = 'CREATE' as const\r\nexport const REVIEW = 'REVIEW' as const\r\n\r\ntype Step = typeof CREATE | typeof REVIEW\r\n\r\ntype State = {\r\n  step: Step\r\n  values: Record<string, string>\r\n  txToken: Token\r\n}\r\n\r\ntype Action = {\r\n  type: Step\r\n  newState: State\r\n  tokens: List<Token>\r\n}\r\n\r\nconst newLimitModalReducer = (state: State, action: Action): State => {\r\n  const { type, newState, tokens } = action\r\n\r\n  switch (type) {\r\n    case CREATE: {\r\n      return {\r\n        ...state,\r\n        step: CREATE,\r\n      }\r\n    }\r\n\r\n    case REVIEW: {\r\n      return {\r\n        ...state,\r\n        ...newState,\r\n        // we lookup into the list of tokens for the selected token info\r\n        txToken: tokens.find((token) => sameAddress(token.address, newState.values.token)) ?? state.txToken,\r\n        step: REVIEW,\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport type ActionCallback = (state: State) => void\r\ntype NewLimitModalHook = [State, { create: ActionCallback; review: ActionCallback }]\r\n\r\nconst useNewLimitModal = (initialStep: Step): NewLimitModalHook => {\r\n  // globally stored tokens\r\n  const tokens = useSelector(extendedSafeTokensSelector)\r\n\r\n  // setup the reducer with initial values\r\n  const [state, dispatch] = useReducer<Reducer<State, Action>, State>(\r\n    newLimitModalReducer,\r\n    {\r\n      step: initialStep,\r\n      txToken: makeToken(),\r\n      values: {},\r\n    },\r\n    (state) => state,\r\n  )\r\n\r\n  // define actions\r\n  const create = useCallback<ActionCallback>((newState) => dispatch({ type: CREATE, newState, tokens }), [tokens])\r\n  const review = useCallback<ActionCallback>((newState) => dispatch({ type: REVIEW, newState, tokens }), [tokens])\r\n\r\n  // returns state and dispatch\r\n  return [state, { create, review }]\r\n}\r\n\r\ninterface SpendingLimitModalProps {\r\n  close: () => void\r\n  open: boolean\r\n}\r\n\r\nexport const NewLimitModal = ({ close, open }: SpendingLimitModalProps): ReactElement => {\r\n  // state and dispatch\r\n  const [{ step, txToken, values }, { create, review }] = useNewLimitModal(CREATE)\r\n\r\n  const handleReview = async (values) => {\r\n    // if form is valid, we update the state to REVIEW and sets values\r\n    review({ step, txToken, values })\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      handleClose={close}\r\n      open={open}\r\n      title=\"New spending limit\"\r\n      description=\"set rules for specific beneficiaries to access funds from this Safe without having to collect all signatures\"\r\n    >\r\n      {step === CREATE && <Create initialValues={values} onCancel={close} onReview={handleReview} />}\r\n      {step === REVIEW && <ReviewSpendingLimits onBack={create} onClose={close} txToken={txToken} values={values} />}\r\n    </Modal>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/asset-amount.7abaa1ae.svg\";","export default __webpack_public_path__ + \"static/media/beneficiary.12f838b7.svg\";","export default __webpack_public_path__ + \"static/media/time.70bc4994.svg\";","import { Text } from '@gnosis.pm/safe-react-components'\r\nimport { ReactElement } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport Img from 'src/components/layout/Img'\r\nimport AssetAmount from './assets/asset-amount.svg'\r\nimport Beneficiary from './assets/beneficiary.svg'\r\nimport Time from './assets/time.svg'\r\n\r\nconst StepWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  margin-top: 20px;\r\n  max-width: 720px;\r\n  text-align: center;\r\n`\r\n\r\nconst Step = styled.div`\r\n  width: 24%;\r\n  min-width: 120px;\r\n  max-width: 164px;\r\n`\r\n\r\nconst StepsLine = styled.div`\r\n  height: 2px;\r\n  flex: 1;\r\n  background: #d4d5d3;\r\n  margin: 46px 0;\r\n`\r\n\r\nexport const NewLimitSteps = (): ReactElement => (\r\n  <StepWrapper>\r\n    <Step>\r\n      <Img alt=\"Select Beneficiary\" title=\"Beneficiary\" height={96} src={Beneficiary} />\r\n\r\n      <Text size=\"lg\" color=\"placeHolder\" strong center>\r\n        Select Beneficiary\r\n      </Text>\r\n\r\n      <Text size=\"lg\" color=\"placeHolder\" center>\r\n        Define beneficiary that will be able to use the allowance.\r\n      </Text>\r\n\r\n      <Text size=\"lg\" color=\"placeHolder\" center>\r\n        The beneficiary does not have to be an owner of this Safe\r\n      </Text>\r\n    </Step>\r\n\r\n    <StepsLine />\r\n\r\n    <Step>\r\n      <Img alt=\"Select asset and amount\" title=\"Asset and Amount\" height={96} src={AssetAmount} />\r\n\r\n      <Text size=\"lg\" color=\"placeHolder\" strong center>\r\n        Select asset and amount\r\n      </Text>\r\n\r\n      <Text size=\"lg\" color=\"placeHolder\" center>\r\n        You can set a spending limit for any asset stored in your Safe\r\n      </Text>\r\n    </Step>\r\n\r\n    <StepsLine />\r\n\r\n    <Step>\r\n      <Img alt=\"Select time\" title=\"Time\" height={96} src={Time} />\r\n\r\n      <Text size=\"lg\" color=\"placeHolder\" strong center>\r\n        Select time\r\n      </Text>\r\n\r\n      <Text size=\"lg\" color=\"placeHolder\" center>\r\n        You can choose to set a one-time spending limit or to have it automatically refill after a defined time-period\r\n      </Text>\r\n    </Step>\r\n  </StepWrapper>\r\n)\r\n","import { Button, Text, Title } from '@gnosis.pm/safe-react-components'\r\nimport { ReactElement, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport styled from 'styled-components'\r\n\r\nimport Block from 'src/components/layout/Block'\r\nimport Col from 'src/components/layout/Col'\r\nimport Row from 'src/components/layout/Row'\r\nimport { currentSafeSpendingLimits } from 'src/logic/safe/store/selectors'\r\nimport { grantedSelector } from 'src/routes/safe/container/selector'\r\n\r\nimport { LimitsTable } from './LimitsTable'\r\nimport { getSpendingLimitData } from './LimitsTable/dataFetcher'\r\nimport { NewLimitModal } from './NewLimitModal'\r\nimport { NewLimitSteps } from './NewLimitSteps'\r\nimport { useStyles } from './style'\r\n\r\nconst InfoText = styled(Text)`\r\n  margin-top: 16px;\r\n`\r\n\r\nconst SpendingLimit = (): ReactElement => {\r\n  const classes = useStyles()\r\n  const granted = useSelector(grantedSelector)\r\n  const allowances = useSelector(currentSafeSpendingLimits)\r\n  const spendingLimitData = getSpendingLimitData(allowances)\r\n\r\n  const [showNewSpendingLimitModal, setShowNewSpendingLimitModal] = useState(false)\r\n  const openNewSpendingLimitModal = () => {\r\n    setShowNewSpendingLimitModal(true)\r\n  }\r\n  const closeNewSpendingLimitModal = () => {\r\n    setShowNewSpendingLimitModal(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Block className={classes.container} grow=\"grow\">\r\n        <Title size=\"xs\" withoutMargin>\r\n          Spending limit\r\n        </Title>\r\n        <InfoText size=\"lg\">\r\n          You can set rules for specific beneficiaries to access funds from this Safe without having to collect all\r\n          signatures.\r\n        </InfoText>\r\n        {spendingLimitData?.length ? <LimitsTable data={spendingLimitData} /> : <NewLimitSteps />}\r\n      </Block>\r\n\r\n      {granted && (\r\n        <>\r\n          <Row align=\"end\" className={classes.buttonRow} grow>\r\n            <Col end=\"xs\">\r\n              <Button\r\n                className={classes.actionButton}\r\n                color=\"primary\"\r\n                size=\"md\"\r\n                data-testid=\"new-spending-limit-button\"\r\n                onClick={openNewSpendingLimitModal}\r\n                variant=\"contained\"\r\n              >\r\n                New spending limit\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          {showNewSpendingLimitModal && <NewLimitModal close={closeNewSpendingLimitModal} open={true} />}\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SpendingLimit\r\n"],"sourceRoot":""}