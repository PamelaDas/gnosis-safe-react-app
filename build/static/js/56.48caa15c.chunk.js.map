{"version":3,"sources":["logic/contractInteraction/sources/ABIService/index.ts","routes/safe/components/Balances/SendModal/screens/ContractInteraction/ContractABI/index.tsx","routes/safe/components/Balances/SendModal/screens/ContractInteraction/FormErrorMessage/index.tsx","routes/safe/components/Balances/SendModal/screens/ContractInteraction/MethodsDropdown/index.tsx","routes/safe/components/Balances/SendModal/screens/ContractInteraction/RenderInputParams/InputComponent/ArrayTypeInput.tsx","routes/safe/components/Balances/SendModal/screens/ContractInteraction/RenderInputParams/InputComponent/index.tsx","routes/safe/components/Balances/SendModal/screens/ContractInteraction/RenderInputParams/index.tsx","routes/safe/components/Balances/SendModal/screens/ContractInteraction/RenderOutputParams/index.tsx","routes/safe/components/Balances/SendModal/screens/ContractInteraction/NativeCoinValue/index.tsx","routes/safe/components/Balances/SendModal/screens/ContractInteraction/index.tsx","routes/safe/components/Balances/SendModal/screens/ModalHeader/style.ts","routes/safe/components/Balances/SendModal/screens/ModalHeader/index.tsx","../node_modules/@material-ui/icons/Search.js","../node_modules/@material-ui/core/esm/ListItemIcon/ListItemIcon.js","routes/safe/components/CurrencyDropdown/img/check.svg","routes/safe/components/CurrencyDropdown/style.ts"],"names":["getMethodSignature","inputs","name","params","map","x","type","join","getSignatureHash","signature","keccak256","toString","isAllowedMethod","getMethodAction","stateMutability","includes","extractUsefulMethods","abi","filter","method","action","methodSignature","signatureHash","getMethodSignatureAndSignatureHash","sort","a","b","toLowerCase","NO_DATA","hasUsefulMethods","JSON","parse","length","e","ContractABI","contractAddress","useField","subscription","value","input","mutators","useForm","setAbiValue","useRef","useEffect","validateAndSetAbi","isEthereumAddress","undefined","mustBeEthereumAddress","mustBeEthereumContractAddress","isEthereumContractAddress","parsePrefixedAddress","address","getContractABI","current","Row","margin","Col","TextAreaField","placeholder","text","validate","useStyles","makeStyles","styles","FormErrorMessage","classes","useFormState","modifiedSinceLastSubmit","submitError","align","className","fullWidth","Paragraph","color","noMargin","size","style","letterSpacing","overflowWrap","MENU_WIDTH","StyledText","styled","Text","MethodsDropdown","onChange","useDropdownStyles","buttonWidth","valid","meta","selectedMethodByDefault","initialValues","selectedMethod","useState","setSelectedMethod","methodsList","setMethodsList","methodsListFiltered","setMethodsListFiltered","anchorEl","setAnchorEl","searchParams","setSearchParams","handleClose","NO_CONTRACT","theme","DropdownListTheme","button","onClick","event","currentTarget","classNames","buttonInner","openMenuButton","Menu","anchorOrigin","horizontal","vertical","elevation","getContentAnchorEl","id","keepMounted","onClose","open","PaperProps","width","transformOrigin","MenuItem","listItemSearch","search","searchIcon","InputBase","root","inputRoot","inputInput","inputProps","target","dropdownItemsScrollWrapper","listItem","chosenMethod","ListItemText","primary","ListItemIcon","iconRight","alt","src","CheckIcon","validator","values","Array","isArray","typePlaceholder","isAddress","isBoolean","isUint","isInt","isByte","ArrayTypeInput","InputComponent","keyValue","Field","component","Checkbox","label","TextField","testId","composeValidators","required","mustBeAddressHash","isArrayParameter","RenderInputParams","validABI","index","key","generateFormFieldKey","output","lineHeight","height","overflowY","RenderOutputParams","results","multipleResults","outputs","multiline","disabled","rowsMax","NativeCoinValue","onSetMax","nativeCurrency","getNativeCurrency","ethBalance","useSelector","currentSafeEthBalance","Boolean","payable","isPayable","ButtonLink","weight","inputAdornment","endAdornment","InputAdornment","position","symbol","mustBeFloat","maxValue","ContractInteraction","setCallResults","isABI","onNext","switchMethod","safeAddress","extractSafeAddress","useMemo","saveForm","handleSubmit","submit","txObject","createTxObject","data","encodeABI","isReadMethod","call","from","result","handleSubmitError","ModalHeader","subTitle","title","Hairline","GnoForm","decorators","ensResolver","formMutators","onSubmit","submitting","pristine","validating","rest","Block","formContainer","SafeInfo","Divider","withArrow","EthAddressInput","onScannedValue","setContractAddress","setMax","Switch","checked","Buttons","requiresMethod","createStyles","heading","padding","md","lg","justifyContent","boxSizing","maxHeight","annotation","secondaryText","marginRight","marginLeft","headingText","fontSize","closeIcon","chainIndicator","alignItems","icon","iconUrl","connectedNetwork","getChainInfo","grow","chainId","ChainIndicator","IconButton","disableRipple","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","React","_default","createElement","d","props","ref","other","_objectWithoutProperties","context","ListContext","_extends","clsx","alignItemsFlexStart","withStyles","minWidth","palette","active","flexShrink","display","marginTop","maxWidth","localFlag","backgroundPosition","backgroundRepeat","backgroundSize","etherFlag","iconLeft","backgroundColor","border","borderRadius","cursor","fontWeight","outline","textAlign","opacity","borderLeft","borderRight","borderTop","content","right","top","borderBottom","overflow","left","pointerEvents","transform","fill"],"mappings":"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","file":"static/js/56.48caa15c.chunk.js","sourcesContent":["import { AbiItem, keccak256 } from 'web3-utils'\r\n\r\nexport interface AllowedAbiItem extends AbiItem {\r\n  name: string\r\n  type: 'function'\r\n}\r\n\r\nexport interface AbiItemExtended extends AllowedAbiItem {\r\n  action: string\r\n  methodSignature: string\r\n  signatureHash: string\r\n}\r\n\r\nexport const getMethodSignature = ({ inputs, name }: AbiItem): string => {\r\n  const params = inputs?.map((x) => x.type).join(',')\r\n  return `${name}(${params})`\r\n}\r\n\r\nexport const getSignatureHash = (signature: string): string => {\r\n  return keccak256(signature).toString()\r\n}\r\n\r\nexport const getMethodHash = (method: AbiItem): string => {\r\n  const signature = getMethodSignature(method)\r\n  return getSignatureHash(signature)\r\n}\r\n\r\nexport const getMethodSignatureAndSignatureHash = (\r\n  method: AbiItem,\r\n): { methodSignature: string; signatureHash: string } => {\r\n  const methodSignature = getMethodSignature(method)\r\n  const signatureHash = getSignatureHash(methodSignature)\r\n  return { methodSignature, signatureHash }\r\n}\r\n\r\nexport const isAllowedMethod = ({ name, type }: AbiItem): boolean => {\r\n  return type === 'function' && !!name\r\n}\r\n\r\nexport const getMethodAction = ({ stateMutability }: AbiItem): 'read' | 'write' => {\r\n  if (!stateMutability) {\r\n    return 'write'\r\n  }\r\n\r\n  return ['view', 'pure'].includes(stateMutability) ? 'read' : 'write'\r\n}\r\n\r\nexport const extractUsefulMethods = (abi: AbiItem[]): AbiItemExtended[] => {\r\n  const allowedAbiItems = abi.filter(isAllowedMethod) as AllowedAbiItem[]\r\n\r\n  return allowedAbiItems\r\n    .map(\r\n      (method): AbiItemExtended => ({\r\n        action: getMethodAction(method),\r\n        ...getMethodSignatureAndSignatureHash(method),\r\n        ...method,\r\n      }),\r\n    )\r\n    .sort(({ name: a }, { name: b }) => {\r\n      return a.toLowerCase() > b.toLowerCase() ? 1 : -1\r\n    })\r\n}\r\n\r\nexport const isPayable = (method: AbiItem | AbiItemExtended): boolean => {\r\n  return Boolean(method?.payable) || method.stateMutability === 'payable'\r\n}\r\n","import { useField, useForm } from 'react-final-form'\r\nimport { useRef, useEffect } from 'react'\r\n\r\nimport { TextAreaField } from 'src/components/forms/TextAreaField'\r\nimport { mustBeEthereumAddress, mustBeEthereumContractAddress } from 'src/components/forms/validator'\r\nimport Col from 'src/components/layout/Col'\r\nimport Row from 'src/components/layout/Row'\r\nimport { getContractABI } from 'src/config'\r\nimport { extractUsefulMethods } from 'src/logic/contractInteraction/sources/ABIService'\r\nimport { parsePrefixedAddress } from 'src/utils/prefixedAddress'\r\n\r\nexport const NO_DATA = 'no data'\r\n\r\nconst hasUsefulMethods = (abi: string): undefined | string => {\r\n  try {\r\n    const parsedABI = extractUsefulMethods(JSON.parse(abi))\r\n\r\n    if (parsedABI.length === 0) {\r\n      return NO_DATA\r\n    }\r\n  } catch (e) {\r\n    return NO_DATA\r\n  }\r\n}\r\n\r\nconst ContractABI = (): React.ReactElement => {\r\n  const {\r\n    input: { value: contractAddress },\r\n  } = useField('contractAddress', { subscription: { value: true } })\r\n  const { mutators } = useForm()\r\n  const setAbiValue = useRef(mutators.setAbiValue)\r\n\r\n  useEffect(() => {\r\n    const validateAndSetAbi = async () => {\r\n      const isEthereumAddress = mustBeEthereumAddress(contractAddress) === undefined\r\n      const isEthereumContractAddress = (await mustBeEthereumContractAddress(contractAddress)) === undefined\r\n\r\n      if (isEthereumAddress && isEthereumContractAddress) {\r\n        const { address } = parsePrefixedAddress(contractAddress)\r\n        const abi = await getContractABI(address)\r\n        const isValidABI = hasUsefulMethods(abi) === undefined\r\n\r\n        // this check may help in scenarios where the user first pastes the ABI,\r\n        // and then sets a Proxy contract that has no useful methods\r\n        if (isValidABI) {\r\n          setAbiValue.current(abi)\r\n        }\r\n      }\r\n    }\r\n\r\n    if (contractAddress) {\r\n      validateAndSetAbi()\r\n    }\r\n  }, [contractAddress])\r\n\r\n  return (\r\n    <Row margin=\"sm\">\r\n      <Col>\r\n        <TextAreaField name=\"abi\" placeholder=\"ABI*\" text=\"ABI*\" type=\"text\" validate={hasUsefulMethods} />\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default ContractABI\r\n","import { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { useFormState } from 'react-final-form'\r\n\r\nimport Row from 'src/components/layout/Row'\r\nimport Paragraph from 'src/components/layout/Paragraph'\r\nimport { styles } from 'src/routes/safe/components/Balances/SendModal/screens/ContractInteraction/style'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\nconst FormErrorMessage = (): React.ReactElement | null => {\r\n  const classes = useStyles()\r\n  const { modifiedSinceLastSubmit, submitError } = useFormState({\r\n    subscription: { modifiedSinceLastSubmit: true, submitError: true },\r\n  })\r\n\r\n  const hasNewSubmitError = !!submitError && !modifiedSinceLastSubmit\r\n  return hasNewSubmitError ? (\r\n    <Row align=\"center\" className={classes.fullWidth} margin=\"xs\">\r\n      <Paragraph color=\"error\" noMargin size=\"md\" style={{ letterSpacing: '-0.5px', overflowWrap: 'anywhere' }}>\r\n        {submitError}\r\n      </Paragraph>\r\n    </Row>\r\n  ) : null\r\n}\r\n\r\nexport default FormErrorMessage\r\n","import InputBase from '@material-ui/core/InputBase'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Menu from '@material-ui/core/Menu'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport { MuiThemeProvider } from '@material-ui/core/styles'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport classNames from 'classnames'\r\nimport { ReactElement, useEffect, useState } from 'react'\r\nimport { useField, useFormState } from 'react-final-form'\r\nimport { AbiItem } from 'web3-utils'\r\n\r\nimport Col from 'src/components/layout/Col'\r\nimport Row from 'src/components/layout/Row'\r\nimport { NO_CONTRACT } from 'src/routes/safe/components/Balances/SendModal/screens/ContractInteraction/utils'\r\nimport CheckIcon from 'src/routes/safe/components/CurrencyDropdown/img/check.svg'\r\nimport { useDropdownStyles } from 'src/routes/safe/components/CurrencyDropdown/style'\r\nimport { DropdownListTheme } from 'src/theme/mui'\r\nimport { extractUsefulMethods, AbiItemExtended } from 'src/logic/contractInteraction/sources/ABIService'\r\nimport { Text } from '@gnosis.pm/safe-react-components'\r\nimport styled from 'styled-components'\r\n\r\nconst MENU_WIDTH = '452px'\r\n\r\nconst StyledText = styled(Text)`\r\n  padding: 4px 0 0 8px;\r\n`\r\n\r\ninterface MethodsDropdownProps {\r\n  onChange: (method: AbiItem) => void\r\n}\r\n\r\nexport const MethodsDropdown = ({ onChange }: MethodsDropdownProps): ReactElement | null => {\r\n  const classes = useDropdownStyles({ buttonWidth: MENU_WIDTH })\r\n  const {\r\n    input: { value: abi },\r\n    meta: { valid },\r\n  } = useField('abi', { subscription: { value: true, valid: true } })\r\n  const {\r\n    initialValues: { selectedMethod: selectedMethodByDefault },\r\n  } = useFormState({ subscription: { initialValues: true } })\r\n  const [selectedMethod, setSelectedMethod] = useState(selectedMethodByDefault ? selectedMethodByDefault : {})\r\n  const [methodsList, setMethodsList] = useState<AbiItemExtended[]>([])\r\n  const [methodsListFiltered, setMethodsListFiltered] = useState<AbiItemExtended[]>([])\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null)\r\n  const [searchParams, setSearchParams] = useState('')\r\n\r\n  useEffect(() => {\r\n    if (abi) {\r\n      try {\r\n        setMethodsList(extractUsefulMethods(JSON.parse(abi)))\r\n      } catch (e) {\r\n        setMethodsList([])\r\n      }\r\n    }\r\n  }, [abi])\r\n\r\n  useEffect(() => {\r\n    setMethodsListFiltered(methodsList.filter(({ name }) => name?.toLowerCase().includes(searchParams.toLowerCase())))\r\n  }, [methodsList, searchParams])\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget)\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null)\r\n  }\r\n\r\n  const onMethodSelectedChanged = (chosenMethod: AbiItem) => {\r\n    setSelectedMethod(chosenMethod)\r\n    onChange(chosenMethod)\r\n    handleClose()\r\n  }\r\n\r\n  if (!valid || !abi || abi === NO_CONTRACT) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <Row margin=\"sm\">\r\n      <Col>\r\n        <MuiThemeProvider theme={DropdownListTheme}>\r\n          <>\r\n            <button className={classes.button} onClick={handleClick} type=\"button\">\r\n              <StyledText\r\n                size=\"md\"\r\n                color=\"placeHolder\"\r\n                className={classNames(classes.buttonInner, anchorEl && classes.openMenuButton)}\r\n              >\r\n                {(selectedMethod as Record<string, string>).name || 'Method'}\r\n              </StyledText>\r\n            </button>\r\n            <Menu\r\n              anchorEl={anchorEl}\r\n              anchorOrigin={{\r\n                horizontal: 'center',\r\n                vertical: 'bottom',\r\n              }}\r\n              elevation={0}\r\n              getContentAnchorEl={null}\r\n              id=\"customizedMenu\"\r\n              keepMounted\r\n              onClose={handleClose}\r\n              open={!!anchorEl}\r\n              PaperProps={{ style: { width: MENU_WIDTH } }}\r\n              transformOrigin={{\r\n                horizontal: 'center',\r\n                vertical: 'top',\r\n              }}\r\n            >\r\n              <MenuItem className={classes.listItemSearch} key=\"0\">\r\n                <div className={classes.search}>\r\n                  <div className={classes.searchIcon}>\r\n                    <SearchIcon />\r\n                  </div>\r\n                  <InputBase\r\n                    classes={{\r\n                      root: classes.inputRoot,\r\n                      input: classes.inputInput,\r\n                    }}\r\n                    inputProps={{ 'aria-label': 'search' }}\r\n                    onChange={(event) => setSearchParams(event.target.value)}\r\n                    placeholder=\"Search…\"\r\n                    value={searchParams}\r\n                  />\r\n                </div>\r\n              </MenuItem>\r\n              <div className={classes.dropdownItemsScrollWrapper}>\r\n                {methodsListFiltered.map((method) => {\r\n                  const { action, name, signatureHash } = method\r\n\r\n                  return (\r\n                    <MenuItem\r\n                      className={classes.listItem}\r\n                      key={signatureHash}\r\n                      onClick={() => onMethodSelectedChanged(method)}\r\n                      value={signatureHash}\r\n                    >\r\n                      <ListItemText primary={name} />\r\n                      <ListItemIcon className={classes.iconRight}>\r\n                        {signatureHash === (selectedMethod as Record<string, string>).signatureHash ? (\r\n                          <img alt=\"checked\" src={CheckIcon} />\r\n                        ) : (\r\n                          <span />\r\n                        )}\r\n                      </ListItemIcon>\r\n                      <ListItemIcon className={classes.iconRight}>\r\n                        <div>{action}</div>\r\n                      </ListItemIcon>\r\n                    </MenuItem>\r\n                  )\r\n                })}\r\n              </div>\r\n            </Menu>\r\n          </>\r\n        </MuiThemeProvider>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n","import { TextAreaField } from 'src/components/forms/TextAreaField'\r\nimport {\r\n  isAddress,\r\n  isBoolean,\r\n  isByte,\r\n  isInt,\r\n  isUint,\r\n} from 'src/routes/safe/components/Balances/SendModal/screens/ContractInteraction/utils'\r\n\r\nconst validator = (value: string): string | undefined => {\r\n  try {\r\n    const values = JSON.parse(value)\r\n\r\n    if (!Array.isArray(values)) {\r\n      return 'be sure to surround value with []'\r\n    }\r\n  } catch (e) {\r\n    return 'invalid format'\r\n  }\r\n}\r\n\r\nconst typePlaceholder = (text: string, type: string): string => {\r\n  if (isAddress(type)) {\r\n    return `${text} E.g.: [\"0xACa94ef8bD5ffEE41947b4585a84BdA5a3d3DA6E\",\"0x1dF62f291b2E969fB0849d99D9Ce41e2F137006e\"]`\r\n  }\r\n\r\n  if (isBoolean(type)) {\r\n    return `${text} E.g.: [true, false, false, true]`\r\n  }\r\n\r\n  if (isUint(type)) {\r\n    return `${text} E.g.: [1000, 212, 320000022, 23]`\r\n  }\r\n\r\n  if (isInt(type)) {\r\n    return `${text} E.g.: [1000, -212, 1232, -1]`\r\n  }\r\n\r\n  if (isByte(type)) {\r\n    return `${text} E.g.: [\"0xc00000000000000000000000000000000000\", \"0xc00000000000000000000000000000000001\"]`\r\n  }\r\n\r\n  return `${text} E.g.: [\"first value\", \"second value\", \"third value\"]`\r\n}\r\n\r\nconst ArrayTypeInput = ({ name, text, type }: { name: string; text: string; type: string }): React.ReactElement => (\r\n  <TextAreaField name={name} placeholder={typePlaceholder(text, type)} text={text} type=\"text\" validate={validator} />\r\n)\r\n\r\nexport default ArrayTypeInput\r\n","import { Checkbox } from '@gnosis.pm/safe-react-components'\r\nimport { ReactElement } from 'react'\r\n\r\nimport Col from 'src/components/layout/Col'\r\nimport Field from 'src/components/forms/Field'\r\nimport TextField from 'src/components/forms/TextField'\r\n\r\nimport { composeValidators, mustBeAddressHash, required } from 'src/components/forms/validator'\r\nimport { isArrayParameter } from 'src/routes/safe/components/Balances/SendModal/screens/ContractInteraction/utils'\r\nimport ArrayTypeInput from './ArrayTypeInput'\r\n\r\ntype Props = {\r\n  type: string\r\n  keyValue: string\r\n  placeholder: string\r\n}\r\n\r\nexport const InputComponent = ({ type, keyValue, placeholder }: Props): ReactElement | null => {\r\n  if (!type) {\r\n    return null\r\n  }\r\n\r\n  switch (type) {\r\n    case 'bool': {\r\n      const inputProps = {\r\n        'data-testid': keyValue,\r\n      }\r\n      return (\r\n        <Col>\r\n          <Field component={Checkbox} name={keyValue} label={placeholder} type=\"checkbox\" inputProps={inputProps} />\r\n        </Col>\r\n      )\r\n    }\r\n    case 'address': {\r\n      return (\r\n        <Col>\r\n          <Field\r\n            component={TextField}\r\n            name={keyValue}\r\n            placeholder={placeholder}\r\n            testId={keyValue}\r\n            text={placeholder}\r\n            type=\"text\"\r\n            validate={composeValidators(required, mustBeAddressHash)}\r\n          />\r\n        </Col>\r\n      )\r\n    }\r\n    default: {\r\n      return (\r\n        <Col>\r\n          {isArrayParameter(type) ? (\r\n            <ArrayTypeInput name={keyValue} text={placeholder} type={type} />\r\n          ) : (\r\n            <Field\r\n              component={TextField}\r\n              name={keyValue}\r\n              placeholder={placeholder}\r\n              testId={keyValue}\r\n              text={placeholder}\r\n              type=\"text\"\r\n              validate={required}\r\n            />\r\n          )}\r\n        </Col>\r\n      )\r\n    }\r\n  }\r\n}\r\n","import { ReactElement } from 'react'\r\nimport { useField } from 'react-final-form'\r\n\r\nimport Row from 'src/components/layout/Row'\r\n\r\nimport { InputComponent } from './InputComponent'\r\nimport { generateFormFieldKey } from '../utils'\r\nimport { AbiItemExtended } from 'src/logic/contractInteraction/sources/ABIService'\r\n\r\nexport const RenderInputParams = (): ReactElement | null => {\r\n  const {\r\n    meta: { valid: validABI },\r\n  } = useField('abi', { subscription: { valid: true, value: true } })\r\n  const {\r\n    input: { value: method },\r\n  }: { input: { value: AbiItemExtended } } = useField('selectedMethod', { subscription: { value: true } })\r\n  const renderInputs = validABI && !!method && method.inputs?.length\r\n\r\n  return !renderInputs ? null : (\r\n    <>\r\n      {method.inputs?.map(({ name, type }, index) => {\r\n        const placeholder = name ? `${name} (${type})` : type\r\n        const key = generateFormFieldKey(type, method.signatureHash, index)\r\n\r\n        return (\r\n          <Row key={key} margin=\"sm\">\r\n            <InputComponent type={type} keyValue={key} placeholder={placeholder} />\r\n          </Row>\r\n        )\r\n      })}\r\n    </>\r\n  )\r\n}\r\n","import { ReactElement } from 'react'\r\nimport { useField } from 'react-final-form'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport TextField from 'src/components/forms/TextField'\r\nimport Col from 'src/components/layout/Col'\r\nimport Paragraph from 'src/components/layout/Paragraph'\r\nimport Row from 'src/components/layout/Row'\r\n\r\nconst useStyles = makeStyles({\r\n  output: {\r\n    '& > div > textarea': {\r\n      letterSpacing: '-0.5px',\r\n      lineHeight: '20px',\r\n      height: '40px',\r\n      overflowY: 'auto',\r\n    },\r\n  },\r\n})\r\n\r\nexport const RenderOutputParams = (): ReactElement | null => {\r\n  const classes = useStyles()\r\n  const {\r\n    input: { value: method },\r\n  }: any = useField('selectedMethod', { subscription: { value: true } })\r\n  const {\r\n    input: { value: results },\r\n  }: any = useField('callResults', { subscription: { value: true } })\r\n  const multipleResults = !!method && method.outputs.length > 1\r\n\r\n  if (results == null || results === '') {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row align=\"left\" margin=\"xs\">\r\n        <Paragraph color=\"primary\" size=\"lg\" style={{ letterSpacing: '-0.5px' }}>\r\n          Call result:\r\n        </Paragraph>\r\n      </Row>\r\n      {method.outputs?.map(({ name, type }, index) => {\r\n        const placeholder = name ? `${name} (${type})` : type\r\n        const key = `methodCallResult-${method.name}_${index}_${type}`\r\n        const value = multipleResults ? results[index] : results\r\n\r\n        return (\r\n          <Row key={key} margin=\"sm\">\r\n            <Col>\r\n              <TextField\r\n                className={classes.output}\r\n                multiline\r\n                disabled\r\n                rowsMax={3}\r\n                input={{ name: key, value: value.toString(), placeholder, type: 'text' }}\r\n                meta={{ valid: true }}\r\n                testId={key}\r\n                text={placeholder}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        )\r\n      })}\r\n    </>\r\n  )\r\n}\r\n","import InputAdornment from '@material-ui/core/InputAdornment'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { useField } from 'react-final-form'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport Field from 'src/components/forms/Field'\r\nimport TextField from 'src/components/forms/TextField'\r\nimport { composeValidators, maxValue, mustBeFloat } from 'src/components/forms/validator'\r\nimport ButtonLink from 'src/components/layout/ButtonLink'\r\nimport Col from 'src/components/layout/Col'\r\nimport Paragraph from 'src/components/layout/Paragraph'\r\nimport Row from 'src/components/layout/Row'\r\nimport { isPayable } from 'src/logic/contractInteraction/sources/ABIService'\r\nimport { styles } from 'src/routes/safe/components/Balances/SendModal/screens/ContractInteraction/style'\r\nimport { currentSafeEthBalance } from 'src/logic/safe/store/selectors'\r\nimport { getNativeCurrency } from 'src/config'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\ninterface NativeCoinValueProps {\r\n  onSetMax: (nativeCoinBalance: string) => void\r\n}\r\n\r\nexport const NativeCoinValue = ({ onSetMax }: NativeCoinValueProps): React.ReactElement | null => {\r\n  const classes = useStyles()\r\n  const nativeCurrency = getNativeCurrency()\r\n  const ethBalance = useSelector(currentSafeEthBalance)\r\n\r\n  const {\r\n    input: { value: method },\r\n  } = useField('selectedMethod', { subscription: { value: true } })\r\n  const disabled = !isPayable(method)\r\n\r\n  if (!ethBalance) {\r\n    return null\r\n  }\r\n\r\n  return disabled ? null : (\r\n    <>\r\n      <Row className={classes.fullWidth} margin=\"xs\">\r\n        <Paragraph color=\"disabled\" noMargin size=\"md\" style={{ letterSpacing: '-0.5px' }}>\r\n          Value\r\n        </Paragraph>\r\n        <ButtonLink\r\n          color={disabled ? 'disabled' : 'secondary'}\r\n          onClick={() => !disabled && onSetMax(ethBalance)}\r\n          weight=\"bold\"\r\n        >\r\n          Send max\r\n        </ButtonLink>\r\n      </Row>\r\n      <Row margin=\"md\">\r\n        <Col>\r\n          <Field\r\n            component={TextField}\r\n            disabled={disabled}\r\n            inputAdornment={{\r\n              endAdornment: <InputAdornment position=\"end\">{nativeCurrency.symbol}</InputAdornment>,\r\n              disabled,\r\n            }}\r\n            name=\"value\"\r\n            placeholder=\"Value\"\r\n            text=\"Value\"\r\n            type=\"text\"\r\n            validate={!disabled && composeValidators(mustBeFloat, maxValue(ethBalance))}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n","import { makeStyles } from '@material-ui/core/styles'\r\nimport { useMemo } from 'react'\r\nimport Switch from '@material-ui/core/Switch'\r\n\r\nimport { styles } from './style'\r\nimport Divider from 'src/components/Divider'\r\nimport GnoForm from 'src/components/forms/GnoForm'\r\nimport Block from 'src/components/layout/Block'\r\nimport Hairline from 'src/components/layout/Hairline'\r\nimport SafeInfo from 'src/routes/safe/components/Balances/SendModal/SafeInfo'\r\nimport Paragraph from 'src/components/layout/Paragraph'\r\nimport Buttons from './Buttons'\r\nimport ContractABI from './ContractABI'\r\nimport { EthAddressInput } from './EthAddressInput'\r\nimport FormErrorMessage from './FormErrorMessage'\r\nimport { MethodsDropdown } from './MethodsDropdown'\r\nimport { RenderInputParams } from './RenderInputParams'\r\nimport { RenderOutputParams } from './RenderOutputParams'\r\nimport { createTxObject, formMutators, handleSubmitError, isReadMethod, ensResolver } from './utils'\r\nimport { TransactionReviewType } from './Review'\r\nimport { NativeCoinValue } from './NativeCoinValue'\r\nimport { ModalHeader } from '../ModalHeader'\r\nimport { extractSafeAddress } from 'src/routes/routes'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\nexport interface CreatedTx {\r\n  contractAddress: string\r\n  data: string\r\n  selectedMethod: TransactionReviewType\r\n  value: string | number\r\n}\r\n\r\nexport type ContractInteractionTx = {\r\n  contractAddress?: string\r\n}\r\n\r\nexport interface ContractInteractionProps {\r\n  contractAddress?: string\r\n  initialValues: ContractInteractionTx\r\n  isABI: boolean\r\n  onClose: () => void\r\n  switchMethod: () => void\r\n  onNext: (tx: CreatedTx, submit: boolean) => void\r\n}\r\n\r\nconst ContractInteraction: React.FC<ContractInteractionProps> = ({\r\n  contractAddress,\r\n  initialValues,\r\n  isABI,\r\n  onClose,\r\n  onNext,\r\n  switchMethod,\r\n}) => {\r\n  const classes = useStyles()\r\n  const safeAddress = extractSafeAddress()\r\n  let setCallResults\r\n\r\n  useMemo(() => {\r\n    if (contractAddress) {\r\n      initialValues.contractAddress = contractAddress\r\n    }\r\n  }, [contractAddress, initialValues])\r\n\r\n  const saveForm = async (values: CreatedTx): Promise<void> => {\r\n    await handleSubmit(values, false)\r\n    switchMethod()\r\n  }\r\n\r\n  const handleSubmit = async (\r\n    { contractAddress, selectedMethod, value, ...values },\r\n    submit = true,\r\n  ): Promise<void | Record<string, string>> => {\r\n    if (value || (contractAddress && selectedMethod)) {\r\n      try {\r\n        const txObject = createTxObject(selectedMethod, contractAddress, values)\r\n        const data = txObject.encodeABI()\r\n\r\n        if (isReadMethod(selectedMethod) && submit) {\r\n          const result = await txObject.call({ from: safeAddress })\r\n          setCallResults(result)\r\n\r\n          // this was a read method, so we won't go to the 'review' screen\r\n          return\r\n        }\r\n\r\n        onNext({ ...values, contractAddress, data, selectedMethod, value }, submit)\r\n      } catch (error) {\r\n        return handleSubmitError(error, values)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ModalHeader onClose={onClose} subTitle=\"1 of 2\" title=\"Contract interaction\" />\r\n      <Hairline />\r\n      <GnoForm\r\n        decorators={[ensResolver]}\r\n        formMutators={formMutators}\r\n        initialValues={initialValues}\r\n        onSubmit={handleSubmit}\r\n        subscription={{ submitting: true, pristine: true, values: true }}\r\n      >\r\n        {(submitting, validating, rest, mutators) => {\r\n          setCallResults = mutators.setCallResults\r\n          return (\r\n            <>\r\n              <Block className={classes.formContainer}>\r\n                <SafeInfo />\r\n                <Divider withArrow />\r\n                <EthAddressInput\r\n                  name=\"contractAddress\"\r\n                  onScannedValue={mutators.setContractAddress}\r\n                  text=\"Contract address*\"\r\n                />\r\n                <ContractABI />\r\n                <MethodsDropdown onChange={mutators.setSelectedMethod} />\r\n                <NativeCoinValue onSetMax={mutators.setMax} />\r\n                <RenderInputParams />\r\n                <RenderOutputParams />\r\n                <FormErrorMessage />\r\n                <Paragraph color=\"disabled\" noMargin size=\"lg\" style={{ letterSpacing: '-0.5px' }}>\r\n                  <Switch checked={!isABI} onChange={() => saveForm(rest.values)} />\r\n                  Use custom data (hex encoded)\r\n                </Paragraph>\r\n              </Block>\r\n              <Buttons onClose={onClose} requiresMethod />\r\n            </>\r\n          )\r\n        }}\r\n      </GnoForm>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ContractInteraction\r\n","import { lg, md, secondaryText } from 'src/theme/variables'\r\nimport { createStyles } from '@material-ui/core'\r\n\r\nexport const styles = createStyles({\r\n  heading: {\r\n    padding: `${md} ${lg}`,\r\n    justifyContent: 'flex-start',\r\n    boxSizing: 'border-box',\r\n    maxHeight: '74px',\r\n  },\r\n  annotation: {\r\n    letterSpacing: '-1px',\r\n    color: secondaryText,\r\n    marginRight: 'auto',\r\n    marginLeft: '20px',\r\n  },\r\n  headingText: {\r\n    fontSize: lg,\r\n  },\r\n  closeIcon: {\r\n    height: '35px',\r\n    width: '35px',\r\n  },\r\n  chainIndicator: {\r\n    padding: `0 ${md}`,\r\n    height: '20px',\r\n    alignItems: 'center',\r\n  },\r\n  icon: {\r\n    width: '20px',\r\n    marginRight: '10px',\r\n  },\r\n})\r\n","import IconButton from '@material-ui/core/IconButton'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Close from '@material-ui/icons/Close'\r\nimport { ReactElement } from 'react'\r\n\r\nimport ChainIndicator from 'src/components/ChainIndicator'\r\nimport Paragraph from 'src/components/layout/Paragraph'\r\nimport Row from 'src/components/layout/Row'\r\nimport { getChainInfo } from 'src/config'\r\nimport { styles } from './style'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\ninterface HeaderProps {\r\n  onClose: () => void\r\n  subTitle?: string\r\n  title: string\r\n  iconUrl?: string\r\n}\r\n\r\nexport const ModalHeader = ({ onClose, subTitle, title, iconUrl }: HeaderProps): ReactElement => {\r\n  const classes = useStyles()\r\n  const connectedNetwork = getChainInfo()\r\n\r\n  return (\r\n    <Row align=\"center\" className={classes.heading} grow>\r\n      {iconUrl && <img className={classes.icon} alt={title} src={iconUrl} />}\r\n      <Paragraph className={classes.headingText} noMargin weight=\"bolder\">\r\n        {title}\r\n      </Paragraph>\r\n      <Paragraph className={classes.annotation}>{subTitle ? subTitle : ''}</Paragraph>\r\n      <Row className={classes.chainIndicator}>\r\n        {connectedNetwork.chainId && <ChainIndicator chainId={connectedNetwork.chainId} />}\r\n      </Row>\r\n      <IconButton disableRipple onClick={onClose}>\r\n        <Close className={classes.closeIcon} />\r\n      </IconButton>\r\n    </Row>\r\n  )\r\n}\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      minWidth: 56,\n      color: theme.palette.action.active,\n      flexShrink: 0,\n      display: 'inline-flex'\n    },\n\n    /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      marginTop: 8\n    }\n  };\n};\n/**\n * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\n */\n\nvar ListItemIcon = /*#__PURE__*/React.forwardRef(function ListItemIcon(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `Icon`, `SvgIcon`,\n   * or a `@material-ui/icons` SVG icon element.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemIcon'\n})(ListItemIcon);","export default __webpack_public_path__ + \"static/media/check.bdba8480.svg\";","import { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst buttonWidth = '140px'\r\nexport const useDropdownStyles = makeStyles({\r\n  listItem: {\r\n    maxWidth: (props: any) => (props.buttonWidth ? props.buttonWidth : buttonWidth),\r\n    boxSizing: 'border-box',\r\n  },\r\n  listItemSearch: {\r\n    maxWidth: (props: any) => (props.buttonWidth ? props.buttonWidth : buttonWidth),\r\n    padding: '0',\r\n    boxSizing: 'border-box',\r\n  },\r\n  localFlag: {\r\n    backgroundPosition: '50% 50%',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'contain',\r\n    height: '20px !important',\r\n    width: '26px !important',\r\n  },\r\n  etherFlag: {\r\n    backgroundPosition: '50% 50%',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'contain',\r\n    width: '26px',\r\n    height: '26px',\r\n  },\r\n  iconLeft: {\r\n    marginRight: '10px',\r\n  },\r\n  iconRight: {\r\n    marginLeft: '18px',\r\n  },\r\n  button: {\r\n    backgroundColor: '#e8e7e6',\r\n    border: 'none',\r\n    borderRadius: '3px',\r\n    boxSizing: 'border-box',\r\n    color: '#5d6d74',\r\n    cursor: 'pointer',\r\n    fontSize: '12px',\r\n    fontWeight: 'normal',\r\n    height: '24px',\r\n    lineHeight: '1.33',\r\n    marginRight: '20px',\r\n    minWidth: (props: any) => (props.buttonWidth ? props.buttonWidth : buttonWidth),\r\n    outline: 'none',\r\n    padding: '0',\r\n    textAlign: 'left',\r\n    '&:active': {\r\n      opacity: '0.8',\r\n    },\r\n  },\r\n  buttonInner: {\r\n    boxSizing: 'border-box',\r\n    display: 'block',\r\n    height: '100%',\r\n    lineHeight: '24px',\r\n    padding: '0 22px 0 8px',\r\n    position: 'relative',\r\n    width: '100%',\r\n    '&::after': {\r\n      borderLeft: '5px solid transparent',\r\n      borderRight: '5px solid transparent',\r\n      borderTop: '5px solid #5d6d74',\r\n      content: '\"\"',\r\n      height: '0',\r\n      position: 'absolute',\r\n      right: '8px',\r\n      top: '9px',\r\n      width: '0',\r\n    },\r\n  },\r\n  openMenuButton: {\r\n    '&::after': {\r\n      borderBottom: '5px solid #5d6d74',\r\n      borderLeft: '5px solid transparent',\r\n      borderRight: '5px solid transparent',\r\n      borderTop: 'none',\r\n    },\r\n  },\r\n  dropdownItemsScrollWrapper: {\r\n    maxHeight: '280px',\r\n    overflow: 'auto',\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: '0',\r\n    backgroundColor: '#fff',\r\n    '&:hover': {\r\n      backgroundColor: '#fff',\r\n    },\r\n    marginRight: 0,\r\n    width: '100%',\r\n  },\r\n  searchIcon: {\r\n    alignItems: 'center',\r\n    display: 'flex',\r\n    height: '100%',\r\n    justifyContent: 'center',\r\n    left: '12px',\r\n    margin: '0',\r\n    pointerEvents: 'none',\r\n    position: 'absolute',\r\n    top: '50%',\r\n    transform: 'translateY(-50%)',\r\n    width: '18px',\r\n    '& path': {\r\n      fill: '#b2b5b2',\r\n    },\r\n  },\r\n  inputRoot: {\r\n    color: '#5d6d74',\r\n    fontSize: '14px',\r\n    fontWeight: 'normal',\r\n    lineHeight: '1.43',\r\n    width: '100%',\r\n  },\r\n  inputInput: {\r\n    boxSizing: 'border-box',\r\n    height: '44px',\r\n    padding: '12px 12px 12px 40px',\r\n    width: '100%',\r\n  },\r\n})\r\n"],"sourceRoot":""}