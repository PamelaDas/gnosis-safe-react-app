{"version":3,"sources":["components/forms/Field/index.tsx","components/forms/TextField/index.tsx","assets/icons/qrcode.svg","components/ScanQRModal/style.ts","components/ScanQRModal/index.tsx","components/ScanQRModal/ScanQRWrapper/index.tsx","components/layout/Heading/index.tsx","components/layout/Heading/index.module.scss","components/NetworkLabel/NetworkLabel.tsx","components/Stepper/stepperContext.tsx","components/forms/AddressInput/index.tsx","components/layout/Page/index.tsx","components/layout/Page/index.module.scss","components/Stepper/Stepper.tsx","components/StepperForm/StepperForm.tsx","logic/hooks/useMnemonicName.ts","logic/hooks/useMnemonicName.dict.ts","routes/LoadSafePage/steps/SelectNetworkStep.tsx","routes/LoadSafePage/fields/loadFields.tsx","routes/LoadSafePage/fields/utils.ts","routes/LoadSafePage/steps/LoadSafeAddressStep.tsx","routes/LoadSafePage/steps/LoadSafeOwnersStep.tsx","routes/LoadSafePage/steps/ReviewLoadStep.tsx","routes/LoadSafePage/LoadSafePage.tsx"],"names":["GnoField","props","overflowStyle","overflow","width","useStyles","makeStyles","createStyles","root","paddingTop","lg","paddingBottom","lineHeight","TextField","input","name","onChange","value","restInput","inputAdornment","meta","multiline","rows","testId","text","rest","classes","helperText","undefined","showError","touched","pristine","valid","hasError","error","modifiedSinceLastSubmit","submitError","errorMessage","isInactiveAndPristineOrUntouched","active","isInvalidAndUntouched","disableUnderline","inputRoot","statusClasses","inputProps","autoComplete","inputRootProps","className","InputProps","style","styles","heading","padding","justifyContent","maxHeight","boxSizing","loaderContainer","height","close","color","secondaryText","detailsContainer","backgroundColor","background","buttonRow","button","marginLeft","sm","ScanQRModal","isOpen","onClose","onScan","useState","fileUploadModalOpen","setFileUploadModalOpen","setError","cameraBlocked","setCameraBlocked","scannerRef","React","openImageDialog","current","useEffect","onFileScannedResolve","successData","console","Modal","description","handleClose","open","title","Row","align","grow","Paragraph","noMargin","size","IconButton","disableRipple","onClick","Hairline","Col","layout","middle","Block","margin","legacyMode","onError","err","data","ref","facingMode","Button","minWidth","variant","qrCodeBtn","cursor","ScanQRWrapper","handleScan","qrModalOpen","setQrModalOpen","closeQrModal","Img","alt","role","src","QRIcon","cx","classNames","bind","Heading","children","tag","truncate","capitalize","module","exports","NetworkLabel","networkInfo","flexGrow","selectedNetwork","getChainInfo","StyledLabel","theme","chainName","styled","span","extraSmallFontSize","xs","border","textColor","fontColor","StepperContext","createContext","useStepper","context","useContext","Object","keys","length","Error","StepperProvider","onFinish","store","disableNextButton","stepsComponents","currentStep","setCurrentStep","steps","Children","toArray","CurrentStepComponent","nextButtonType","nextButtonLabel","isSubmitButton","isFirstStep","isLastStep","customNextButtonLabel","state","onClickPreviousStep","history","goBack","step","onClickNextStep","Provider","AddressInput","placeholder","fieldMutator","validators","defaultValue","disabled","currentInput","setCurrentInput","resolutions","setResolutions","resolvedAddress","isResolving","sanitizedValidators","useCallback","val","parsed","parsePrefixedAddress","composeValidators","address","allValidators","useMemo","required","mustBeEthereumAddress","onValueChange","rawVal","trimSpaces","isValidEnsName","isValidCryptoDomainName","prev","getAddressFromDomain","then","resolverAddr","formattedAddress","checksumAddress","catch","logError","Errors","_101","message","checkedAddress","adornment","endAdornment","position","component","spellCheck","validate","Page","page","StepperComponent","Stepper","activeStep","orientation","map","index","isStepLabelClickable","currentComponent","backButtonLabel","StepLabel","stepLabel","label","StepContent","Paper","elevation","controlStyle","center","backButton","type","nextButton","maxWidth","boxShadow","borderRadius","marginRight","fontWeight","boldFont","palette","secondary","main","StepElement","StepperForm","onSubmit","initialValues","setValidate","onSubmitForm","setOnSubmitForm","filter","Boolean","list","ComponentStep","values","handleSubmit","submitting","StepFormElement","animals","trim","split","adjectives","getRandomItem","arr","Math","floor","random","useMnemonicName","noun","setName","adj","getRandomName","useMnemonicSafeName","networkName","getChainName","toLowerCase","SelectNetworkStep","isNetworkSelectorPopupOpen","setIsNetworkSelectorPopupOpen","openNetworkSelectorPopup","Container","SwitchNetworkContainer","Dialog","StyledDialogTitle","disableTypography","Typography","StyledDialogContent","dividers","List","getChains","network","NetworkLabelItem","chainId","setChainId","DialogContent","DialogTitle","div","FIELD_LOAD_CUSTOM_SAFE_NAME","FIELD_LOAD_SUGGESTED_SAFE_NAME","FIELD_LOAD_SAFE_ADDRESS","FIELD_LOAD_IS_LOADING_SAFE_ADDRESS","FIELD_SAFE_OWNER_LIST","FIELD_SAFE_THRESHOLD","getLoadSafeName","formValues","addressBook","safeAddress","LoadSafeAddressStep","ownersWithName","setOwnersWithName","threshold","setThreshold","isValidSafeAddress","setIsValidSafeAddress","isSafeInfoLoading","setIsSafeInfoLoading","useSelector","currentChainId","loadSafeForm","useForm","currentNetworkAddressBookAsMap","useField","safeAddressError","checkSafeAddress","a","isValidAddress","isChecksumAddress","getSafeInfo","owners","makeAddressBookEntry","change","safeName","getState","StyledLink","href","rel","target","FieldContainer","Field","InputAdornment","CheckIconAddressAdornment","loadSafeAddressStepValidations","errors","CheckCircle","LoadSafeOwnersStep","TitleContainer","TableContainer","HeaderContainer","ownerFieldName","OwnerContainer","initialValue","minMaxLength","OwnerAddressContainer","PrefixedEthHashInfo","hash","showAvatar","showCopyBtn","explorerUrl","getExplorerInfo","md","ReviewLoadStep","userAddress","userAccountSelector","ownerList","ownerListWithNames","owner","ownerNameValue","isUserConnectedWalletASAfeOwner","some","checkIfUserAddressIsAnOwner","DetailsContainer","StyledParagraph","weight","SafeAddressContainer","shortenHash","OwnersContainer","OwnerItemContainer","Load","dispatch","useDispatch","useHistory","extractPrefixedSafeAddress","LOAD_SPECIFIC_SAFE_ROUTE","shortName","safeRandomName","initialFormValues","setInitialFormValues","updateAddressBook","ownerEntries","safeEntry","addressBookSafeLoad","onSubmitLoadSafe","checksummedAddress","buildSafe","safeProps","storedSafes","loadStoredSafes","saveSafes","addOrUpdateSafe","push","generateSafeRoute","SAFE_ROUTES","ASSETS_BALANCES","getShortName","BackIcon"],"mappings":"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","file":"static/js/40.cf0edd14.chunk.js","sourcesContent":["import { Field } from 'react-final-form'\r\n\r\nconst GnoField = (props: any): React.ReactElement => <Field {...props} />\r\n\r\nexport default GnoField\r\n","import MuiTextField from '@material-ui/core/TextField'\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { lg } from 'src/theme/variables'\r\n\r\n// Neded for solving a fix in Windows browsers\r\nconst overflowStyle = {\r\n  overflow: 'hidden',\r\n  width: '100%',\r\n}\r\n\r\nconst styles = () =>\r\n  createStyles({\r\n    root: {\r\n      paddingTop: lg,\r\n      paddingBottom: '12px',\r\n      lineHeight: 0,\r\n    },\r\n  })\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\ntype Props = {\r\n  input: {\r\n    name: string\r\n    onChange?: () => void\r\n    value: string\r\n    placeholder: string\r\n    type: string\r\n  }\r\n  meta: {\r\n    touched?: boolean\r\n    pristine?: boolean\r\n    valid?: boolean\r\n    error?: string\r\n    modifiedSinceLastSubmit?: boolean\r\n    submitError?: boolean\r\n    active?: boolean\r\n  }\r\n  inputAdornment?: { endAdornment: React.ReactElement } | undefined\r\n  multiline: boolean\r\n  rows?: string\r\n  testId: string\r\n  text: string\r\n  disabled?: boolean\r\n  rowsMax?: number\r\n  className?: string\r\n}\r\n\r\nconst TextField = (props: Props): React.ReactElement => {\r\n  const {\r\n    input: { name, onChange, value, ...restInput },\r\n    inputAdornment,\r\n    meta,\r\n    multiline,\r\n    rows,\r\n    testId,\r\n    text,\r\n    ...rest\r\n  } = props\r\n  const classes = useStyles()\r\n  const helperText = value ? text : undefined\r\n  const showError = (meta.touched || !meta.pristine) && !meta.valid\r\n  const hasError = !!meta.error || (!meta.modifiedSinceLastSubmit && !!meta.submitError)\r\n  const errorMessage = meta.error || meta.submitError\r\n  const isInactiveAndPristineOrUntouched = !meta.active && (meta.pristine || !meta.touched)\r\n  const isInvalidAndUntouched = typeof meta.error === 'undefined' ? true : !meta.touched\r\n\r\n  const disableUnderline = isInactiveAndPristineOrUntouched && isInvalidAndUntouched\r\n\r\n  const inputRoot = helperText ? classes.root : ''\r\n  const statusClasses = meta.valid ? 'isValid' : hasError && showError ? 'isInvalid' : ''\r\n  const inputProps = {\r\n    ...restInput,\r\n    autoComplete: 'off',\r\n    'data-testid': testId,\r\n  }\r\n  const inputRootProps = {\r\n    ...inputAdornment,\r\n    className: `${inputRoot} ${statusClasses}`,\r\n    disableUnderline: disableUnderline,\r\n  }\r\n\r\n  return (\r\n    <MuiTextField\r\n      error={hasError && showError}\r\n      helperText={hasError && showError ? errorMessage : helperText || ' '}\r\n      inputProps={inputProps} // blank in order to force to have helper text\r\n      InputProps={inputRootProps}\r\n      multiline={multiline}\r\n      name={name}\r\n      onChange={onChange}\r\n      rows={rows}\r\n      style={overflowStyle}\r\n      value={value}\r\n      {...rest}\r\n    />\r\n  )\r\n}\r\n\r\nexport default TextField\r\n","export default __webpack_public_path__ + \"static/media/qrcode.f0b048aa.svg\";","import { background, lg, secondaryText, sm } from 'src/theme/variables'\r\nimport { createStyles } from '@material-ui/core'\r\n\r\nexport const styles = createStyles({\r\n  heading: {\r\n    padding: lg,\r\n    justifyContent: 'space-between',\r\n    maxHeight: '75px',\r\n    boxSizing: 'border-box',\r\n  },\r\n  loaderContainer: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  close: {\r\n    height: '25px',\r\n    width: '25px',\r\n    color: secondaryText,\r\n  },\r\n  detailsContainer: {\r\n    backgroundColor: background,\r\n    maxHeight: '450px',\r\n  },\r\n  buttonRow: {\r\n    height: '84px',\r\n    justifyContent: 'center',\r\n  },\r\n  button: {\r\n    '&:last-child': {\r\n      marginLeft: sm,\r\n    },\r\n  },\r\n})\r\n","import IconButton from '@material-ui/core/IconButton'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Close from '@material-ui/icons/Close'\r\nimport * as React from 'react'\r\nimport QrReader from 'react-qr-reader'\r\n\r\nimport { styles } from './style'\r\n\r\nimport Modal from 'src/components/Modal'\r\nimport Block from 'src/components/layout/Block'\r\nimport Button from 'src/components/layout/Button'\r\nimport Col from 'src/components/layout/Col'\r\nimport Hairline from 'src/components/layout/Hairline'\r\nimport Paragraph from 'src/components/layout/Paragraph'\r\nimport Row from 'src/components/layout/Row'\r\nimport { useEffect, useState } from 'react'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\ntype Props = {\r\n  isOpen: boolean\r\n  onClose: () => void\r\n  onScan: (value: string) => void\r\n}\r\n\r\nexport const ScanQRModal = ({ isOpen, onClose, onScan }: Props): React.ReactElement => {\r\n  const classes = useStyles()\r\n  const [fileUploadModalOpen, setFileUploadModalOpen] = useState<boolean>(false)\r\n  const [error, setError] = useState<string | null>(null)\r\n  const [cameraBlocked, setCameraBlocked] = useState<boolean>(false)\r\n  const scannerRef: any = React.createRef()\r\n  const openImageDialog = React.useCallback(() => {\r\n    scannerRef.current.openImageDialog()\r\n  }, [scannerRef])\r\n\r\n  useEffect(() => {\r\n    if (!fileUploadModalOpen && cameraBlocked && !error) {\r\n      setFileUploadModalOpen(true)\r\n      openImageDialog()\r\n    }\r\n  }, [cameraBlocked, openImageDialog, fileUploadModalOpen, setFileUploadModalOpen, error])\r\n\r\n  const onFileScannedResolve = (error: Error | null, successData: string | null) => {\r\n    if (error) {\r\n      console.error('QR code error', error)\r\n\r\n      if (error.name === 'NotAllowedError' || error.name === 'PermissionDismissedError') {\r\n        setCameraBlocked(true)\r\n        setFileUploadModalOpen(false)\r\n      } else {\r\n        setError('The QR could not be read')\r\n      }\r\n      return\r\n    }\r\n\r\n    if (successData) {\r\n      onScan(successData)\r\n    } else if (cameraBlocked) {\r\n      setError('The QR could not be read')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal description=\"Receive Tokens Form\" handleClose={onClose} open={isOpen} title=\"Receive Tokens\">\r\n      <Row align=\"center\" className={classes.heading} grow>\r\n        <Paragraph noMargin size=\"xl\">\r\n          Scan QR\r\n        </Paragraph>\r\n        <IconButton disableRipple onClick={onClose}>\r\n          <Close className={classes.close} />\r\n        </IconButton>\r\n      </Row>\r\n      <Hairline />\r\n      <Col className={classes.detailsContainer} layout=\"column\" middle=\"xs\">\r\n        {error && (\r\n          <Block padding=\"md\" margin=\"md\">\r\n            {error}\r\n          </Block>\r\n        )}\r\n        <QrReader\r\n          legacyMode={cameraBlocked}\r\n          onError={(err: Error) => onFileScannedResolve(err, null)}\r\n          onScan={(data: string) => onFileScannedResolve(null, data)}\r\n          ref={scannerRef}\r\n          style={{ width: '400px', height: '400px' }}\r\n          facingMode=\"user\"\r\n        />\r\n      </Col>\r\n      <Hairline />\r\n      <Row align=\"center\" className={classes.buttonRow}>\r\n        <Button className={classes.button} color=\"secondary\" minWidth={154} onClick={onClose}>\r\n          Close\r\n        </Button>\r\n        <Button\r\n          className={classes.button}\r\n          color=\"primary\"\r\n          minWidth={154}\r\n          onClick={() => {\r\n            setCameraBlocked(true)\r\n            setError(null)\r\n            setFileUploadModalOpen(false)\r\n          }}\r\n          variant=\"contained\"\r\n        >\r\n          Upload an image\r\n        </Button>\r\n      </Row>\r\n    </Modal>\r\n  )\r\n}\r\n","import { makeStyles } from '@material-ui/core/styles'\r\nimport { ReactElement, useState } from 'react'\r\n\r\nimport QRIcon from 'src/assets/icons/qrcode.svg'\r\nimport { ScanQRModal } from 'src/components/ScanQRModal'\r\nimport Img from 'src/components/layout/Img'\r\n\r\nconst useStyles = makeStyles({\r\n  qrCodeBtn: {\r\n    cursor: 'pointer',\r\n  },\r\n})\r\n\r\ntype Props = {\r\n  handleScan: (dataResult: string, closeQrModal: () => void) => void\r\n  testId?: string\r\n}\r\n\r\nexport const ScanQRWrapper = ({ handleScan, testId }: Props): ReactElement => {\r\n  const classes = useStyles()\r\n  const [qrModalOpen, setQrModalOpen] = useState(false)\r\n\r\n  const openQrModal = () => {\r\n    setQrModalOpen(true)\r\n  }\r\n\r\n  const closeQrModal = () => {\r\n    setQrModalOpen(false)\r\n  }\r\n\r\n  const onScanFinished = (value: string) => {\r\n    handleScan(value, closeQrModal)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Img\r\n        alt=\"Scan QR\"\r\n        className={classes.qrCodeBtn}\r\n        height={20}\r\n        onClick={() => openQrModal()}\r\n        role=\"button\"\r\n        src={QRIcon}\r\n        testId={testId || 'qr-icon'}\r\n      />\r\n      {qrModalOpen && <ScanQRModal isOpen={qrModalOpen} onClose={closeQrModal} onScan={onScanFinished} />}\r\n    </>\r\n  )\r\n}\r\n","import classNames from 'classnames/bind'\r\nimport * as React from 'react'\r\n\r\nimport styles from './index.module.scss'\r\n\r\nimport { capitalize } from 'src/utils/css'\r\n\r\nconst cx = classNames.bind(styles)\r\n\r\nconst Heading = (props) => {\r\n  const { align, children, className = '', color, margin, tag, testId, truncate, ...rest } = props\r\n\r\n  const classes = cx(className, 'heading', align, tag, margin ? capitalize(margin, 'margin') : undefined, color, {\r\n    truncate,\r\n  })\r\n\r\n  return React.createElement(tag, { ...rest, className: classes, 'data-testid': testId || '' }, children)\r\n}\r\n\r\nexport default Heading\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"Heading_heading__ZbcQo\",\"h1\":\"Heading_h1__-wMHl\",\"h2\":\"Heading_h2__3MQ2g\",\"h3\":\"Heading_h3__2Eii5\",\"h4\":\"Heading_h4__36iJN\",\"center\":\"Heading_center__Rnu47\",\"right\":\"Heading_right__nV1Cb\",\"truncate\":\"Heading_truncate__18Axc\",\"marginSm\":\"Heading_marginSm__3RRHh\",\"marginMd\":\"Heading_marginMd__2NmMz\",\"marginLg\":\"Heading_marginLg__2n10_\",\"marginXl\":\"Heading_marginXl__39Nag\",\"soft\":\"Heading_soft__3dfbK\",\"medium\":\"Heading_medium__XLAVh\",\"dark\":\"Heading_dark__36nFk\",\"fancy\":\"Heading_fancy__2yEZW\",\"warning\":\"Heading_warning__3tDQF\",\"primary\":\"Heading_primary__mUy5R\",\"secondary\":\"Heading_secondary__2YzXF\",\"disabled\":\"Heading_disabled__3ODVW\",\"error\":\"Heading_error__39ITf\",\"white\":\"Heading_white__2fXVW\"};","import { ReactElement } from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChainInfo } from '@gnosis.pm/safe-react-gateway-sdk'\r\n\r\nimport { getChainInfo } from 'src/config'\r\nimport { border, extraSmallFontSize, sm, xs, fontColor } from 'src/theme/variables'\r\n\r\ntype Props = {\r\n  networkInfo?: ChainInfo\r\n  onClick?: () => void\r\n  flexGrow?: boolean\r\n}\r\n\r\nfunction NetworkLabel({ networkInfo, onClick, flexGrow }: Props): ReactElement {\r\n  const selectedNetwork = networkInfo || getChainInfo()\r\n\r\n  return (\r\n    <StyledLabel onClick={onClick} flexGrow={flexGrow} {...selectedNetwork.theme}>\r\n      {selectedNetwork.chainName}\r\n    </StyledLabel>\r\n  )\r\n}\r\n\r\nexport default NetworkLabel\r\n\r\ntype StyledLabelTypes = {\r\n  backgroundColor: string\r\n  textColor: string\r\n  onClick?: () => void\r\n  flexGrow?: boolean\r\n}\r\n\r\nconst StyledLabel = styled.span<StyledLabelTypes>`\r\n  position: relative;\r\n  bottom: 2px;\r\n  line-height: normal;\r\n  display: inline-block;\r\n  min-width: 70px;\r\n  font-size: ${extraSmallFontSize};\r\n  padding: ${xs} ${sm};\r\n  background-color: ${({ backgroundColor }) => backgroundColor ?? border};\r\n  color: ${({ textColor }) => textColor ?? fontColor};\r\n  cursor: ${({ onClick }) => (onClick ? 'pointer' : 'inherit')};\r\n  text-align: center;\r\n  border-radius: 3px;\r\n  text-transform: capitalize;\r\n  flex-grow: ${({ flexGrow }) => (flexGrow ? 1 : 'initial')};\r\n`\r\n","import { useContext, ReactElement, useState, Children, createContext } from 'react'\r\nimport { history } from 'src/routes/routes'\r\n\r\nconst StepperContext = createContext({})\r\n\r\nfunction useStepper(): any {\r\n  const context = useContext(StepperContext)\r\n\r\n  const hasContextDefined = Object.keys(context).length > 0\r\n\r\n  if (!hasContextDefined) {\r\n    throw new Error('useStepper must be used within a StepperProvider!')\r\n  }\r\n\r\n  return context\r\n}\r\n\r\ntype StepperProviderTypes = {\r\n  onFinish?: () => void\r\n  store?: any\r\n  disableNextButton?: boolean\r\n  stepsComponents: ReactElement[]\r\n  children: ReactElement\r\n  testId?: string\r\n}\r\n\r\nfunction StepperProvider({\r\n  onFinish,\r\n  store,\r\n  disableNextButton,\r\n  stepsComponents,\r\n  children,\r\n  testId,\r\n}: StepperProviderTypes): ReactElement {\r\n  const [currentStep, setCurrentStep] = useState(0)\r\n\r\n  const steps = Children.toArray(stepsComponents)\r\n  const CurrentStepComponent: any = steps[currentStep]\r\n\r\n  const nextButtonType = CurrentStepComponent.props.nextButtonType\r\n  const nextButtonLabel = CurrentStepComponent.props.nextButtonLabel\r\n\r\n  const isSubmitButton = nextButtonType === 'submit'\r\n  const isFirstStep = currentStep === 0\r\n  const isLastStep = currentStep > steps.length - 2\r\n  const customNextButtonLabel = nextButtonLabel\r\n\r\n  const onClickPreviousStep = () => {\r\n    if (isFirstStep) {\r\n      history.goBack()\r\n    } else {\r\n      setCurrentStep((step) => step - 1)\r\n    }\r\n  }\r\n\r\n  const onClickNextStep = () => {\r\n    if (isSubmitButton) {\r\n      return\r\n    }\r\n\r\n    if (isLastStep) {\r\n      onFinish?.()\r\n      return\r\n    }\r\n\r\n    setCurrentStep((step) => step + 1)\r\n  }\r\n\r\n  const state = {\r\n    currentStep,\r\n    setCurrentStep,\r\n    steps,\r\n\r\n    CurrentStepComponent,\r\n\r\n    isFirstStep,\r\n    isLastStep,\r\n\r\n    onClickPreviousStep,\r\n    onClickNextStep,\r\n\r\n    disableNextButton,\r\n    nextButtonType,\r\n    customNextButtonLabel,\r\n\r\n    testId,\r\n\r\n    ...store,\r\n  }\r\n\r\n  return <StepperContext.Provider value={state}>{children}</StepperContext.Provider>\r\n}\r\n\r\nexport { useStepper, StepperProvider }\r\n","import { useCallback, useEffect, useMemo, useState } from 'react'\r\nimport { Field } from 'react-final-form'\r\nimport { OnChange } from 'react-final-form-listeners'\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\n\r\nimport TextField from 'src/components/forms/TextField'\r\nimport { Validator, composeValidators, mustBeEthereumAddress, required } from 'src/components/forms/validator'\r\nimport { trimSpaces } from 'src/utils/strings'\r\nimport { getAddressFromDomain } from 'src/logic/wallets/getWeb3'\r\nimport { isValidEnsName, isValidCryptoDomainName } from 'src/logic/wallets/ethAddresses'\r\nimport { checksumAddress } from 'src/utils/checksumAddress'\r\nimport { Errors, logError } from 'src/logic/exceptions/CodedException'\r\nimport { parsePrefixedAddress } from 'src/utils/prefixedAddress'\r\n\r\nexport interface AddressInputProps {\r\n  fieldMutator: (address: string) => void\r\n  name?: string\r\n  text?: string\r\n  placeholder?: string\r\n  inputAdornment?: { endAdornment: React.ReactElement } | undefined | false\r\n  testId: string\r\n  validators?: Validator[]\r\n  defaultValue?: string\r\n  disabled?: boolean\r\n  spellCheck?: boolean\r\n  className?: string\r\n}\r\n\r\nconst AddressInput = ({\r\n  className = '',\r\n  name = 'recipientAddress',\r\n  text = 'Recipient*',\r\n  placeholder = 'Recipient*',\r\n  fieldMutator,\r\n  testId,\r\n  inputAdornment,\r\n  validators = [],\r\n  defaultValue,\r\n  disabled,\r\n}: AddressInputProps): React.ReactElement => {\r\n  const [currentInput, setCurrentInput] = useState<string>('')\r\n  const [resolutions, setResolutions] = useState<Record<string, string | undefined>>({})\r\n  const resolvedAddress = resolutions[currentInput]\r\n  const isResolving = resolvedAddress === ''\r\n\r\n  // External validators must receive an unprefixed address\r\n  const sanitizedValidators = useCallback(\r\n    (val: string) => {\r\n      const parsed = parsePrefixedAddress(val)\r\n      return composeValidators(...validators)(parsed.address)\r\n    },\r\n    [validators],\r\n  )\r\n\r\n  // Internal validators + externally passed validators\r\n  const allValidators = useMemo(\r\n    () => composeValidators(required, mustBeEthereumAddress, sanitizedValidators),\r\n    [sanitizedValidators],\r\n  )\r\n\r\n  const onValueChange = useCallback(\r\n    (rawVal: string) => {\r\n      const address = trimSpaces(rawVal)\r\n\r\n      setCurrentInput(rawVal)\r\n\r\n      // A crypto domain name\r\n      if (isValidEnsName(address) || isValidCryptoDomainName(address)) {\r\n        setResolutions((prev) => ({ ...prev, [rawVal]: '' }))\r\n\r\n        getAddressFromDomain(address)\r\n          .then((resolverAddr) => {\r\n            const formattedAddress = checksumAddress(resolverAddr)\r\n            setResolutions((prev) => ({ ...prev, [rawVal]: formattedAddress }))\r\n          })\r\n          .catch((err) => {\r\n            setResolutions((prev) => ({ ...prev, [rawVal]: undefined }))\r\n            logError(Errors._101, err.message)\r\n          })\r\n      } else {\r\n        // A regular address hash\r\n        if (!mustBeEthereumAddress(address)) {\r\n          const parsed = parsePrefixedAddress(address)\r\n          const checkedAddress = checksumAddress(parsed.address) || parsed.address\r\n\r\n          // Field mutator (parent component) always gets an unprefixed address\r\n          fieldMutator(checkedAddress)\r\n        }\r\n      }\r\n    },\r\n    [setCurrentInput, setResolutions, fieldMutator],\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (resolvedAddress) {\r\n      onValueChange(resolvedAddress)\r\n    }\r\n  }, [resolvedAddress, onValueChange])\r\n\r\n  const adornment = isResolving\r\n    ? {\r\n        endAdornment: (\r\n          <InputAdornment position=\"end\">\r\n            <CircularProgress size=\"16px\" />\r\n          </InputAdornment>\r\n        ),\r\n      }\r\n    : inputAdornment\r\n\r\n  return (\r\n    <>\r\n      <Field\r\n        className={className}\r\n        component={TextField as any}\r\n        defaultValue={defaultValue}\r\n        disabled={disabled}\r\n        inputAdornment={adornment}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        text={text}\r\n        spellCheck={false}\r\n        validate={allValidators}\r\n        inputProps={{\r\n          'data-testid': testId,\r\n        }}\r\n      />\r\n\r\n      <OnChange name={name}>{onValueChange}</OnChange>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AddressInput\r\n","import classNames from 'classnames/bind'\r\n\r\nimport styles from './index.module.scss'\r\n\r\nconst cx = classNames.bind(styles)\r\n\r\nconst Page = ({ align, children, overflow }: any) => (\r\n  <main className={cx(styles.page, align, { overflow })}>{children}</main>\r\n)\r\n\r\nexport default Page\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Page_page__2x8Y1\",\"center\":\"Page_center__3Bcyi\",\"overflow\":\"Page_overflow__2Mdkw\"};","import { ReactElement } from 'react'\r\nimport StepperMUI from '@material-ui/core/Stepper'\r\nimport StepMUI from '@material-ui/core/Step'\r\nimport StepContent from '@material-ui/core/StepContent'\r\nimport StepLabel from '@material-ui/core/StepLabel'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport { makeStyles } from '@material-ui/core/'\r\n\r\nimport Hairline from 'src/components/layout/Hairline'\r\nimport Button from 'src/components/layout/Button'\r\nimport Col from 'src/components/layout/Col'\r\nimport Row from 'src/components/layout/Row'\r\nimport { boldFont, lg, sm } from 'src/theme/variables'\r\nimport { StepperProvider, useStepper } from './stepperContext'\r\n\r\ntype StepperProps = {\r\n  children: ReactElement[]\r\n  onFinish?: () => void\r\n  disableNextButton?: boolean\r\n  nextButtonType?: string\r\n  testId?: string\r\n}\r\n\r\nfunction StepperComponent(): ReactElement {\r\n  const {\r\n    currentStep,\r\n    setCurrentStep,\r\n    steps,\r\n\r\n    onClickPreviousStep,\r\n    onClickNextStep,\r\n\r\n    disableNextButton,\r\n    nextButtonType,\r\n\r\n    testId,\r\n  } = useStepper()\r\n\r\n  return (\r\n    <StepperMUI data-testid={testId} activeStep={currentStep} orientation=\"vertical\">\r\n      {steps.map(function Step(step, index) {\r\n        const isFirstStep = index === 0\r\n        const isStepLabelClickable = currentStep > index\r\n        const classes = useStyles({ isStepLabelClickable })\r\n\r\n        function onClickLabel() {\r\n          if (isStepLabelClickable) {\r\n            setCurrentStep(index)\r\n          }\r\n        }\r\n\r\n        const currentComponent = steps[index]\r\n\r\n        const backButtonLabel = isFirstStep ? 'Cancel' : 'Back'\r\n        const customNextButtonLabel = currentComponent.props.nextButtonLabel\r\n\r\n        const nextButtonLabel = customNextButtonLabel || 'Next'\r\n\r\n        return (\r\n          <StepMUI key={step.props.label}>\r\n            <StepLabel onClick={onClickLabel} className={classes.stepLabel}>\r\n              {step.props.label}\r\n            </StepLabel>\r\n            <StepContent>\r\n              <Paper className={classes.root} elevation={1}>\r\n                {currentComponent}\r\n                <Hairline />\r\n                <Row align=\"center\" grow className={classes.controlStyle}>\r\n                  <Col center=\"xs\" xs={12}>\r\n                    <Button onClick={onClickPreviousStep} size=\"small\" className={classes.backButton} type=\"button\">\r\n                      {backButtonLabel}\r\n                    </Button>\r\n                    <Button\r\n                      onClick={onClickNextStep}\r\n                      color=\"primary\"\r\n                      type={nextButtonType || 'button'}\r\n                      disabled={disableNextButton || step.props.disableNextButton}\r\n                      size=\"small\"\r\n                      className={classes.nextButton}\r\n                      variant=\"contained\"\r\n                    >\r\n                      {nextButtonLabel}\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Paper>\r\n            </StepContent>\r\n          </StepMUI>\r\n        )\r\n      })}\r\n    </StepperMUI>\r\n  )\r\n}\r\n\r\nexport default function Stepper(props: StepperProps): ReactElement {\r\n  return (\r\n    <StepperProvider stepsComponents={props.children} {...props}>\r\n      <StepperComponent />\r\n    </StepperProvider>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: '10px 0 10px 10px',\r\n    maxWidth: '770px',\r\n    boxShadow: '0 0 10px 0 rgba(33,48,77,0.10)',\r\n  },\r\n  controlStyle: {\r\n    backgroundColor: 'white',\r\n    padding: lg,\r\n    borderRadius: sm,\r\n  },\r\n  backButton: {\r\n    marginRight: sm,\r\n    fontWeight: boldFont,\r\n    color: theme.palette.secondary.main,\r\n  },\r\n  nextButton: {\r\n    fontWeight: boldFont,\r\n  },\r\n  stepLabel: {\r\n    cursor: ({ isStepLabelClickable }: any) => (isStepLabelClickable ? 'pointer' : 'inherit'),\r\n  },\r\n}))\r\n\r\nexport type StepElementProps = {\r\n  label: string\r\n  children: JSX.Element\r\n  nextButtonLabel?: string\r\n  nextButtonType?: string\r\n  disableNextButton?: boolean\r\n}\r\n\r\nexport type StepElementType = (props: StepElementProps) => ReactElement\r\n\r\nexport function StepElement({ children }: StepElementProps): ReactElement {\r\n  return children\r\n}\r\n","import React, { JSXElementConstructor, ReactElement, useMemo, useState } from 'react'\r\nimport { useEffect } from 'react'\r\nimport { Form } from 'react-final-form'\r\nimport { Validator } from '../forms/validator'\r\nimport Stepper, { StepElement, StepElementType } from '../Stepper/Stepper'\r\nimport { useStepper } from '../Stepper/stepperContext'\r\n\r\ntype StepperFormProps = {\r\n  testId: string\r\n  onSubmit: (values) => void\r\n  initialValues?: any\r\n  children: (JSX.Element | false | null)[]\r\n}\r\n\r\nfunction StepperForm({ children, onSubmit, testId, initialValues }: StepperFormProps): ReactElement {\r\n  const [validate, setValidate] = useState<(values) => Validator>()\r\n  const [onSubmitForm, setOnSubmitForm] = useState<(values) => void>()\r\n  const steps = useMemo(\r\n    () =>\r\n      React.Children.toArray(children)\r\n        .filter(Boolean)\r\n        .map((step: ReactElement, index, list) => {\r\n          function ComponentStep() {\r\n            const { setCurrentStep } = useStepper()\r\n            useEffect(() => {\r\n              const isLastStep = index === list.length - 1\r\n              setValidate(() => step.props.validate)\r\n              if (isLastStep) {\r\n                setOnSubmitForm(() => (values) => onSubmit(values))\r\n              } else {\r\n                setOnSubmitForm(() => () => {\r\n                  setCurrentStep((step) => step + 1)\r\n                })\r\n              }\r\n            }, [setCurrentStep])\r\n            return step.props.children\r\n          }\r\n\r\n          return (\r\n            <StepElement key={step.props.label} nextButtonType={'submit'} {...step.props}>\r\n              <ComponentStep />\r\n            </StepElement>\r\n          )\r\n        }),\r\n    [children, onSubmit],\r\n  )\r\n  return (\r\n    <Form\r\n      onSubmit={(values) => onSubmitForm?.(values)}\r\n      initialValues={initialValues}\r\n      validate={(values) => validate?.(values)}\r\n    >\r\n      {({ handleSubmit, submitting }) => (\r\n        <form data-testid={testId} onSubmit={handleSubmit}>\r\n          <Stepper disableNextButton={submitting} nextButtonType={'submit'}>\r\n            {steps}\r\n          </Stepper>\r\n        </form>\r\n      )}\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default StepperForm\r\n\r\nexport type StepFormElementProps = {\r\n  label: string\r\n  validate?: (values) => Record<string, unknown> | Promise<Record<string, string>>\r\n  nextButtonLabel?: string\r\n  children: ReactElement<any, string | JSXElementConstructor<any>>\r\n  disableNextButton?: boolean\r\n}\r\nexport type StepFormElementType = (props: StepFormElementProps) => StepElementType[]\r\n\r\nexport function StepFormElement({ children }: StepFormElementProps): ReactElement {\r\n  return children\r\n}\r\n","import { useEffect, useState } from 'react'\r\n\r\nimport { getChainName } from 'src/config'\r\nimport { animalsDict, adjectivesDict } from './useMnemonicName.dict'\r\n\r\nconst animals: string[] = animalsDict.trim().split(/\\s+/)\r\nconst adjectives: string[] = adjectivesDict.trim().split(/\\s+/)\r\n\r\nconst getRandomItem = <T>(arr: T[]): T => {\r\n  return arr[Math.floor(arr.length * Math.random())]\r\n}\r\n\r\nexport const getRandomName = (noun = getRandomItem<string>(animals)): string => {\r\n  const adj = getRandomItem<string>(adjectives)\r\n  return `${adj}-${noun}`\r\n}\r\n\r\nexport const useMnemonicName = (noun?: string): string => {\r\n  const [name, setName] = useState<string>('')\r\n\r\n  useEffect(() => {\r\n    setName(getRandomName(noun))\r\n  }, [noun])\r\n\r\n  return name\r\n}\r\n\r\nexport const useMnemonicSafeName = (): string => {\r\n  const networkName = getChainName().toLowerCase()\r\n  return useMnemonicName(`${networkName}-safe`)\r\n}\r\n","/**\r\n * The word lists are from https://github.com/mmkal/ts/tree/main/packages/memorable-moniker/src/dict\r\n */\r\nexport const animalsDict = `\r\naardvark\r\nalbatross\r\nalligator\r\nalpaca\r\nant\r\nanteater\r\nantelope\r\nape\r\narmadillo\r\nbaboon\r\nbadger\r\nbarracuda\r\nbat\r\nbear\r\nbeaver\r\nbee\r\nbinturong\r\nbird\r\nbison\r\nbluebird\r\nboar\r\nbobcat\r\nbuffalo\r\nbutterfly\r\ncamel\r\ncapybara\r\ncaracal\r\ncaribou\r\ncassowary\r\ncat\r\ncaterpillar\r\ncattle\r\nchameleon\r\nchamois\r\ncheetah\r\nchicken\r\nchimpanzee\r\nchinchilla\r\nchough\r\ncoati\r\ncobra\r\ncockroach\r\ncod\r\ncormorant\r\ncougar\r\ncoyote\r\ncrab\r\ncrane\r\ncricket\r\ncrocodile\r\ncrow\r\ncuckoo\r\ncurlew\r\ndeer\r\ndegu\r\ndhole\r\ndingo\r\ndinosaur\r\ndog\r\ndogfish\r\ndolphin\r\ndonkey\r\ndotterel\r\ndove\r\ndragonfly\r\nduck\r\ndugong\r\ndunlin\r\neagle\r\nechidna\r\neel\r\neland\r\nelephant\r\nelk\r\nemu\r\nfalcon\r\nferret\r\nfinch\r\nfish\r\nflamingo\r\nfly\r\nfox\r\nfrog\r\ngaur\r\ngazelle\r\ngecko\r\ngerbil\r\ngiraffe\r\ngnat\r\ngnu\r\ngoat\r\ngoldfinch\r\ngoosander\r\ngoose\r\ngorilla\r\ngoshawk\r\ngrasshopper\r\ngrouse\r\nguanaco\r\nguinea-pig\r\ngull\r\nhamster\r\nhare\r\nhawk\r\nhedgehog\r\nheron\r\nherring\r\nhippopotamus\r\nhoatzin\r\nhoopoe\r\nhornet\r\nhorse\r\nhuman\r\nhummingbird\r\nhyena\r\nibex\r\nibis\r\niguana\r\nimpala\r\njackal\r\njaguar\r\njay\r\njellyfish\r\njerboa\r\nkangaroo\r\nkingfisher\r\nkinkajou\r\nkoala\r\nkomodo-dragon\r\nkookaburra\r\nkouprey\r\nkudu\r\nlapwing\r\nlark\r\nlemur\r\nleopard\r\nlion\r\nlizard\r\nllama\r\nlobster\r\nlocust\r\nloris\r\nlouse\r\nlynx\r\nlyrebird\r\nmacaque\r\nmacaw\r\nmagpie\r\nmallard\r\nmammoth\r\nmanatee\r\nmandrill\r\nmarmoset\r\nmarmot\r\nmeerkat\r\nmink\r\nmole\r\nmongoose\r\nmonkey\r\nmoose\r\nmosquito\r\nmouse\r\nmyna\r\nnarwhal\r\nnewt\r\nnightingale\r\noctopus\r\nokapi\r\nopossum\r\norangutan\r\noryx\r\nostrich\r\notter\r\nowl\r\noyster\r\npanther\r\nparrot\r\npanda\r\npartridge\r\npeafowl\r\npelican\r\npenguin\r\npheasant\r\npig\r\npigeon\r\npika\r\npolar-bear\r\npony\r\nporcupine\r\nporpoise\r\npug\r\nquail\r\nquelea\r\nquetzal\r\nrabbit\r\nraccoon\r\nram\r\nrat\r\nraven\r\nred-deer\r\nred-panda\r\nreindeer\r\nrhea\r\nrhinoceros\r\nrook\r\nsalamander\r\nsalmon\r\nsand-dollar\r\nsandpiper\r\nsardine\r\nsea-lion\r\nseahorse\r\nseal\r\nshark\r\nsheep\r\nshrew\r\nsiamang\r\nskunk\r\nsloth\r\nsnail\r\nsnake\r\nspider\r\nsquid\r\nsquirrel\r\nstarling\r\nstegosaurus\r\nswan\r\ntamarin\r\ntapir\r\ntarsier\r\ntermite\r\ntiger\r\ntoad\r\ntoucan\r\nturaco\r\nturkey\r\nturtle\r\numbrellabird\r\nvinegaroon\r\nviper\r\nvulture\r\nwallaby\r\nwalrus\r\nwasp\r\nwaxwing\r\nweasel\r\nwhale\r\nwobbegong\r\nwolf\r\nwolverine\r\nwombat\r\nwoodpecker\r\nworm\r\nwren\r\nyak\r\nzebra\r\n`\r\n\r\nexport const adjectivesDict = `\r\nadmirable\r\nenergetic\r\nlucky\r\naffable\r\nenjoyable\r\nmagnificent\r\naffectionate\r\nenthusiastic\r\nmarvelous\r\nagreeable\r\neuphoric\r\nmeritorious\r\namazing\r\nexcellent\r\nmerry\r\namiable\r\nexceptional\r\nmild-mannered\r\namused\r\nexcited\r\nnice\r\namusing\r\nextraordinary\r\nnoble\r\nanimated\r\nexultant\r\noutstanding\r\nappreciative\r\nfabulous\r\noverjoyed\r\nastonishing\r\nfaithful\r\npassionate\r\nauthentic\r\nfantastic\r\npeaceful\r\nbelievable\r\nfervent\r\nplacid\r\nbenevolent\r\nfortunate\r\npleasant\r\nblissful\r\nfriendly\r\npleasing\r\nbouncy\r\nfun\r\npleasurable\r\nbrilliant\r\ngenuine\r\npositive\r\nbubbly\r\nglad\r\npraiseworthy\r\nbuoyant\r\nglorious\r\nprominent\r\ncalm\r\ngood\r\nproud\r\ncharming\r\ngood-humored\r\nrelaxed\r\ncheerful\r\ngood-natured\r\nreliable\r\ncheery\r\ngracious\r\nrespectable\r\nclever\r\ngrateful\r\nsharp\r\ncomfortable\r\ngreat\r\nsincere\r\ncomical\r\nhappy\r\nspirited\r\ncommendable\r\nheartfelt\r\nsplendid\r\nconfident\r\nhonest\r\nsuperb\r\ncongenial\r\nhonorable\r\nsuperior\r\ncontent\r\nhopeful\r\nterrific\r\ncordial\r\nhumorous\r\nthankful\r\ncourteous\r\nincredible\r\ntremendous\r\ndedicated\r\ninspirational\r\ntriumphant\r\ndelighted\r\njolly\r\ntrustworthy\r\ndelightful\r\njovial\r\ntrusty\r\ndependable\r\njoyful\r\ntruthful\r\ndevoted\r\njoyous\r\nuplifting\r\ndocile\r\njubilant\r\nvictorious\r\ndynamic\r\nkeen\r\nvigorous\r\neager\r\nkind\r\nvirtuous\r\nearnest\r\nlaudable\r\nvivacious\r\neasygoing\r\nlaughing\r\nwhimsical\r\nebullient\r\nlikable\r\nwitty\r\necstatic\r\nlively\r\nwonderful\r\nelated\r\nlovely\r\nworthy\r\nemphatic\r\nloving\r\nzealous\r\nenchanting\r\nloyal\r\nzestful\r\n`\r\n","import { ReactElement, useState } from 'react'\r\nimport { ButtonLink } from '@gnosis.pm/safe-react-components'\r\nimport styled from 'styled-components'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport List from '@material-ui/core/List'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport Block from 'src/components/layout/Block'\r\nimport { ChainId } from 'src/config/chain.d'\r\nimport { setChainId } from 'src/logic/config/utils'\r\n\r\nimport { lg } from 'src/theme/variables'\r\nimport Paragraph from 'src/components/layout/Paragraph'\r\nimport NetworkLabel from 'src/components/NetworkLabel/NetworkLabel'\r\nimport { getChains } from 'src/config/cache/chains'\r\n\r\nexport const selectNetworkStepLabel = 'Select network'\r\n\r\nfunction SelectNetworkStep(): ReactElement {\r\n  const [isNetworkSelectorPopupOpen, setIsNetworkSelectorPopupOpen] = useState(false)\r\n\r\n  function openNetworkSelectorPopup() {\r\n    setIsNetworkSelectorPopupOpen(true)\r\n  }\r\n\r\n  const onNetworkSwitch = (chainId: ChainId) => {\r\n    setChainId(chainId)\r\n    setIsNetworkSelectorPopupOpen(false)\r\n  }\r\n\r\n  return (\r\n    <Container data-testid={'select-network-step'}>\r\n      <Paragraph color=\"primary\" noMargin size=\"lg\">\r\n        Select network on which the Safe was created: <NetworkLabel onClick={openNetworkSelectorPopup} />\r\n      </Paragraph>\r\n      <SwitchNetworkContainer>\r\n        <ButtonLink type=\"button\" onClick={openNetworkSelectorPopup} color=\"primary\">\r\n          Switch Network\r\n        </ButtonLink>\r\n      </SwitchNetworkContainer>\r\n      <Dialog\r\n        onClose={() => setIsNetworkSelectorPopupOpen(false)}\r\n        aria-labelledby=\"select-network\"\r\n        data-testid={'select-network-popup'}\r\n        open={isNetworkSelectorPopupOpen}\r\n      >\r\n        <StyledDialogTitle disableTypography>\r\n          <Typography variant={'h5'}>Select Network</Typography>\r\n          <IconButton aria-label=\"close\" onClick={() => setIsNetworkSelectorPopupOpen(false)}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </StyledDialogTitle>\r\n        <StyledDialogContent dividers>\r\n          <List component=\"div\">\r\n            {getChains().map((network) => (\r\n              <NetworkLabelItem key={network.chainId} role=\"button\" onClick={() => onNetworkSwitch(network.chainId)}>\r\n                <NetworkLabel networkInfo={network} flexGrow />\r\n              </NetworkLabelItem>\r\n            ))}\r\n          </List>\r\n        </StyledDialogContent>\r\n      </Dialog>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default SelectNetworkStep\r\n\r\nconst Container = styled(Block)`\r\n  padding: ${lg};\r\n`\r\n\r\nconst StyledDialogContent = styled(DialogContent)`\r\n  min-width: 500px;\r\n`\r\n\r\nconst StyledDialogTitle = styled(DialogTitle)`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 16px 24px;\r\n`\r\nconst SwitchNetworkContainer = styled.div`\r\n  margin: ${lg};\r\n  display: flex;\r\n  justify-content: center;\r\n`\r\nconst NetworkLabelItem = styled.div`\r\n  display: flex;\r\n  margin: ${lg} auto;\r\n  cursor: pointer;\r\n  max-width: 50%;\r\n\r\n  & > span {\r\n    font-size: 13px;\r\n  }\r\n`\r\n","export const FIELD_LOAD_CUSTOM_SAFE_NAME = 'customSafeName'\r\nexport const FIELD_LOAD_SUGGESTED_SAFE_NAME = 'suggestedSafeName'\r\nexport const FIELD_LOAD_SAFE_ADDRESS = 'safeAddress'\r\nexport const FIELD_LOAD_IS_LOADING_SAFE_ADDRESS = 'isLoadingSafeAddress'\r\nexport const FIELD_SAFE_OWNER_LIST = 'safeOwnerList'\r\nexport const FIELD_SAFE_THRESHOLD = 'safeThreshold'\r\n\r\nexport type OwnerFieldListItem = {\r\n  address: string\r\n  name: string\r\n}\r\n\r\nexport type LoadSafeFormValues = {\r\n  [FIELD_LOAD_CUSTOM_SAFE_NAME]?: string\r\n  [FIELD_LOAD_SUGGESTED_SAFE_NAME]: string\r\n  [FIELD_LOAD_SAFE_ADDRESS]?: string\r\n  [FIELD_LOAD_IS_LOADING_SAFE_ADDRESS]: boolean\r\n  [FIELD_SAFE_OWNER_LIST]: Array<OwnerFieldListItem>\r\n  [FIELD_SAFE_THRESHOLD]?: number\r\n}\r\n","import { AddressBookMap } from 'src/logic/addressBook/store/selectors'\r\nimport { checksumAddress } from 'src/utils/checksumAddress'\r\nimport {\r\n  FIELD_LOAD_CUSTOM_SAFE_NAME,\r\n  FIELD_LOAD_SAFE_ADDRESS,\r\n  FIELD_LOAD_SUGGESTED_SAFE_NAME,\r\n  LoadSafeFormValues,\r\n} from './loadFields'\r\n\r\nexport function getLoadSafeName(formValues: LoadSafeFormValues, addressBook: AddressBookMap): string {\r\n  let safeAddress = formValues[FIELD_LOAD_SAFE_ADDRESS] || ''\r\n  safeAddress = safeAddress && checksumAddress(safeAddress)\r\n\r\n  return (\r\n    formValues[FIELD_LOAD_CUSTOM_SAFE_NAME] ||\r\n    addressBook[safeAddress]?.name ||\r\n    formValues[FIELD_LOAD_SUGGESTED_SAFE_NAME]\r\n  )\r\n}\r\n","import { ReactElement, useState, useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useField, useForm } from 'react-final-form'\r\nimport styled from 'styled-components'\r\nimport CheckCircle from '@material-ui/icons/CheckCircle'\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\n\r\nimport Block from 'src/components/layout/Block'\r\nimport Col from 'src/components/layout/Col'\r\nimport Paragraph from 'src/components/layout/Paragraph'\r\nimport Field from 'src/components/forms/Field'\r\nimport TextField from 'src/components/forms/TextField'\r\nimport AddressInput from 'src/components/forms/AddressInput'\r\nimport { ScanQRWrapper } from 'src/components/ScanQRModal/ScanQRWrapper'\r\nimport { isValidAddress } from 'src/utils/isValidAddress'\r\nimport { isChecksumAddress } from 'src/utils/checksumAddress'\r\nimport { getSafeInfo } from 'src/logic/safe/utils/safeInformation'\r\nimport { lg, secondary } from 'src/theme/variables'\r\nimport { AddressBookEntry, makeAddressBookEntry } from 'src/logic/addressBook/model/addressBook'\r\nimport { currentNetworkAddressBookAsMap } from 'src/logic/addressBook/store/selectors'\r\nimport {\r\n  FIELD_LOAD_CUSTOM_SAFE_NAME,\r\n  FIELD_LOAD_IS_LOADING_SAFE_ADDRESS,\r\n  FIELD_LOAD_SAFE_ADDRESS,\r\n  FIELD_SAFE_OWNER_LIST,\r\n  FIELD_SAFE_THRESHOLD,\r\n  LoadSafeFormValues,\r\n} from '../fields/loadFields'\r\nimport NetworkLabel from 'src/components/NetworkLabel/NetworkLabel'\r\nimport { getLoadSafeName } from '../fields/utils'\r\nimport { currentChainId } from 'src/logic/config/store/selectors'\r\n\r\nexport const loadSafeAddressStepLabel = 'Name and address'\r\n\r\nfunction LoadSafeAddressStep(): ReactElement {\r\n  const [ownersWithName, setOwnersWithName] = useState<AddressBookEntry[]>([])\r\n  const [threshold, setThreshold] = useState<number>()\r\n  const [isValidSafeAddress, setIsValidSafeAddress] = useState<boolean>(false)\r\n  const [isSafeInfoLoading, setIsSafeInfoLoading] = useState<boolean>(false)\r\n  const chainId = useSelector(currentChainId)\r\n\r\n  const loadSafeForm = useForm()\r\n  const addressBook = useSelector(currentNetworkAddressBookAsMap)\r\n\r\n  const {\r\n    input: { value: safeAddress },\r\n    meta: { error: safeAddressError },\r\n  } = useField(FIELD_LOAD_SAFE_ADDRESS)\r\n\r\n  useEffect(() => {\r\n    setOwnersWithName([])\r\n    setThreshold(undefined)\r\n    setIsValidSafeAddress(false)\r\n  }, [safeAddress])\r\n\r\n  useEffect(() => {\r\n    const checkSafeAddress = async () => {\r\n      const isValidSafeAddress = isValidAddress(safeAddress) && isChecksumAddress(safeAddress)\r\n      if (!isValidSafeAddress) {\r\n        return\r\n      }\r\n\r\n      setIsSafeInfoLoading(true)\r\n      try {\r\n        const { owners, threshold } = await getSafeInfo(safeAddress)\r\n        setIsSafeInfoLoading(false)\r\n        const ownersWithName = owners.map(({ value: address }) =>\r\n          makeAddressBookEntry(addressBook[address] || { address, name: '', chainId }),\r\n        )\r\n        setOwnersWithName(ownersWithName)\r\n        setThreshold(threshold)\r\n        setIsValidSafeAddress(true)\r\n      } catch (error) {\r\n        setOwnersWithName([])\r\n        setThreshold(undefined)\r\n        setIsValidSafeAddress(false)\r\n      }\r\n      setIsSafeInfoLoading(false)\r\n    }\r\n\r\n    checkSafeAddress()\r\n  }, [safeAddress, addressBook, chainId])\r\n\r\n  useEffect(() => {\r\n    if (threshold) {\r\n      loadSafeForm.change(FIELD_SAFE_THRESHOLD, threshold)\r\n    }\r\n  }, [threshold, loadSafeForm])\r\n\r\n  useEffect(() => {\r\n    loadSafeForm.change(FIELD_LOAD_IS_LOADING_SAFE_ADDRESS, isSafeInfoLoading)\r\n  }, [isSafeInfoLoading, loadSafeForm])\r\n\r\n  useEffect(() => {\r\n    if (ownersWithName) {\r\n      loadSafeForm.change(FIELD_SAFE_OWNER_LIST, ownersWithName)\r\n    }\r\n  }, [ownersWithName, loadSafeForm])\r\n\r\n  const handleScan = (value: string, closeQrModal: () => void): void => {\r\n    loadSafeForm.change(FIELD_LOAD_SAFE_ADDRESS, value)\r\n    closeQrModal()\r\n  }\r\n\r\n  const formValues = loadSafeForm.getState().values as LoadSafeFormValues\r\n  const safeName = getLoadSafeName(formValues, addressBook)\r\n\r\n  return (\r\n    <Container data-testid={'load-safe-address-step'}>\r\n      <Block margin=\"md\">\r\n        <Paragraph color=\"primary\" noMargin size=\"lg\">\r\n          You are about to add an existing Gnosis Safe on <NetworkLabel />. First, choose a name and enter the Safe\r\n          address. The name is only stored locally and will never be shared with Gnosis or any third parties.\r\n        </Paragraph>\r\n        <Paragraph color=\"primary\" size=\"lg\">\r\n          Your connected wallet does not have to be the owner of this Safe. In this case, the interface will provide you\r\n          a read-only view.\r\n        </Paragraph>\r\n\r\n        <Paragraph color=\"primary\" size=\"lg\">\r\n          Don&apos;t have the address of the Safe you created?{' '}\r\n          <StyledLink\r\n            href=\"https://help.gnosis-safe.io/en/articles/4971293-i-don-t-remember-my-safe-address-where-can-i-find-it\"\r\n            rel=\"noopener noreferrer\"\r\n            target=\"_blank\"\r\n          >\r\n            This article explains how to find it.\r\n          </StyledLink>\r\n        </Paragraph>\r\n      </Block>\r\n      <FieldContainer>\r\n        <Col xs={11}>\r\n          <Field\r\n            component={TextField}\r\n            name={FIELD_LOAD_CUSTOM_SAFE_NAME}\r\n            placeholder={safeName}\r\n            text=\"Safe name\"\r\n            type=\"text\"\r\n            testId=\"load-safe-name-field\"\r\n          />\r\n        </Col>\r\n      </FieldContainer>\r\n      <FieldContainer margin=\"lg\">\r\n        <Col xs={11}>\r\n          <AddressInput\r\n            fieldMutator={(val) => {\r\n              loadSafeForm.change(FIELD_LOAD_SAFE_ADDRESS, val)\r\n            }}\r\n            inputAdornment={\r\n              isValidSafeAddress &&\r\n              !safeAddressError && {\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <CheckIconAddressAdornment data-testid={`${FIELD_LOAD_SAFE_ADDRESS}-valid-address-adornment`} />\r\n                  </InputAdornment>\r\n                ),\r\n              }\r\n            }\r\n            name={FIELD_LOAD_SAFE_ADDRESS}\r\n            placeholder=\"Safe Address*\"\r\n            text=\"Safe Address\"\r\n            testId=\"load-safe-address-field\"\r\n          />\r\n        </Col>\r\n        <Col center=\"xs\" middle=\"xs\" xs={1}>\r\n          <ScanQRWrapper handleScan={handleScan} />\r\n        </Col>\r\n      </FieldContainer>\r\n      <Block margin=\"sm\">\r\n        <Paragraph color=\"primary\" noMargin size=\"lg\">\r\n          By continuing you consent to the{' '}\r\n          <StyledLink href=\"https://gnosis-safe.io/terms\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n            terms of use\r\n          </StyledLink>\r\n          {' and '}\r\n          <StyledLink href=\"https://gnosis-safe.io/privacy\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n            privacy policy\r\n          </StyledLink>\r\n          . Most importantly, you confirm that your funds are held securely in the Gnosis Safe, a smart contract on the\r\n          Ethereum blockchain. These funds cannot be accessed by Gnosis at any point.\r\n        </Paragraph>\r\n      </Block>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default LoadSafeAddressStep\r\n\r\nexport const loadSafeAddressStepValidations = (values: {\r\n  [FIELD_LOAD_SAFE_ADDRESS]: string\r\n  [FIELD_SAFE_OWNER_LIST]: string\r\n}): Record<string, string> => {\r\n  let errors = {}\r\n\r\n  const safeAddress = values[FIELD_LOAD_SAFE_ADDRESS]\r\n\r\n  if (!safeAddress) {\r\n    errors = {\r\n      ...errors,\r\n      [FIELD_LOAD_SAFE_ADDRESS]: 'Required',\r\n    }\r\n    return errors\r\n  }\r\n\r\n  // this is to prevent show and error in the safe address field while is loading...\r\n  const isLoadingSafeAddress = values[FIELD_LOAD_IS_LOADING_SAFE_ADDRESS]\r\n  if (isLoadingSafeAddress) {\r\n    return {\r\n      ...errors,\r\n      [FIELD_LOAD_IS_LOADING_SAFE_ADDRESS]: 'loading...',\r\n    }\r\n  }\r\n\r\n  // check that the address is actually a Safe (must have owners)\r\n  const ownerList = values[FIELD_SAFE_OWNER_LIST]\r\n  const isValidSafeAddress = ownerList.length > 0 && isValidAddress(safeAddress)\r\n  if (!isValidSafeAddress) {\r\n    errors = {\r\n      ...errors,\r\n      [FIELD_LOAD_SAFE_ADDRESS]: 'Address given is not a valid Safe address',\r\n    }\r\n  }\r\n\r\n  return errors\r\n}\r\n\r\nconst Container = styled(Block)`\r\n  padding: ${lg};\r\n`\r\n\r\nconst FieldContainer = styled(Block)`\r\n  display: flex;\r\n  max-width: 480px;\r\n  margin-top: 12px;\r\n`\r\n\r\nconst CheckIconAddressAdornment = styled(CheckCircle)`\r\n  color: #03ae60;\r\n  height: 20px;\r\n`\r\n\r\nconst StyledLink = styled.a`\r\n  color: ${secondary};\r\n`\r\n","import { ReactElement } from 'react'\r\nimport { useForm } from 'react-final-form'\r\nimport styled from 'styled-components'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\n\r\nimport Block from 'src/components/layout/Block'\r\nimport Col from 'src/components/layout/Col'\r\nimport Hairline from 'src/components/layout/Hairline'\r\nimport Paragraph from 'src/components/layout/Paragraph'\r\nimport Row from 'src/components/layout/Row'\r\nimport Field from 'src/components/forms/Field'\r\nimport TextField from 'src/components/forms/TextField'\r\nimport PrefixedEthHashInfo from 'src/components/PrefixedEthHashInfo'\r\nimport { disabled, extraSmallFontSize, lg, md, sm } from 'src/theme/variables'\r\nimport { minMaxLength } from 'src/components/forms/validator'\r\nimport { getExplorerInfo } from 'src/config'\r\nimport { FIELD_SAFE_OWNER_LIST } from '../fields/loadFields'\r\nimport NetworkLabel from 'src/components/NetworkLabel/NetworkLabel'\r\n\r\nexport const loadSafeOwnersStepLabel = 'Owners'\r\n\r\nfunction LoadSafeOwnersStep(): ReactElement {\r\n  const loadSafeForm = useForm()\r\n  const ownersWithName = loadSafeForm.getState().values[FIELD_SAFE_OWNER_LIST]\r\n\r\n  return (\r\n    <>\r\n      <TitleContainer>\r\n        <Paragraph color=\"primary\" noMargin size=\"lg\" data-testid=\"load-safe-owners-step\">\r\n          This Safe on <NetworkLabel /> has {ownersWithName.length} owners. Optional: Provide a name for each owner.\r\n        </Paragraph>\r\n      </TitleContainer>\r\n      <Hairline />\r\n      <TableContainer>\r\n        <HeaderContainer>\r\n          <Col xs={4}>NAME</Col>\r\n          <Col xs={8}>ADDRESS</Col>\r\n        </HeaderContainer>\r\n        <Hairline />\r\n        <Block margin=\"md\" padding=\"md\">\r\n          {ownersWithName.map(({ address, name }, index) => {\r\n            const ownerFieldName = `owner-address-${address}`\r\n            return (\r\n              <OwnerContainer key={address} data-testid=\"owner-row\">\r\n                <Col xs={4}>\r\n                  <FieldContainer\r\n                    component={TextField}\r\n                    initialValue={name}\r\n                    name={ownerFieldName}\r\n                    placeholder=\"Owner Name\"\r\n                    text=\"Owner Name\"\r\n                    type=\"text\"\r\n                    validate={minMaxLength(0, 50)}\r\n                    testId={`load-safe-owner-name-${index}`}\r\n                  />\r\n                </Col>\r\n                <Col xs={8}>\r\n                  <OwnerAddressContainer>\r\n                    <PrefixedEthHashInfo hash={address} showAvatar showCopyBtn explorerUrl={getExplorerInfo(address)} />\r\n                  </OwnerAddressContainer>\r\n                </Col>\r\n              </OwnerContainer>\r\n            )\r\n          })}\r\n        </Block>\r\n      </TableContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LoadSafeOwnersStep\r\n\r\nconst TitleContainer = styled(Block)`\r\n  padding: ${md} ${lg};\r\n`\r\n\r\nconst HeaderContainer = styled(Row)`\r\n  padding: ${sm} ${lg};\r\n  color: ${disabled};\r\n  font-size: ${extraSmallFontSize};\r\n`\r\n\r\nconst OwnerContainer = styled(Row)`\r\n  padding: 0 ${lg};\r\n  margin-bottom: 12px;\r\n`\r\n\r\nconst OwnerAddressContainer = styled(Row)`\r\n  align-items: center;\r\n  margin-left: ${sm};\r\n`\r\n\r\nconst FieldContainer = styled(Field)`\r\n  margin-right: ${sm};\r\n`\r\n","import { Fragment, ReactElement } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useForm } from 'react-final-form'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\nimport styled from 'styled-components'\r\n\r\nimport Block from 'src/components/layout/Block'\r\nimport { border, lg, sm, xs } from 'src/theme/variables'\r\nimport Row from 'src/components/layout/Row'\r\nimport Col from 'src/components/layout/Col'\r\nimport Paragraph from 'src/components/layout/Paragraph'\r\nimport { getExplorerInfo } from 'src/config'\r\nimport { userAccountSelector } from 'src/logic/wallets/store/selectors'\r\nimport Hairline from 'src/components/layout/Hairline'\r\nimport PrefixedEthHashInfo from 'src/components/PrefixedEthHashInfo'\r\nimport {\r\n  FIELD_LOAD_SAFE_ADDRESS,\r\n  FIELD_SAFE_OWNER_LIST,\r\n  FIELD_SAFE_THRESHOLD,\r\n  LoadSafeFormValues,\r\n} from '../fields/loadFields'\r\nimport { getLoadSafeName } from '../fields/utils'\r\nimport NetworkLabel from 'src/components/NetworkLabel/NetworkLabel'\r\nimport { currentNetworkAddressBookAsMap } from 'src/logic/addressBook/store/selectors'\r\n\r\nexport const reviewLoadStepLabel = 'Review'\r\n\r\nfunction ReviewLoadStep(): ReactElement {\r\n  const loadSafeForm = useForm()\r\n  const userAddress = useSelector(userAccountSelector)\r\n  const addressBook = useSelector(currentNetworkAddressBookAsMap)\r\n\r\n  const formValues = loadSafeForm.getState().values as LoadSafeFormValues\r\n  const safeName = getLoadSafeName(formValues, addressBook)\r\n  const safeAddress = formValues[FIELD_LOAD_SAFE_ADDRESS] || ''\r\n  const threshold = formValues[FIELD_SAFE_THRESHOLD]\r\n  const ownerList = formValues[FIELD_SAFE_OWNER_LIST]\r\n\r\n  const ownerListWithNames = ownerList.map((owner) => {\r\n    const ownerFieldName = `owner-address-${owner.address}`\r\n    const ownerNameValue = formValues[ownerFieldName]\r\n    return {\r\n      ...owner,\r\n      name: ownerNameValue,\r\n    }\r\n  })\r\n\r\n  const isUserConnectedWalletASAfeOwner = checkIfUserAddressIsAnOwner(ownerList, userAddress)\r\n\r\n  return (\r\n    <Row data-testid={'load-safe-review-step'}>\r\n      <Col layout=\"column\" xs={4}>\r\n        <DetailsContainer>\r\n          <Block margin=\"lg\">\r\n            <Paragraph color=\"primary\" noMargin size=\"lg\" data-testid=\"load-safe-step-three\">\r\n              Review details\r\n            </Paragraph>\r\n          </Block>\r\n          <Block margin=\"lg\">\r\n            <Paragraph color=\"disabled\" noMargin size=\"sm\">\r\n              Network\r\n            </Paragraph>\r\n            <StyledParagraph color=\"disabled\" noMargin size=\"sm\" data-testid=\"load-form-review-safe-network\">\r\n              <NetworkLabel />\r\n            </StyledParagraph>\r\n          </Block>\r\n          <Block margin=\"lg\">\r\n            <Paragraph color=\"disabled\" noMargin size=\"sm\">\r\n              Name of the Safe\r\n            </Paragraph>\r\n            <Paragraph color=\"primary\" noMargin size=\"lg\" weight=\"bolder\" data-testid=\"load-form-review-safe-name\">\r\n              {safeName}\r\n            </Paragraph>\r\n          </Block>\r\n          <Block margin=\"lg\">\r\n            <Paragraph color=\"disabled\" noMargin size=\"sm\">\r\n              Safe address\r\n            </Paragraph>\r\n            <SafeAddressContainer>\r\n              <PrefixedEthHashInfo\r\n                hash={safeAddress}\r\n                shortenHash={4}\r\n                showAvatar\r\n                showCopyBtn\r\n                explorerUrl={getExplorerInfo(safeAddress)}\r\n              />\r\n            </SafeAddressContainer>\r\n          </Block>\r\n          <Block margin=\"lg\">\r\n            <Paragraph color=\"disabled\" noMargin size=\"sm\">\r\n              Connected wallet client is owner?\r\n            </Paragraph>\r\n            <Paragraph data-testid={'connected-wallet-is-owner'} color=\"primary\" noMargin size=\"lg\" weight=\"bolder\">\r\n              {isUserConnectedWalletASAfeOwner ? 'Yes' : 'No (read-only)'}\r\n            </Paragraph>\r\n          </Block>\r\n          <Block margin=\"lg\">\r\n            <Paragraph color=\"disabled\" noMargin size=\"sm\">\r\n              Any transaction requires the confirmation of:\r\n            </Paragraph>\r\n            <Paragraph color=\"primary\" noMargin size=\"lg\" weight=\"bolder\">\r\n              {`${threshold} out of ${ownerList.length} owners`}\r\n            </Paragraph>\r\n          </Block>\r\n        </DetailsContainer>\r\n      </Col>\r\n      <Col layout=\"column\" xs={8}>\r\n        <TableContainer>\r\n          <OwnersContainer>\r\n            <Paragraph color=\"primary\" noMargin size=\"lg\">\r\n              {`${ownerList.length} Safe owners`}\r\n            </Paragraph>\r\n          </OwnersContainer>\r\n          <Hairline />\r\n          {ownerListWithNames.map((owner, index) => (\r\n            <Fragment key={owner.address}>\r\n              <OwnerItemContainer testId={'load-safe-review-owner-name-' + index}>\r\n                <Col align=\"center\" xs={12}>\r\n                  <PrefixedEthHashInfo\r\n                    hash={owner.address}\r\n                    name={owner.name}\r\n                    showAvatar\r\n                    showCopyBtn\r\n                    explorerUrl={getExplorerInfo(owner.address)}\r\n                  />\r\n                </Col>\r\n              </OwnerItemContainer>\r\n              {index !== ownerList.length - 1 && <Hairline />}\r\n            </Fragment>\r\n          ))}\r\n        </TableContainer>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default ReviewLoadStep\r\n\r\nfunction checkIfUserAddressIsAnOwner(owners, userAddress) {\r\n  return owners.some((owner) => owner.address === userAddress)\r\n}\r\n\r\nconst DetailsContainer = styled(Block)`\r\n  padding: ${lg};\r\n  border-right: solid 1px ${border};\r\n  height: 100%;\r\n`\r\n\r\nconst OwnersContainer = styled(Block)`\r\n  padding: ${lg};\r\n`\r\n\r\nconst OwnerItemContainer = styled(Row)`\r\n  align-items: center;\r\n  min-width: fit-content;\r\n  padding: ${sm};\r\n  padding-left: ${lg};\r\n`\r\n\r\nconst SafeAddressContainer = styled(Row)`\r\n  margin-top: ${xs};\r\n  align-items: center;\r\n`\r\nconst StyledParagraph = styled(Paragraph)`\r\n  margin-top: 4px;\r\n`\r\n","import { ReactElement, useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft'\r\n\r\nimport Block from 'src/components/layout/Block'\r\nimport Page from 'src/components/layout/Page'\r\nimport Heading from 'src/components/layout/Heading'\r\nimport Row from 'src/components/layout/Row'\r\nimport { secondary, sm } from 'src/theme/variables'\r\nimport SelectNetworkStep, { selectNetworkStepLabel } from './steps/SelectNetworkStep'\r\nimport LoadSafeAddressStep, {\r\n  loadSafeAddressStepLabel,\r\n  loadSafeAddressStepValidations,\r\n} from './steps/LoadSafeAddressStep'\r\nimport LoadSafeOwnersStep, { loadSafeOwnersStepLabel } from './steps/LoadSafeOwnersStep'\r\nimport ReviewLoadStep, { reviewLoadStepLabel } from './steps/ReviewLoadStep'\r\nimport { useMnemonicSafeName } from 'src/logic/hooks/useMnemonicName'\r\nimport StepperForm, { StepFormElement } from 'src/components/StepperForm/StepperForm'\r\nimport { isValidAddress } from 'src/utils/isValidAddress'\r\nimport { AddressBookEntry, makeAddressBookEntry } from 'src/logic/addressBook/model/addressBook'\r\nimport { addressBookSafeLoad } from 'src/logic/addressBook/store/actions'\r\nimport { checksumAddress } from 'src/utils/checksumAddress'\r\nimport { buildSafe } from 'src/logic/safe/store/actions/fetchSafe'\r\nimport { loadStoredSafes, saveSafes } from 'src/logic/safe/utils'\r\nimport { addOrUpdateSafe } from 'src/logic/safe/store/actions/addOrUpdateSafe'\r\nimport {\r\n  FIELD_LOAD_IS_LOADING_SAFE_ADDRESS,\r\n  FIELD_LOAD_SAFE_ADDRESS,\r\n  FIELD_LOAD_SUGGESTED_SAFE_NAME,\r\n  FIELD_SAFE_OWNER_LIST,\r\n  LoadSafeFormValues,\r\n} from './fields/loadFields'\r\nimport { extractPrefixedSafeAddress, generateSafeRoute, LOAD_SPECIFIC_SAFE_ROUTE, SAFE_ROUTES } from '../routes'\r\nimport { getShortName } from 'src/config'\r\nimport { currentNetworkAddressBookAsMap } from 'src/logic/addressBook/store/selectors'\r\nimport { getLoadSafeName } from './fields/utils'\r\nimport { currentChainId } from 'src/logic/config/store/selectors'\r\n\r\nfunction Load(): ReactElement {\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const { safeAddress, shortName } = extractPrefixedSafeAddress(undefined, LOAD_SPECIFIC_SAFE_ROUTE)\r\n  const safeRandomName = useMnemonicSafeName()\r\n  const [initialFormValues, setInitialFormValues] = useState<LoadSafeFormValues>()\r\n  const addressBook = useSelector(currentNetworkAddressBookAsMap)\r\n  const chainId = useSelector(currentChainId)\r\n\r\n  useEffect(() => {\r\n    const initialValues: LoadSafeFormValues = {\r\n      [FIELD_LOAD_SUGGESTED_SAFE_NAME]: safeRandomName,\r\n      [FIELD_LOAD_SAFE_ADDRESS]: safeAddress,\r\n      [FIELD_LOAD_IS_LOADING_SAFE_ADDRESS]: false,\r\n      [FIELD_SAFE_OWNER_LIST]: [],\r\n    }\r\n    setInitialFormValues(initialValues)\r\n  }, [safeAddress, safeRandomName])\r\n\r\n  const updateAddressBook = (values: LoadSafeFormValues) => {\r\n    const ownerList = values[FIELD_SAFE_OWNER_LIST] as AddressBookEntry[]\r\n\r\n    const ownerEntries = ownerList\r\n      .map((owner) => {\r\n        const ownerFieldName = `owner-address-${owner.address}`\r\n        const ownerNameValue = values[ownerFieldName]\r\n        return {\r\n          ...owner,\r\n          name: ownerNameValue,\r\n        }\r\n      })\r\n      .filter((owner) => !!owner.name)\r\n\r\n    const safeEntry = makeAddressBookEntry({\r\n      address: checksumAddress(values[FIELD_LOAD_SAFE_ADDRESS] || ''),\r\n      name: getLoadSafeName(values, addressBook),\r\n      chainId,\r\n    })\r\n\r\n    dispatch(addressBookSafeLoad([...ownerEntries, safeEntry]))\r\n  }\r\n\r\n  const onSubmitLoadSafe = async (values: LoadSafeFormValues): Promise<void> => {\r\n    const address = values[FIELD_LOAD_SAFE_ADDRESS]\r\n    if (!isValidAddress(address)) {\r\n      return\r\n    }\r\n\r\n    updateAddressBook(values)\r\n\r\n    const checksummedAddress = checksumAddress(address || '')\r\n    const safeProps = await buildSafe(checksummedAddress)\r\n    const storedSafes = loadStoredSafes() || {}\r\n    storedSafes[checksummedAddress] = safeProps\r\n\r\n    saveSafes(storedSafes)\r\n    dispatch(addOrUpdateSafe(safeProps))\r\n\r\n    // Go to the newly added Safe\r\n    history.push(\r\n      generateSafeRoute(SAFE_ROUTES.ASSETS_BALANCES, {\r\n        shortName: getShortName(),\r\n        safeAddress: checksummedAddress,\r\n      }),\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Page>\r\n      <Block>\r\n        <Row align=\"center\">\r\n          <BackIcon disableRipple onClick={history.goBack}>\r\n            <ChevronLeft />\r\n          </BackIcon>\r\n          <Heading tag=\"h2\">Add existing Safe</Heading>\r\n        </Row>\r\n\r\n        {/* key={safeAddress} ensures that it goes to step 1 when the address changes */}\r\n        <StepperForm\r\n          initialValues={initialFormValues}\r\n          testId=\"load-safe-form\"\r\n          onSubmit={onSubmitLoadSafe}\r\n          key={safeAddress}\r\n        >\r\n          {safeAddress && shortName ? null : (\r\n            <StepFormElement label={selectNetworkStepLabel} nextButtonLabel=\"Continue\">\r\n              <SelectNetworkStep />\r\n            </StepFormElement>\r\n          )}\r\n          <StepFormElement label={loadSafeAddressStepLabel} validate={loadSafeAddressStepValidations}>\r\n            <LoadSafeAddressStep />\r\n          </StepFormElement>\r\n          <StepFormElement label={loadSafeOwnersStepLabel} nextButtonLabel=\"Continue\">\r\n            <LoadSafeOwnersStep />\r\n          </StepFormElement>\r\n          <StepFormElement label={reviewLoadStepLabel} nextButtonLabel=\"Add\">\r\n            <ReviewLoadStep />\r\n          </StepFormElement>\r\n        </StepperForm>\r\n      </Block>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Load\r\n\r\nconst BackIcon = styled(IconButton)`\r\n  color: ${secondary};\r\n  padding: ${sm};\r\n  margin-right: 5px;\r\n`\r\n"],"sourceRoot":""}